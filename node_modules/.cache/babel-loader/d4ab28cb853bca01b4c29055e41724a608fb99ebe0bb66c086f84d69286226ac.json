{"ast":null,"code":"var _jsxFileName = \"/Users/egor/Documents/GitHub/SBERProject/src/App.jsx\";\nimport React from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initializeAssistant = getState => {\n  if (process.env.NODE_ENV === 'development') {\n    var _process$env$REACT_AP;\n    return createSmartappDebugger({\n      token: (_process$env$REACT_AP = process.env.REACT_APP_TOKEN) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'ччччччч',\n        screenshotMode: false,\n        tabIndex: -1\n      }\n    });\n  } else {\n    return createAssistant({\n      getState\n    });\n  }\n};\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      notes: [{\n        id: Math.random().toString(36).substring(7),\n        title: 'тест'\n      }],\n      currentQuestion: 1 // добавлено состояние для текущего вопроса\n    };\n\n    this.assistant = initializeAssistant(() => this.getStateForAssistant());\n    this.assistant.on('data', event => {\n      console.log(`assistant.on(data)`, event);\n      if (event.type === 'character') {\n        var _event$character;\n        console.log(`assistant.on(data): character: \"${event === null || event === void 0 ? void 0 : (_event$character = event.character) === null || _event$character === void 0 ? void 0 : _event$character.id}\"`);\n      } else if (event.type === 'insets') {\n        console.log(`assistant.on(data): insets`);\n      } else {\n        const {\n          action\n        } = event;\n        this.dispatchAssistantAction(action);\n      }\n    });\n    this.assistant.on('start', event => {\n      let initialData = this.assistant.getInitialData();\n      console.log(`assistant.on(start)`, event, initialData);\n    });\n    this.assistant.on('command', event => {\n      console.log(`assistant.on(command)`, event);\n    });\n    this.assistant.on('error', event => {\n      console.log(`assistant.on(error)`, event);\n    });\n    this.assistant.on('tts', event => {\n      console.log(`assistant.on(tts)`, event);\n    });\n  }\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n  getStateForAssistant() {\n    console.log('getStateForAssistant: this.state:', this.state);\n    const state = {\n      item_selector: {\n        items: this.state.notes.map((_ref, index) => {\n          let {\n            id,\n            title\n          } = _ref;\n          return {\n            number: index + 1,\n            id,\n            title\n          };\n        }),\n        ignored_words: ['добавить', 'установить', 'запиши', 'поставь', 'закинь', 'напомнить',\n        // addNote.sc\n        'удалить', 'удали',\n        // deleteNote.sc\n        'выполни', 'выполнил', 'сделал' // выполнил|сделал\n        ]\n      }\n    };\n\n    console.log('getStateForAssistant: state:', state);\n    return state;\n  }\n  dispatchAssistantAction(action) {\n    console.log('dispatchAssistantAction', action);\n    if (action) {\n      switch (action.type) {\n        case 'add_note':\n          return this.add_note(action);\n        case 'done_note':\n          return this.done_note(action);\n        case 'delete_note':\n          return this.delete_note(action);\n        default:\n          throw new Error();\n      }\n    }\n  }\n  add_note(action) {\n    console.log('add_note', action);\n    this.setState({\n      notes: [...this.state.notes, {\n        id: Math.random().toString(36).substring(7),\n        title: action.note,\n        completed: false\n      }]\n    });\n  }\n  done_note(action) {\n    console.log('done_note', action);\n    this.setState({\n      notes: this.state.notes.map(note => note.id === action.id ? {\n        ...note,\n        completed: !note.completed\n      } : note)\n    });\n  }\n  _send_action_value(action_id, value) {\n    const data = {\n      action: {\n        action_id: action_id,\n        parameters: {\n          value: value\n        }\n      }\n    };\n    const unsubscribe = this.assistant.sendData(data, data => {\n      const {\n        type,\n        payload\n      } = data;\n      console.log('sendData onData:', type, payload);\n      unsubscribe();\n    });\n  }\n  play_done_note(id) {\n    var _this$state$notes$fin;\n    const completed = (_this$state$notes$fin = this.state.notes.find(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return id;\n    })) === null || _this$state$notes$fin === void 0 ? void 0 : _this$state$notes$fin.completed;\n    if (!completed) {\n      const texts = ['Молодец!', 'Красавчик!', 'Супер!'];\n      const idx = Math.random() * texts.length | 0;\n      this._send_action_value('done', texts[idx]);\n    }\n  }\n  delete_note(action) {\n    console.log('delete_note', action);\n    this.setState({\n      notes: this.state.notes.filter(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id !== action.id;\n      })\n    });\n  }\n  handleButtonClick(value) {\n    console.log(`Button clicked: ${value}`);\n  }\n  render() {\n    const {\n      currentQuestion\n    } = this.state; // извлечение текущего вопроса из состояния\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-progress\",\n        children: [...Array(21)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-number\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option1\",\n          name: \"options\",\n          value: \"option1\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option1\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option1'),\n          children: \"Option 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option2\",\n          name: \"options\",\n          value: \"option2\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option2\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option2'),\n          children: \"Option 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option3\",\n          name: \"options\",\n          value: \"option3\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option3\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option3'),\n          children: \"Option 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option4\",\n          name: \"options\",\n          value: \"option4\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option4\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option4'),\n          children: \"Option 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","createAssistant","createSmartappDebugger","jsxDEV","_jsxDEV","initializeAssistant","getState","process","env","NODE_ENV","_process$env$REACT_AP","token","REACT_APP_TOKEN","initPhrase","REACT_APP_SMARTAPP","nativePanel","defaultText","screenshotMode","tabIndex","App","Component","constructor","props","console","log","state","notes","id","Math","random","toString","substring","title","currentQuestion","assistant","getStateForAssistant","on","event","type","_event$character","character","action","dispatchAssistantAction","initialData","getInitialData","componentDidMount","item_selector","items","map","_ref","index","number","ignored_words","add_note","done_note","delete_note","Error","setState","note","completed","_send_action_value","action_id","value","data","parameters","unsubscribe","sendData","payload","play_done_note","_this$state$notes$fin","find","_ref2","texts","idx","length","filter","_ref3","handleButtonClick","render","className","children","Array","_","fileName","_jsxFileName","lineNumber","columnNumber","name","htmlFor","onClick"],"sources":["/Users/egor/Documents/GitHub/SBERProject/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport './App.css';\n\nconst initializeAssistant = (getState) => {\n  if (process.env.NODE_ENV === 'development') {\n    return createSmartappDebugger({\n      token: process.env.REACT_APP_TOKEN ?? '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'ччччччч',\n        screenshotMode: false,\n        tabIndex: -1,\n      },\n    });\n  } else {\n    return createAssistant({ getState });\n  }\n};\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n\n    this.state = {\n      notes: [{ id: Math.random().toString(36).substring(7), title: 'тест' }],\n      currentQuestion: 1, // добавлено состояние для текущего вопроса\n    };\n\n    this.assistant = initializeAssistant(() => this.getStateForAssistant());\n\n    this.assistant.on('data', (event) => {\n      console.log(`assistant.on(data)`, event);\n      if (event.type === 'character') {\n        console.log(`assistant.on(data): character: \"${event?.character?.id}\"`);\n      } else if (event.type === 'insets') {\n        console.log(`assistant.on(data): insets`);\n      } else {\n        const { action } = event;\n        this.dispatchAssistantAction(action);\n      }\n    });\n\n    this.assistant.on('start', (event) => {\n      let initialData = this.assistant.getInitialData();\n      console.log(`assistant.on(start)`, event, initialData);\n    });\n\n    this.assistant.on('command', (event) => {\n      console.log(`assistant.on(command)`, event);\n    });\n\n    this.assistant.on('error', (event) => {\n      console.log(`assistant.on(error)`, event);\n    });\n\n    this.assistant.on('tts', (event) => {\n      console.log(`assistant.on(tts)`, event);\n    });\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  getStateForAssistant() {\n    console.log('getStateForAssistant: this.state:', this.state);\n    const state = {\n      item_selector: {\n        items: this.state.notes.map(({ id, title }, index) => ({\n          number: index + 1,\n          id,\n          title,\n        })),\n        ignored_words: [\n          'добавить', 'установить', 'запиши', 'поставь', 'закинь', 'напомнить', // addNote.sc\n          'удалить', 'удали',  // deleteNote.sc\n          'выполни', 'выполнил', 'сделал' // выполнил|сделал\n        ],\n      },\n    };\n    console.log('getStateForAssistant: state:', state);\n    return state;\n  }\n\n  dispatchAssistantAction(action) {\n    console.log('dispatchAssistantAction', action);\n    if (action) {\n      switch (action.type) {\n        case 'add_note':\n          return this.add_note(action);\n\n        case 'done_note':\n          return this.done_note(action);\n\n        case 'delete_note':\n          return this.delete_note(action);\n\n        default:\n          throw new Error();\n      }\n    }\n  }\n\n  add_note(action) {\n    console.log('add_note', action);\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        {\n          id: Math.random().toString(36).substring(7),\n          title: action.note,\n          completed: false,\n        },\n      ],\n    });\n  }\n\n  done_note(action) {\n    console.log('done_note', action);\n    this.setState({\n      notes: this.state.notes.map((note) =>\n        note.id === action.id ? { ...note, completed: !note.completed } : note\n      ),\n    });\n  }\n\n  _send_action_value(action_id, value) {\n    const data = {\n      action: {\n        action_id: action_id,\n        parameters: {\n          value: value,\n        },\n      },\n    };\n    const unsubscribe = this.assistant.sendData(data, (data) => {\n      const { type, payload } = data;\n      console.log('sendData onData:', type, payload);\n      unsubscribe();\n    });\n  }\n\n  play_done_note(id) {\n    const completed = this.state.notes.find(({ id }) => id)?.completed;\n    if (!completed) {\n      const texts = ['Молодец!', 'Красавчик!', 'Супер!'];\n      const idx = (Math.random() * texts.length) | 0;\n      this._send_action_value('done', texts[idx]);\n    }\n  }\n\n  delete_note(action) {\n    console.log('delete_note', action);\n    this.setState({\n      notes: this.state.notes.filter(({ id }) => id !== action.id),\n    });\n  }\n\n  handleButtonClick(value) {\n    console.log(`Button clicked: ${value}`);\n  }\n\n  render() {\n    const { currentQuestion } = this.state; // извлечение текущего вопроса из состояния\n\n    return (\n      <div className=\"container\">\n        <div className=\"question-progress\">\n          {[...Array(21)].map((_, index) => (\n            <div key={index} className=\"question-progress-bar\">\n              <div className=\"question-number\">{index + 1}</div>\n            </div>\n          ))}\n        </div>\n        <div className=\"button-container\">\n          <input type=\"radio\" id=\"option1\" name=\"options\" value=\"option1\" className=\"radio-button\" />\n          <label htmlFor=\"option1\" className=\"label-button\" onClick={() => this.handleButtonClick('option1')}>Option 1</label>\n\n          <input type=\"radio\" id=\"option2\" name=\"options\" value=\"option2\" className=\"radio-button\" />\n          <label htmlFor=\"option2\" className=\"label-button\" onClick={() => this.handleButtonClick('option2')}>Option 2</label>\n\n          <input type=\"radio\" id=\"option3\" name=\"options\" value=\"option3\" className=\"radio-button\" />\n          <label htmlFor=\"option3\" className=\"label-button\" onClick={() => this.handleButtonClick('option3')}>Option 3</label>\n\n          <input type=\"radio\" id=\"option4\" name=\"options\" value=\"option4\" className=\"radio-button\" />\n          <label htmlFor=\"option4\" className=\"label-button\" onClick={() => this.handleButtonClick('option4')}>Option 4</label>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}