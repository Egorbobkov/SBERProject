{"ast":null,"code":"var _jsxFileName = \"/Users/egor/Documents/GitHub/SBERProject/src/App.jsx\";\nimport React from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initializeAssistant = getState => {\n  if (process.env.NODE_ENV === 'development') {\n    var _process$env$REACT_AP;\n    return createSmartappDebugger({\n      token: (_process$env$REACT_AP = process.env.REACT_APP_TOKEN) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'ччччччч',\n        screenshotMode: false,\n        tabIndex: -1\n      }\n    });\n  } else {\n    return createAssistant({\n      getState\n    });\n  }\n};\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = {\n      notes: [{\n        id: Math.random().toString(36).substring(7),\n        title: 'тест'\n      }],\n      currentQuestion: 1,\n      // Номер текущего вопроса\n      totalQuestions: 21 // Общее количество вопросов\n    };\n\n    this.assistant = initializeAssistant(() => this.getStateForAssistant());\n    // Привязываем методы к экземпляру компонента\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n  }\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n  getStateForAssistant() {\n    console.log('getStateForAssistant: this.state:', this.state);\n    const state = {\n      item_selector: {\n        items: this.state.notes.map((_ref, index) => {\n          let {\n            id,\n            title\n          } = _ref;\n          return {\n            number: index + 1,\n            id,\n            title\n          };\n        }),\n        ignored_words: ['добавить', 'установить', 'запиши', 'поставь', 'закинь', 'напомнить',\n        // addNote.sc\n        'удалить', 'удали',\n        // deleteNote.sc\n        'выполни', 'выполнил', 'сделал' // выполнил|сделал\n        ]\n      }\n    };\n\n    console.log('getStateForAssistant: state:', state);\n    return state;\n  }\n  dispatchAssistantAction(action) {\n    console.log('dispatchAssistantAction', action);\n    if (action) {\n      switch (action.type) {\n        case 'add_note':\n          return this.add_note(action);\n        case 'done_note':\n          return this.done_note(action);\n        case 'delete_note':\n          return this.delete_note(action);\n        default:\n          throw new Error();\n      }\n    }\n  }\n  add_note(action) {\n    console.log('add_note', action);\n    this.setState({\n      notes: [...this.state.notes, {\n        id: Math.random().toString(36).substring(7),\n        title: action.note,\n        completed: false\n      }]\n    });\n  }\n  done_note(action) {\n    console.log('done_note', action);\n    this.setState({\n      notes: this.state.notes.map(note => note.id === action.id ? {\n        ...note,\n        completed: !note.completed\n      } : note)\n    });\n  }\n  _send_action_value(action_id, value) {\n    const data = {\n      action: {\n        action_id: action_id,\n        parameters: {\n          value: value\n        }\n      }\n    };\n    const unsubscribe = this.assistant.sendData(data, data => {\n      const {\n        type,\n        payload\n      } = data;\n      console.log('sendData onData:', type, payload);\n      unsubscribe();\n    });\n  }\n  play_done_note(id) {\n    var _this$state$notes$fin;\n    const completed = (_this$state$notes$fin = this.state.notes.find(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return id;\n    })) === null || _this$state$notes$fin === void 0 ? void 0 : _this$state$notes$fin.completed;\n    if (!completed) {\n      const texts = ['Молодец!', 'Красавчик!', 'Супер!'];\n      const idx = Math.random() * texts.length | 0;\n      this._send_action_value('done', texts[idx]);\n    }\n  }\n  delete_note(action) {\n    console.log('delete_note', action);\n    this.setState({\n      notes: this.state.notes.filter(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id !== action.id;\n      })\n    });\n  }\n  nextQuestion() {\n    if (this.state.currentQuestion < this.state.totalQuestions) {\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n    }\n  }\n  prevQuestion() {\n    if (this.state.currentQuestion > 1) {\n      this.setState({\n        currentQuestion: this.state.currentQuestion - 1\n      });\n    }\n  }\n  handleButtonClick(value) {\n    console.log(`Button clicked: ${value}`);\n  }\n  render() {\n    console.log('render');\n\n    // Отображение кнопок для перехода к предыдущему и следующему вопросу\n    const {\n      currentQuestion,\n      totalQuestions\n    } = this.state;\n    const showPrevButton = currentQuestion > 1;\n    const showNextButton = currentQuestion < totalQuestions;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [showPrevButton && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.prevQuestion,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), showNextButton && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.nextQuestion,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","createAssistant","createSmartappDebugger","jsxDEV","_jsxDEV","initializeAssistant","getState","process","env","NODE_ENV","_process$env$REACT_AP","token","REACT_APP_TOKEN","initPhrase","REACT_APP_SMARTAPP","nativePanel","defaultText","screenshotMode","tabIndex","App","Component","constructor","props","console","log","state","notes","id","Math","random","toString","substring","title","currentQuestion","totalQuestions","assistant","getStateForAssistant","nextQuestion","bind","prevQuestion","componentDidMount","item_selector","items","map","_ref","index","number","ignored_words","dispatchAssistantAction","action","type","add_note","done_note","delete_note","Error","setState","note","completed","_send_action_value","action_id","value","data","parameters","unsubscribe","sendData","payload","play_done_note","_this$state$notes$fin","find","_ref2","texts","idx","length","filter","_ref3","handleButtonClick","render","showPrevButton","showNextButton","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/egor/Documents/GitHub/SBERProject/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport './App.css';\n\nconst initializeAssistant = (getState) => {\n  if (process.env.NODE_ENV === 'development') {\n    return createSmartappDebugger({\n      token: process.env.REACT_APP_TOKEN ?? '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'ччччччч',\n        screenshotMode: false,\n        tabIndex: -1,\n      },\n    });\n  } else {\n    return createAssistant({ getState });\n  }\n};\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n\n    this.state = {\n      notes: [{ id: Math.random().toString(36).substring(7), title: 'тест' }],\n      currentQuestion: 1, // Номер текущего вопроса\n      totalQuestions: 21, // Общее количество вопросов\n    };\n\n    this.assistant = initializeAssistant(() => this.getStateForAssistant());\n    // Привязываем методы к экземпляру компонента\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  getStateForAssistant() {\n    console.log('getStateForAssistant: this.state:', this.state);\n    const state = {\n      item_selector: {\n        items: this.state.notes.map(({ id, title }, index) => ({\n          number: index + 1,\n          id,\n          title,\n        })),\n        ignored_words: [\n          'добавить', 'установить', 'запиши', 'поставь', 'закинь', 'напомнить', // addNote.sc\n          'удалить', 'удали',  // deleteNote.sc\n          'выполни', 'выполнил', 'сделал' // выполнил|сделал\n        ],\n      },\n    };\n    console.log('getStateForAssistant: state:', state);\n    return state;\n  }\n\n  dispatchAssistantAction(action) {\n    console.log('dispatchAssistantAction', action);\n    if (action) {\n      switch (action.type) {\n        case 'add_note':\n          return this.add_note(action);\n\n        case 'done_note':\n          return this.done_note(action);\n\n        case 'delete_note':\n          return this.delete_note(action);\n\n        default:\n          throw new Error();\n      }\n    }\n  }\n\n  add_note(action) {\n    console.log('add_note', action);\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        {\n          id: Math.random().toString(36).substring(7),\n          title: action.note,\n          completed: false,\n        },\n      ],\n    });\n  }\n\n  done_note(action) {\n    console.log('done_note', action);\n    this.setState({\n      notes: this.state.notes.map((note) =>\n        note.id === action.id ? { ...note, completed: !note.completed } : note\n      ),\n    });\n  }\n\n  _send_action_value(action_id, value) {\n    const data = {\n      action: {\n        action_id: action_id,\n        parameters: {\n          value: value,\n        },\n      },\n    };\n    const unsubscribe = this.assistant.sendData(data, (data) => {\n      const { type, payload } = data;\n      console.log('sendData onData:', type, payload);\n      unsubscribe();\n    });\n  }\n\n  play_done_note(id) {\n    const completed = this.state.notes.find(({ id }) => id)?.completed;\n    if (!completed) {\n      const texts = ['Молодец!', 'Красавчик!', 'Супер!'];\n      const idx = (Math.random() * texts.length) | 0;\n      this._send_action_value('done', texts[idx]);\n    }\n  }\n\n  delete_note(action) {\n    console.log('delete_note', action);\n    this.setState({\n      notes: this.state.notes.filter(({ id }) => id !== action.id),\n    });\n  }\n\n  nextQuestion() {\n    if (this.state.currentQuestion < this.state.totalQuestions) {\n      this.setState({ currentQuestion: this.state.currentQuestion + 1 });\n    }\n  }\n\n  prevQuestion() {\n    if (this.state.currentQuestion > 1) {\n      this.setState({ currentQuestion: this.state.currentQuestion - 1 });\n    }\n  }\n\n  handleButtonClick(value) {\n    console.log(`Button clicked: ${value}`);\n  }\n\n  render() {\n    console.log('render');\n\n    // Отображение кнопок для перехода к предыдущему и следующему вопросу\n    const { currentQuestion, totalQuestions } = this.state;\n    const showPrevButton = currentQuestion > 1;\n    const showNextButton = currentQuestion < totalQuestions;\n\n    return (\n      <div className=\"container\">\n        {/* Информационное табло с номером текущего вопроса */}\n        <div className=\"question-info\">\n          {/* Мапим деления и размещаем номера вопросов над каждым делением */}\n          {/* Код для отображения информационного табло */}\n        </div>\n\n        {/* Контейнер для кнопок */}\n        <div className=\"button-container\">\n          {/* Ваши кнопки */}\n          {/* Кнопка для перехода к предыдущему вопросу */}\n          {showPrevButton && (\n            <button onClick={this.prevQuestion}>Previous</button>\n          )}\n\n          {/* Кнопка для перехода к следующему вопросу */}\n          {showNextButton && (\n            <button onClick={this.nextQuestion}>Next</button>\n          )}\n\n          {/* Ваши остальные кнопки */}\n          {/* Код для отображения остальных кнопок */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}