{"ast":null,"code":"var _jsxFileName = \"/Users/egor/Documents/GitHub/SBERProject/src/App.jsx\";\nimport React from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initializeAssistant = getState => {\n  if (process.env.NODE_ENV === 'development') {\n    var _process$env$REACT_AP;\n    return createSmartappDebugger({\n      token: (_process$env$REACT_AP = process.env.REACT_APP_TOKEN) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'ччччччч',\n        screenshotMode: false,\n        tabIndex: -1\n      }\n    });\n  } else {\n    return createAssistant({\n      getState\n    });\n  }\n};\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [{\n        id: Math.random().toString(36).substring(7),\n        title: 'тест'\n      }],\n      currentQuestion: 1,\n      totalQuestions: 21\n    };\n    this.assistant = initializeAssistant(() => this.getStateForAssistant());\n    this.assistant.on('data', event => {\n      if (event.type === 'character') {\n        var _event$character;\n        console.log(`assistant.on(data): character: \"${event === null || event === void 0 ? void 0 : (_event$character = event.character) === null || _event$character === void 0 ? void 0 : _event$character.id}\"`);\n      } else if (event.type === 'insets') {\n        console.log(`assistant.on(data): insets`);\n      } else {\n        const {\n          action\n        } = event;\n        this.dispatchAssistantAction(action);\n      }\n    });\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n  }\n  nextQuestion() {\n    this.setState(prevState => ({\n      currentQuestion: Math.min(prevState.currentQuestion + 1, prevState.totalQuestions)\n    }));\n  }\n  prevQuestion() {\n    this.setState(prevState => ({\n      currentQuestion: Math.max(prevState.currentQuestion - 1, 1)\n    }));\n  }\n  getStateForAssistant() {\n    const state = {\n      item_selector: {\n        items: this.state.notes.map((_ref, index) => {\n          let {\n            id,\n            title\n          } = _ref;\n          return {\n            number: index + 1,\n            id,\n            title\n          };\n        }),\n        ignored_words: ['добавить', 'установить', 'запиши', 'поставь', 'закинь', 'напомнить', 'удалить', 'удали', 'выполни', 'выполнил', 'сделал']\n      }\n    };\n    return state;\n  }\n  dispatchAssistantAction(action) {\n    if (action) {\n      switch (action.type) {\n        case 'add_note':\n          return this.add_note(action);\n        case 'done_note':\n          return this.done_note(action);\n        case 'delete_note':\n          return this.delete_note(action);\n        default:\n          throw new Error();\n      }\n    }\n  }\n  add_note(action) {\n    this.setState({\n      notes: [...this.state.notes, {\n        id: Math.random().toString(36).substring(7),\n        title: action.note,\n        completed: false\n      }]\n    });\n  }\n  done_note(action) {\n    this.setState({\n      notes: this.state.notes.map(note => note.id === action.id ? {\n        ...note,\n        completed: !note.completed\n      } : note)\n    });\n  }\n  _send_action_value(action_id, value) {\n    const data = {\n      action: {\n        action_id: action_id,\n        parameters: {\n          value: value\n        }\n      }\n    };\n    const unsubscribe = this.assistant.sendData(data, data => {\n      const {\n        type,\n        payload\n      } = data;\n      console.log('sendData onData:', type, payload);\n      unsubscribe();\n    });\n  }\n  play_done_note(id) {\n    var _this$state$notes$fin;\n    const completed = (_this$state$notes$fin = this.state.notes.find(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return id;\n    })) === null || _this$state$notes$fin === void 0 ? void 0 : _this$state$notes$fin.completed;\n    if (!completed) {\n      const texts = ['Молодец!', 'Красавчик!', 'Супер!'];\n      const idx = Math.random() * texts.length | 0;\n      this._send_action_value('done', texts[idx]);\n    }\n  }\n  delete_note(action) {\n    this.setState({\n      notes: this.state.notes.filter(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id !== action.id;\n      })\n    });\n  }\n  handleButtonClick(value) {\n    console.log(`Button clicked: ${value}`);\n  }\n  render() {\n    const divisions = Array.from({\n      length: this.state.totalQuestions\n    }, (_, index) => index + 1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-info\",\n        children: divisions.map(division => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"division-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `question-number ${division <= this.state.currentQuestion ? 'active' : ''}`,\n            children: division\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `division ${division <= this.state.currentQuestion ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, division, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option1\",\n          name: \"options\",\n          value: \"option1\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option1\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option1'),\n          children: \"\\u042F \\u043D\\u0435 \\u0447\\u0443\\u0432\\u0441\\u0442\\u0432\\u0443\\u044E \\u0441\\u0435\\u0431\\u044F \\u0440\\u0430\\u0441\\u0441\\u0442\\u0440\\u043E\\u0435\\u043D\\u043D\\u044B\\u043C, \\u043F\\u0435\\u0447\\u0430\\u043B\\u044C\\u043D\\u044B\\u043C.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option2\",\n          name: \"options\",\n          value: \"option2\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option2\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option2'),\n          children: \"\\u042F \\u0440\\u0430\\u0441\\u0441\\u0442\\u0440\\u043E\\u0435\\u043D.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option3\",\n          name: \"options\",\n          value: \"option3\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option3\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option3'),\n          children: \"\\u042F \\u0432\\u0441\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F \\u0440\\u0430\\u0441\\u0441\\u0442\\u0440\\u043E\\u0435\\u043D \\u0438 \\u043D\\u0435 \\u043C\\u043E\\u0433\\u0443 \\u043E\\u0442 \\u044D\\u0442\\u043E\\u0433\\u043E \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\\u0441\\u044F.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"option4\",\n          name: \"options\",\n          value: \"option4\",\n          className: \"radio-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"option4\",\n          className: \"label-button\",\n          onClick: () => this.handleButtonClick('option4'),\n          children: \"\\u042F \\u043D\\u0430\\u0441\\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0440\\u0430\\u0441\\u0441\\u0442\\u0440\\u043E\\u0435\\u043D \\u0438 \\u043D\\u0435\\u0441\\u0447\\u0430\\u0441\\u0442\\u043B\\u0438\\u0432, \\u0447\\u0442\\u043E \\u043D\\u0435 \\u043C\\u043E\\u0433\\u0443 \\u044D\\u0442\\u043E \\u0432\\u044B\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-button\",\n            onClick: () => this.prevQuestion(),\n            children: \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-button\",\n            onClick: () => this.nextQuestion(),\n            children: \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","createAssistant","createSmartappDebugger","jsxDEV","_jsxDEV","initializeAssistant","getState","process","env","NODE_ENV","_process$env$REACT_AP","token","REACT_APP_TOKEN","initPhrase","REACT_APP_SMARTAPP","nativePanel","defaultText","screenshotMode","tabIndex","App","Component","constructor","props","state","notes","id","Math","random","toString","substring","title","currentQuestion","totalQuestions","assistant","getStateForAssistant","on","event","type","_event$character","console","log","character","action","dispatchAssistantAction","nextQuestion","bind","prevQuestion","setState","prevState","min","max","item_selector","items","map","_ref","index","number","ignored_words","add_note","done_note","delete_note","Error","note","completed","_send_action_value","action_id","value","data","parameters","unsubscribe","sendData","payload","play_done_note","_this$state$notes$fin","find","_ref2","texts","idx","length","filter","_ref3","handleButtonClick","render","divisions","Array","from","_","className","children","division","fileName","_jsxFileName","lineNumber","columnNumber","name","htmlFor","onClick"],"sources":["/Users/egor/Documents/GitHub/SBERProject/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport { createAssistant, createSmartappDebugger } from '@salutejs/client';\nimport './App.css';\n\nconst initializeAssistant = (getState) => {\n  if (process.env.NODE_ENV === 'development') {\n    return createSmartappDebugger({\n      token: process.env.REACT_APP_TOKEN ?? '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'ччччччч',\n        screenshotMode: false,\n        tabIndex: -1,\n      },\n    });\n  } else {\n    return createAssistant({ getState });\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notes: [{ id: Math.random().toString(36).substring(7), title: 'тест' }],\n      currentQuestion: 1,\n      totalQuestions: 21,\n    };\n\n    this.assistant = initializeAssistant(() => this.getStateForAssistant());\n    this.assistant.on('data', (event) => {\n      if (event.type === 'character') {\n        console.log(`assistant.on(data): character: \"${event?.character?.id}\"`);\n      } else if (event.type === 'insets') {\n        console.log(`assistant.on(data): insets`);\n      } else {\n        const { action } = event;\n        this.dispatchAssistantAction(action);\n      }\n    });\n\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.prevQuestion = this.prevQuestion.bind(this);\n  }\n\n  nextQuestion() {\n    this.setState(prevState => ({\n      currentQuestion: Math.min(prevState.currentQuestion + 1, prevState.totalQuestions)\n    }));\n  }\n\n  prevQuestion() {\n    this.setState(prevState => ({\n      currentQuestion: Math.max(prevState.currentQuestion - 1, 1)\n    }));\n  }\n\n  getStateForAssistant() {\n    const state = {\n      item_selector: {\n        items: this.state.notes.map(({ id, title }, index) => ({\n          number: index + 1,\n          id,\n          title,\n        })),\n        ignored_words: [\n          'добавить', 'установить', 'запиши', 'поставь', 'закинь', 'напомнить',\n          'удалить', 'удали',\n          'выполни', 'выполнил', 'сделал'\n        ],\n      },\n    };\n    return state;\n  }\n\n  dispatchAssistantAction(action) {\n    if (action) {\n      switch (action.type) {\n        case 'add_note':\n          return this.add_note(action);\n\n        case 'done_note':\n          return this.done_note(action);\n\n        case 'delete_note':\n          return this.delete_note(action);\n\n        default:\n          throw new Error();\n      }\n    }\n  }\n\n  add_note(action) {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        {\n          id: Math.random().toString(36).substring(7),\n          title: action.note,\n          completed: false,\n        },\n      ],\n    });\n  }\n\n  done_note(action) {\n    this.setState({\n      notes: this.state.notes.map((note) =>\n        note.id === action.id ? { ...note, completed: !note.completed } : note\n      ),\n    });\n  }\n\n  _send_action_value(action_id, value) {\n    const data = {\n      action: {\n        action_id: action_id,\n        parameters: {\n          value: value,\n        },\n      },\n    };\n    const unsubscribe = this.assistant.sendData(data, (data) => {\n      const { type, payload } = data;\n      console.log('sendData onData:', type, payload);\n      unsubscribe();\n    });\n  }\n\n  play_done_note(id) {\n    const completed = this.state.notes.find(({ id }) => id)?.completed;\n    if (!completed) {\n      const texts = ['Молодец!', 'Красавчик!', 'Супер!'];\n      const idx = (Math.random() * texts.length) | 0;\n      this._send_action_value('done', texts[idx]);\n    }\n  }\n\n  delete_note(action) {\n    this.setState({\n      notes: this.state.notes.filter(({ id }) => id !== action.id),\n    });\n  }\n\n  handleButtonClick(value) {\n    console.log(`Button clicked: ${value}`);\n  }\n\n  render() {\n    const divisions = Array.from({ length: this.state.totalQuestions }, (_, index) => index + 1);\n\n    return (\n      <div className=\"container\">\n        <div className=\"question-info\">\n          {divisions.map((division) => (\n            <div key={division} className=\"division-container\">\n              <div className={`question-number ${division <= this.state.currentQuestion ? 'active' : ''}`}>\n                {division}\n              </div>\n              <div className={`division ${division <= this.state.currentQuestion ? 'active' : ''}`} />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"button-container\">\n          <input type=\"radio\" id=\"option1\" name=\"options\" value=\"option1\" className=\"radio-button\" />\n          <label htmlFor=\"option1\" className=\"label-button\" onClick={() => this.handleButtonClick('option1')}>Я не чувствую себя расстроенным, печальным.</label>\n\n          <input type=\"radio\" id=\"option2\" name=\"options\" value=\"option2\" className=\"radio-button\" />\n          <label htmlFor=\"option2\" className=\"label-button\" onClick={() => this.handleButtonClick('option2')}>Я расстроен.</label>\n\n          <input type=\"radio\" id=\"option3\" name=\"options\" value=\"option3\" className=\"radio-button\" />\n          <label htmlFor=\"option3\" className=\"label-button\" onClick={() => this.handleButtonClick('option3')}>Я все время расстроен и не могу от этого отключиться.</label>\n\n          <input type=\"radio\" id=\"option4\" name=\"options\" value=\"option4\" className=\"radio-button\" />\n          <label htmlFor=\"option4\" className=\"label-button\" onClick={() => this.handleButtonClick('option4')}>Я настолько расстроен и несчастлив, что не могу это выдержать.</label>\n\n          <div className=\"navigation-button-container\">\n            <button className=\"prev-button\" onClick={() => this.prevQuestion()}>Предыдущий вопрос</button>\n            <button className=\"next-button\" onClick={() => this.nextQuestion()}>Следующий вопрос</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}