{"ast":null,"code":"import { _ as __assign, b as __awaiter, c as __generator, d as createNanoEvents, a as __rest, e as __spreadArray } from './common-ba25e019.js';\nimport { b as commonjsRequire, r as requireMinimal, c as commonjsGlobal, p as protoExports, M as MessageNames, d as createProtocol } from './sdk-082d96e7.js';\nvar asr = {\n  exports: {}\n};\n\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\n(function (module) {\n  (function (global, factory) {\n    /* global define, require, module */\n\n    /* AMD */if (typeof commonjsRequire === 'function' && 'object' === 'object' && module && module.exports) module.exports = factory(requireMinimal());\n  })(commonjsGlobal, function ($protobuf) {\n    // Common aliases\n    var $Reader = $protobuf.Reader,\n      $util = $protobuf.util;\n\n    // Exported root namespace\n    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n    $root.Variables = function () {\n      /**\n       * Properties of a Variables.\n       * @exports IVariables\n       * @interface IVariables\n       * @property {Object.<string,string>|null} [variables] Variables variables\n       */\n\n      /**\n       * Constructs a new Variables.\n       * @exports Variables\n       * @classdesc Represents a Variables.\n       * @implements IVariables\n       * @constructor\n       * @param {IVariables=} [properties] Properties to set\n       */\n      function Variables(properties) {\n        this.variables = {};\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * Variables variables.\n       * @member {Object.<string,string>} variables\n       * @memberof Variables\n       * @instance\n       */\n      Variables.prototype.variables = $util.emptyObject;\n\n      /**\n       * Decodes a Variables message from the specified reader or buffer.\n       * @function decode\n       * @memberof Variables\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {Variables} Variables\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      Variables.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.Variables(),\n          key,\n          value;\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                if (message.variables === $util.emptyObject) message.variables = {};\n                var end2 = reader.uint32() + reader.pos;\n                key = \"\";\n                value = \"\";\n                while (reader.pos < end2) {\n                  var tag2 = reader.uint32();\n                  switch (tag2 >>> 3) {\n                    case 1:\n                      key = reader.string();\n                      break;\n                    case 2:\n                      value = reader.string();\n                      break;\n                    default:\n                      reader.skipType(tag2 & 7);\n                      break;\n                  }\n                }\n                message.variables[key] = value;\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      return Variables;\n    }();\n    $root.UndecodedSeconds = function () {\n      /**\n       * Properties of an UndecodedSeconds.\n       * @exports IUndecodedSeconds\n       * @interface IUndecodedSeconds\n       * @property {number|null} [undecodedSeconds] UndecodedSeconds undecodedSeconds\n       */\n\n      /**\n       * Constructs a new UndecodedSeconds.\n       * @exports UndecodedSeconds\n       * @classdesc Represents an UndecodedSeconds.\n       * @implements IUndecodedSeconds\n       * @constructor\n       * @param {IUndecodedSeconds=} [properties] Properties to set\n       */\n      function UndecodedSeconds(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * UndecodedSeconds undecodedSeconds.\n       * @member {number} undecodedSeconds\n       * @memberof UndecodedSeconds\n       * @instance\n       */\n      UndecodedSeconds.prototype.undecodedSeconds = 0;\n\n      /**\n       * Decodes an UndecodedSeconds message from the specified reader or buffer.\n       * @function decode\n       * @memberof UndecodedSeconds\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {UndecodedSeconds} UndecodedSeconds\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      UndecodedSeconds.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.UndecodedSeconds();\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.undecodedSeconds = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      return UndecodedSeconds;\n    }();\n    $root.FullyFinalized = function () {\n      /**\n       * Properties of a FullyFinalized.\n       * @exports IFullyFinalized\n       * @interface IFullyFinalized\n       */\n\n      /**\n       * Constructs a new FullyFinalized.\n       * @exports FullyFinalized\n       * @classdesc Represents a FullyFinalized.\n       * @implements IFullyFinalized\n       * @constructor\n       * @param {IFullyFinalized=} [properties] Properties to set\n       */\n      function FullyFinalized(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * Decodes a FullyFinalized message from the specified reader or buffer.\n       * @function decode\n       * @memberof FullyFinalized\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {FullyFinalized} FullyFinalized\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      FullyFinalized.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.FullyFinalized();\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      return FullyFinalized;\n    }();\n    $root.EmotionResult = function () {\n      /**\n       * Properties of an EmotionResult.\n       * @exports IEmotionResult\n       * @interface IEmotionResult\n       * @property {string|null} [name] EmotionResult name\n       * @property {number|null} [confidence] EmotionResult confidence\n       */\n\n      /**\n       * Constructs a new EmotionResult.\n       * @exports EmotionResult\n       * @classdesc Represents an EmotionResult.\n       * @implements IEmotionResult\n       * @constructor\n       * @param {IEmotionResult=} [properties] Properties to set\n       */\n      function EmotionResult(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * EmotionResult name.\n       * @member {string} name\n       * @memberof EmotionResult\n       * @instance\n       */\n      EmotionResult.prototype.name = \"\";\n\n      /**\n       * EmotionResult confidence.\n       * @member {number} confidence\n       * @memberof EmotionResult\n       * @instance\n       */\n      EmotionResult.prototype.confidence = 0;\n\n      /**\n       * Decodes an EmotionResult message from the specified reader or buffer.\n       * @function decode\n       * @memberof EmotionResult\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {EmotionResult} EmotionResult\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      EmotionResult.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.EmotionResult();\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.name = reader.string();\n                break;\n              }\n            case 2:\n              {\n                message.confidence = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      return EmotionResult;\n    }();\n    $root.Hypothesis = function () {\n      /**\n       * Properties of a Hypothesis.\n       * @exports IHypothesis\n       * @interface IHypothesis\n       * @property {string|null} [words] Hypothesis words\n       * @property {number|null} [acousticCost] Hypothesis acousticCost\n       * @property {number|null} [linguisticCost] Hypothesis linguisticCost\n       * @property {number|null} [finalCost] Hypothesis finalCost\n       * @property {number|null} [phraseStart] Hypothesis phraseStart\n       * @property {number|null} [phraseEnd] Hypothesis phraseEnd\n       * @property {string|null} [normalizedText] Hypothesis normalizedText\n       */\n\n      /**\n       * Constructs a new Hypothesis.\n       * @exports Hypothesis\n       * @classdesc Represents a Hypothesis.\n       * @implements IHypothesis\n       * @constructor\n       * @param {IHypothesis=} [properties] Properties to set\n       */\n      function Hypothesis(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * Hypothesis words.\n       * @member {string} words\n       * @memberof Hypothesis\n       * @instance\n       */\n      Hypothesis.prototype.words = \"\";\n\n      /**\n       * Hypothesis acousticCost.\n       * @member {number} acousticCost\n       * @memberof Hypothesis\n       * @instance\n       */\n      Hypothesis.prototype.acousticCost = 0;\n\n      /**\n       * Hypothesis linguisticCost.\n       * @member {number} linguisticCost\n       * @memberof Hypothesis\n       * @instance\n       */\n      Hypothesis.prototype.linguisticCost = 0;\n\n      /**\n       * Hypothesis finalCost.\n       * @member {number} finalCost\n       * @memberof Hypothesis\n       * @instance\n       */\n      Hypothesis.prototype.finalCost = 0;\n\n      /**\n       * Hypothesis phraseStart.\n       * @member {number} phraseStart\n       * @memberof Hypothesis\n       * @instance\n       */\n      Hypothesis.prototype.phraseStart = 0;\n\n      /**\n       * Hypothesis phraseEnd.\n       * @member {number} phraseEnd\n       * @memberof Hypothesis\n       * @instance\n       */\n      Hypothesis.prototype.phraseEnd = 0;\n\n      /**\n       * Hypothesis normalizedText.\n       * @member {string} normalizedText\n       * @memberof Hypothesis\n       * @instance\n       */\n      Hypothesis.prototype.normalizedText = \"\";\n\n      /**\n       * Decodes a Hypothesis message from the specified reader or buffer.\n       * @function decode\n       * @memberof Hypothesis\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {Hypothesis} Hypothesis\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      Hypothesis.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.Hypothesis();\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.words = reader.string();\n                break;\n              }\n            case 2:\n              {\n                message.acousticCost = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.linguisticCost = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.finalCost = reader.float();\n                break;\n              }\n            case 5:\n              {\n                message.phraseStart = reader.float();\n                break;\n              }\n            case 6:\n              {\n                message.phraseEnd = reader.float();\n                break;\n              }\n            case 7:\n              {\n                message.normalizedText = reader.string();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      return Hypothesis;\n    }();\n    $root.DecoderResult = function () {\n      /**\n       * Properties of a DecoderResult.\n       * @exports IDecoderResult\n       * @interface IDecoderResult\n       * @property {Array.<IHypothesis>|null} [hypothesis] DecoderResult hypothesis\n       * @property {number|null} [chunkStart] DecoderResult chunkStart\n       * @property {number|null} [chunkEnd] DecoderResult chunkEnd\n       * @property {number|null} [timeEndpointDetectionMs] DecoderResult timeEndpointDetectionMs\n       * @property {number|null} [timeDecodingMs] DecoderResult timeDecodingMs\n       * @property {IVariables|null} [variables] DecoderResult variables\n       * @property {boolean|null} [isFinal] DecoderResult isFinal\n       * @property {Array.<IEmotionResult>|null} [emotionResult] DecoderResult emotionResult\n       * @property {Array.<DecoderResult.IContextAnswer>|null} [contextAnswer] DecoderResult contextAnswer\n       */\n\n      /**\n       * Constructs a new DecoderResult.\n       * @exports DecoderResult\n       * @classdesc Represents a DecoderResult.\n       * @implements IDecoderResult\n       * @constructor\n       * @param {IDecoderResult=} [properties] Properties to set\n       */\n      function DecoderResult(properties) {\n        this.hypothesis = [];\n        this.emotionResult = [];\n        this.contextAnswer = [];\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * DecoderResult hypothesis.\n       * @member {Array.<IHypothesis>} hypothesis\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.hypothesis = $util.emptyArray;\n\n      /**\n       * DecoderResult chunkStart.\n       * @member {number} chunkStart\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.chunkStart = 0;\n\n      /**\n       * DecoderResult chunkEnd.\n       * @member {number} chunkEnd\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.chunkEnd = 0;\n\n      /**\n       * DecoderResult timeEndpointDetectionMs.\n       * @member {number} timeEndpointDetectionMs\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.timeEndpointDetectionMs = 0;\n\n      /**\n       * DecoderResult timeDecodingMs.\n       * @member {number} timeDecodingMs\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.timeDecodingMs = 0;\n\n      /**\n       * DecoderResult variables.\n       * @member {IVariables|null|undefined} variables\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.variables = null;\n\n      /**\n       * DecoderResult isFinal.\n       * @member {boolean} isFinal\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.isFinal = false;\n\n      /**\n       * DecoderResult emotionResult.\n       * @member {Array.<IEmotionResult>} emotionResult\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.emotionResult = $util.emptyArray;\n\n      /**\n       * DecoderResult contextAnswer.\n       * @member {Array.<DecoderResult.IContextAnswer>} contextAnswer\n       * @memberof DecoderResult\n       * @instance\n       */\n      DecoderResult.prototype.contextAnswer = $util.emptyArray;\n\n      /**\n       * Decodes a DecoderResult message from the specified reader or buffer.\n       * @function decode\n       * @memberof DecoderResult\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {DecoderResult} DecoderResult\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      DecoderResult.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.DecoderResult();\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                if (!(message.hypothesis && message.hypothesis.length)) message.hypothesis = [];\n                message.hypothesis.push($root.Hypothesis.decode(reader, reader.uint32()));\n                break;\n              }\n            case 2:\n              {\n                message.chunkStart = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.chunkEnd = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.timeEndpointDetectionMs = reader.float();\n                break;\n              }\n            case 5:\n              {\n                message.timeDecodingMs = reader.float();\n                break;\n              }\n            case 6:\n              {\n                message.variables = $root.Variables.decode(reader, reader.uint32());\n                break;\n              }\n            case 7:\n              {\n                message.isFinal = reader.bool();\n                break;\n              }\n            case 8:\n              {\n                if (!(message.emotionResult && message.emotionResult.length)) message.emotionResult = [];\n                message.emotionResult.push($root.EmotionResult.decode(reader, reader.uint32()));\n                break;\n              }\n            case 9:\n              {\n                if (!(message.contextAnswer && message.contextAnswer.length)) message.contextAnswer = [];\n                message.contextAnswer.push($root.DecoderResult.ContextAnswer.decode(reader, reader.uint32()));\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      DecoderResult.ContextAnswer = function () {\n        /**\n         * Properties of a ContextAnswer.\n         * @memberof DecoderResult\n         * @interface IContextAnswer\n         * @property {Array.<DecoderResult.ContextAnswer.IContextRef>|null} [contextResult] ContextAnswer contextResult\n         */\n\n        /**\n         * Constructs a new ContextAnswer.\n         * @memberof DecoderResult\n         * @classdesc Represents a ContextAnswer.\n         * @implements IContextAnswer\n         * @constructor\n         * @param {DecoderResult.IContextAnswer=} [properties] Properties to set\n         */\n        function ContextAnswer(properties) {\n          this.contextResult = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ContextAnswer contextResult.\n         * @member {Array.<DecoderResult.ContextAnswer.IContextRef>} contextResult\n         * @memberof DecoderResult.ContextAnswer\n         * @instance\n         */\n        ContextAnswer.prototype.contextResult = $util.emptyArray;\n\n        /**\n         * Decodes a ContextAnswer message from the specified reader or buffer.\n         * @function decode\n         * @memberof DecoderResult.ContextAnswer\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {DecoderResult.ContextAnswer} ContextAnswer\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ContextAnswer.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.DecoderResult.ContextAnswer();\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n              case 1:\n                {\n                  if (!(message.contextResult && message.contextResult.length)) message.contextResult = [];\n                  message.contextResult.push($root.DecoderResult.ContextAnswer.ContextRef.decode(reader, reader.uint32()));\n                  break;\n                }\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n          return message;\n        };\n        ContextAnswer.ContextRef = function () {\n          /**\n           * Properties of a ContextRef.\n           * @memberof DecoderResult.ContextAnswer\n           * @interface IContextRef\n           * @property {string|null} [id] ContextRef id\n           * @property {number|null} [index] ContextRef index\n           * @property {string|null} [originalValue] ContextRef originalValue\n           * @property {string|null} [predictedValue] ContextRef predictedValue\n           * @property {number|null} [score] ContextRef score\n           */\n\n          /**\n           * Constructs a new ContextRef.\n           * @memberof DecoderResult.ContextAnswer\n           * @classdesc Represents a ContextRef.\n           * @implements IContextRef\n           * @constructor\n           * @param {DecoderResult.ContextAnswer.IContextRef=} [properties] Properties to set\n           */\n          function ContextRef(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n\n          /**\n           * ContextRef id.\n           * @member {string} id\n           * @memberof DecoderResult.ContextAnswer.ContextRef\n           * @instance\n           */\n          ContextRef.prototype.id = \"\";\n\n          /**\n           * ContextRef index.\n           * @member {number} index\n           * @memberof DecoderResult.ContextAnswer.ContextRef\n           * @instance\n           */\n          ContextRef.prototype.index = 0;\n\n          /**\n           * ContextRef originalValue.\n           * @member {string} originalValue\n           * @memberof DecoderResult.ContextAnswer.ContextRef\n           * @instance\n           */\n          ContextRef.prototype.originalValue = \"\";\n\n          /**\n           * ContextRef predictedValue.\n           * @member {string} predictedValue\n           * @memberof DecoderResult.ContextAnswer.ContextRef\n           * @instance\n           */\n          ContextRef.prototype.predictedValue = \"\";\n\n          /**\n           * ContextRef score.\n           * @member {number} score\n           * @memberof DecoderResult.ContextAnswer.ContextRef\n           * @instance\n           */\n          ContextRef.prototype.score = 0;\n\n          /**\n           * Decodes a ContextRef message from the specified reader or buffer.\n           * @function decode\n           * @memberof DecoderResult.ContextAnswer.ContextRef\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @param {number} [length] Message length if known beforehand\n           * @returns {DecoderResult.ContextAnswer.ContextRef} ContextRef\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n          ContextRef.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.DecoderResult.ContextAnswer.ContextRef();\n            while (reader.pos < end) {\n              var tag = reader.uint32();\n              switch (tag >>> 3) {\n                case 1:\n                  {\n                    message.id = reader.string();\n                    break;\n                  }\n                case 2:\n                  {\n                    message.index = reader.int32();\n                    break;\n                  }\n                case 3:\n                  {\n                    message.originalValue = reader.string();\n                    break;\n                  }\n                case 4:\n                  {\n                    message.predictedValue = reader.string();\n                    break;\n                  }\n                case 5:\n                  {\n                    message.score = reader.float();\n                    break;\n                  }\n                default:\n                  reader.skipType(tag & 7);\n                  break;\n              }\n            }\n            return message;\n          };\n          return ContextRef;\n        }();\n        return ContextAnswer;\n      }();\n      return DecoderResult;\n    }();\n    $root.ErrorResponse = function () {\n      /**\n       * Properties of an ErrorResponse.\n       * @exports IErrorResponse\n       * @interface IErrorResponse\n       * @property {string|null} [errorMessage] ErrorResponse errorMessage\n       */\n\n      /**\n       * Constructs a new ErrorResponse.\n       * @exports ErrorResponse\n       * @classdesc Represents an ErrorResponse.\n       * @implements IErrorResponse\n       * @constructor\n       * @param {IErrorResponse=} [properties] Properties to set\n       */\n      function ErrorResponse(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * ErrorResponse errorMessage.\n       * @member {string} errorMessage\n       * @memberof ErrorResponse\n       * @instance\n       */\n      ErrorResponse.prototype.errorMessage = \"\";\n\n      /**\n       * Decodes an ErrorResponse message from the specified reader or buffer.\n       * @function decode\n       * @memberof ErrorResponse\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {ErrorResponse} ErrorResponse\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      ErrorResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.ErrorResponse();\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.errorMessage = reader.string();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      return ErrorResponse;\n    }();\n    $root.PacketWrapperFromServer = function () {\n      /**\n       * Properties of a PacketWrapperFromServer.\n       * @exports IPacketWrapperFromServer\n       * @interface IPacketWrapperFromServer\n       * @property {IUndecodedSeconds|null} [undecodedSecondsField] PacketWrapperFromServer undecodedSecondsField\n       * @property {IFullyFinalized|null} [fullyFinalizedField] PacketWrapperFromServer fullyFinalizedField\n       * @property {IDecoderResult|null} [decoderResultField] PacketWrapperFromServer decoderResultField\n       * @property {IErrorResponse|null} [errorResponse] PacketWrapperFromServer errorResponse\n       */\n\n      /**\n       * Constructs a new PacketWrapperFromServer.\n       * @exports PacketWrapperFromServer\n       * @classdesc Represents a PacketWrapperFromServer.\n       * @implements IPacketWrapperFromServer\n       * @constructor\n       * @param {IPacketWrapperFromServer=} [properties] Properties to set\n       */\n      function PacketWrapperFromServer(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n      }\n\n      /**\n       * PacketWrapperFromServer undecodedSecondsField.\n       * @member {IUndecodedSeconds|null|undefined} undecodedSecondsField\n       * @memberof PacketWrapperFromServer\n       * @instance\n       */\n      PacketWrapperFromServer.prototype.undecodedSecondsField = null;\n\n      /**\n       * PacketWrapperFromServer fullyFinalizedField.\n       * @member {IFullyFinalized|null|undefined} fullyFinalizedField\n       * @memberof PacketWrapperFromServer\n       * @instance\n       */\n      PacketWrapperFromServer.prototype.fullyFinalizedField = null;\n\n      /**\n       * PacketWrapperFromServer decoderResultField.\n       * @member {IDecoderResult|null|undefined} decoderResultField\n       * @memberof PacketWrapperFromServer\n       * @instance\n       */\n      PacketWrapperFromServer.prototype.decoderResultField = null;\n\n      /**\n       * PacketWrapperFromServer errorResponse.\n       * @member {IErrorResponse|null|undefined} errorResponse\n       * @memberof PacketWrapperFromServer\n       * @instance\n       */\n      PacketWrapperFromServer.prototype.errorResponse = null;\n\n      // OneOf field names bound to virtual getters and setters\n      var $oneOfFields;\n\n      /**\n       * PacketWrapperFromServer MessageType.\n       * @member {\"undecodedSecondsField\"|\"fullyFinalizedField\"|\"decoderResultField\"|\"errorResponse\"|undefined} MessageType\n       * @memberof PacketWrapperFromServer\n       * @instance\n       */\n      Object.defineProperty(PacketWrapperFromServer.prototype, \"MessageType\", {\n        get: $util.oneOfGetter($oneOfFields = [\"undecodedSecondsField\", \"fullyFinalizedField\", \"decoderResultField\", \"errorResponse\"]),\n        set: $util.oneOfSetter($oneOfFields)\n      });\n\n      /**\n       * Decodes a PacketWrapperFromServer message from the specified reader or buffer.\n       * @function decode\n       * @memberof PacketWrapperFromServer\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {PacketWrapperFromServer} PacketWrapperFromServer\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n      PacketWrapperFromServer.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.PacketWrapperFromServer();\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.undecodedSecondsField = $root.UndecodedSeconds.decode(reader, reader.uint32());\n                break;\n              }\n            case 2:\n              {\n                message.fullyFinalizedField = $root.FullyFinalized.decode(reader, reader.uint32());\n                break;\n              }\n            case 4:\n              {\n                message.decoderResultField = $root.DecoderResult.decode(reader, reader.uint32());\n                break;\n              }\n            case 8:\n              {\n                message.errorResponse = $root.ErrorResponse.decode(reader, reader.uint32());\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      };\n      return PacketWrapperFromServer;\n    }();\n    return $root;\n  });\n})(asr);\nvar asrExports = asr.exports;\nvar mtt = {\n  exports: {}\n};\n\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\n(function (module) {\n  (function (global, factory) {\n    /* global define, require, module */\n\n    /* AMD */if (typeof commonjsRequire === 'function' && 'object' === 'object' && module && module.exports) module.exports = factory(requireMinimal());\n  })(commonjsGlobal, function ($protobuf) {\n    // Common aliases\n    var $Reader = $protobuf.Reader,\n      $util = $protobuf.util;\n\n    // Exported root namespace\n    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n    $root.Music2TrackProtocol = function () {\n      /**\n       * Namespace Music2TrackProtocol.\n       * @exports Music2TrackProtocol\n       * @namespace\n       */\n      var Music2TrackProtocol = {};\n      Music2TrackProtocol.DecoderResult = function () {\n        /**\n         * Properties of a DecoderResult.\n         * @memberof Music2TrackProtocol\n         * @interface IDecoderResult\n         * @property {string|null} [result] DecoderResult result\n         * @property {boolean|null} [isMusicFound] DecoderResult isMusicFound\n         * @property {boolean|null} [isFinal] DecoderResult isFinal\n         */\n\n        /**\n         * Constructs a new DecoderResult.\n         * @memberof Music2TrackProtocol\n         * @classdesc Represents a DecoderResult.\n         * @implements IDecoderResult\n         * @constructor\n         * @param {Music2TrackProtocol.IDecoderResult=} [properties] Properties to set\n         */\n        function DecoderResult(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * DecoderResult result.\n         * @member {string} result\n         * @memberof Music2TrackProtocol.DecoderResult\n         * @instance\n         */\n        DecoderResult.prototype.result = \"\";\n\n        /**\n         * DecoderResult isMusicFound.\n         * @member {boolean} isMusicFound\n         * @memberof Music2TrackProtocol.DecoderResult\n         * @instance\n         */\n        DecoderResult.prototype.isMusicFound = false;\n\n        /**\n         * DecoderResult isFinal.\n         * @member {boolean} isFinal\n         * @memberof Music2TrackProtocol.DecoderResult\n         * @instance\n         */\n        DecoderResult.prototype.isFinal = false;\n\n        /**\n         * Decodes a DecoderResult message from the specified reader or buffer.\n         * @function decode\n         * @memberof Music2TrackProtocol.DecoderResult\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Music2TrackProtocol.DecoderResult} DecoderResult\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DecoderResult.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.Music2TrackProtocol.DecoderResult();\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n              case 1:\n                {\n                  message.result = reader.string();\n                  break;\n                }\n              case 2:\n                {\n                  message.isMusicFound = reader.bool();\n                  break;\n                }\n              case 3:\n                {\n                  message.isFinal = reader.bool();\n                  break;\n                }\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n          return message;\n        };\n        return DecoderResult;\n      }();\n      Music2TrackProtocol.ErrorResponse = function () {\n        /**\n         * Properties of an ErrorResponse.\n         * @memberof Music2TrackProtocol\n         * @interface IErrorResponse\n         * @property {string|null} [errorMessage] ErrorResponse errorMessage\n         * @property {number|null} [errorCode] ErrorResponse errorCode\n         */\n\n        /**\n         * Constructs a new ErrorResponse.\n         * @memberof Music2TrackProtocol\n         * @classdesc Represents an ErrorResponse.\n         * @implements IErrorResponse\n         * @constructor\n         * @param {Music2TrackProtocol.IErrorResponse=} [properties] Properties to set\n         */\n        function ErrorResponse(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ErrorResponse errorMessage.\n         * @member {string} errorMessage\n         * @memberof Music2TrackProtocol.ErrorResponse\n         * @instance\n         */\n        ErrorResponse.prototype.errorMessage = \"\";\n\n        /**\n         * ErrorResponse errorCode.\n         * @member {number} errorCode\n         * @memberof Music2TrackProtocol.ErrorResponse\n         * @instance\n         */\n        ErrorResponse.prototype.errorCode = 0;\n\n        /**\n         * Decodes an ErrorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof Music2TrackProtocol.ErrorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Music2TrackProtocol.ErrorResponse} ErrorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorResponse.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.Music2TrackProtocol.ErrorResponse();\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n              case 1:\n                {\n                  message.errorMessage = reader.string();\n                  break;\n                }\n              case 2:\n                {\n                  message.errorCode = reader.int32();\n                  break;\n                }\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n          return message;\n        };\n        return ErrorResponse;\n      }();\n      Music2TrackProtocol.MttResponse = function () {\n        /**\n         * Properties of a MttResponse.\n         * @memberof Music2TrackProtocol\n         * @interface IMttResponse\n         * @property {Music2TrackProtocol.IDecoderResult|null} [decoderResultField] MttResponse decoderResultField\n         * @property {Music2TrackProtocol.IErrorResponse|null} [errorResponse] MttResponse errorResponse\n         */\n\n        /**\n         * Constructs a new MttResponse.\n         * @memberof Music2TrackProtocol\n         * @classdesc Represents a MttResponse.\n         * @implements IMttResponse\n         * @constructor\n         * @param {Music2TrackProtocol.IMttResponse=} [properties] Properties to set\n         */\n        function MttResponse(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MttResponse decoderResultField.\n         * @member {Music2TrackProtocol.IDecoderResult|null|undefined} decoderResultField\n         * @memberof Music2TrackProtocol.MttResponse\n         * @instance\n         */\n        MttResponse.prototype.decoderResultField = null;\n\n        /**\n         * MttResponse errorResponse.\n         * @member {Music2TrackProtocol.IErrorResponse|null|undefined} errorResponse\n         * @memberof Music2TrackProtocol.MttResponse\n         * @instance\n         */\n        MttResponse.prototype.errorResponse = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * MttResponse MessageType.\n         * @member {\"decoderResultField\"|\"errorResponse\"|undefined} MessageType\n         * @memberof Music2TrackProtocol.MttResponse\n         * @instance\n         */\n        Object.defineProperty(MttResponse.prototype, \"MessageType\", {\n          get: $util.oneOfGetter($oneOfFields = [\"decoderResultField\", \"errorResponse\"]),\n          set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Decodes a MttResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof Music2TrackProtocol.MttResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {Music2TrackProtocol.MttResponse} MttResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MttResponse.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.Music2TrackProtocol.MttResponse();\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n              case 1:\n                {\n                  message.decoderResultField = $root.Music2TrackProtocol.DecoderResult.decode(reader, reader.uint32());\n                  break;\n                }\n              case 2:\n                {\n                  message.errorResponse = $root.Music2TrackProtocol.ErrorResponse.decode(reader, reader.uint32());\n                  break;\n                }\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n          return message;\n        };\n        return MttResponse;\n      }();\n      return Music2TrackProtocol;\n    }();\n    return $root;\n  });\n})(mtt);\nvar mttExports = mtt.exports;\nvar createClient = function (protocol, provideMeta) {\n  if (provideMeta === void 0) {\n    provideMeta = undefined;\n  }\n  var _a = createNanoEvents(),\n    on = _a.on,\n    emit = _a.emit;\n  /** ждет ответ бека и возвращает данные из этого ответа */\n  var waitForAnswer = function (messageId) {\n    return new Promise(function (resolve) {\n      var off = on('systemMessage', function (systemMessageData, originalMessage) {\n        if (originalMessage.messageId === messageId && (originalMessage.messageName === MessageNames.ANSWER_TO_USER || originalMessage.messageName === MessageNames.DO_NOTHING)) {\n          off();\n          resolve(systemMessageData);\n        }\n      });\n    });\n  };\n  /** отправляет произвольный systemMessage, не подкладывает мету */\n  var sendData = function (data, messageName, meta) {\n    if (messageName === void 0) {\n      messageName = '';\n    }\n    var messageId = protocol.getMessageId();\n    protocol.sendSystemMessage({\n      data: data,\n      messageName: messageName\n    }, true, messageId, {\n      meta: meta || {}\n    });\n    return messageId;\n  };\n  /** отправляет cancel на сообщение */\n  var sendCancel = function (messageId) {\n    protocol.sendCancel({}, true, messageId);\n  };\n  /** отправляет приветствие */\n  var sendOpenAssistant = function (_a) {\n    var _b = _a === void 0 ? {\n        isFirstSession: false\n      } : _a,\n      isFirstSession = _b.isFirstSession;\n    return __awaiter(void 0, void 0, void 0, function () {\n      var data, meta, _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            data = isFirstSession ? {\n              is_first_session: true\n            } : {};\n            if (!provideMeta) return [3 /*break*/, 2];\n            return [4 /*yield*/, provideMeta()];\n          case 1:\n            _c = _d.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            _c = undefined;\n            _d.label = 3;\n          case 3:\n            meta = _c;\n            return [2 /*return*/, waitForAnswer(sendData(data, 'OPEN_ASSISTANT', meta))];\n        }\n      });\n    });\n  };\n  /** вызывает sendSystemMessage, куда подкладывает мету */\n  var sendMeta = function (sendSystemMessage, additionalMeta) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var meta, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!provideMeta) return [3 /*break*/, 2];\n            return [4 /*yield*/, provideMeta(additionalMeta)];\n          case 1:\n            _a = _b.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            _a = {};\n            _b.label = 3;\n          case 3:\n            meta = _a;\n            if (typeof meta !== 'undefined') {\n              sendSystemMessage({\n                data: {},\n                messageName: ''\n              }, false, {\n                meta: meta\n              });\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /** перестать слать озвучку для messageId */\n  var sendMute = function (messageId) {\n    protocol.sendMute({}, true, messageId);\n  };\n  /** отправляет server_action и мету */\n  var sendServerAction = function (serverAction, appInfo, messageName, mode) {\n    if (messageName === void 0) {\n      messageName = 'SERVER_ACTION';\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var messageId;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            messageId = protocol.getMessageId();\n            // мету и server_action отправляем в одном systemMessage\n            return [4 /*yield*/, sendMeta(function (data, _, _a) {\n              var _b = _a === void 0 ? {} : _a,\n                meta = _b.meta;\n              var systemData = __rest(data, []);\n              protocol.sendSystemMessage({\n                // eslint-disable-next-line camelcase\n                data: __assign(__assign({}, systemData), {\n                  app_info: appInfo,\n                  server_action: serverAction,\n                  mode: mode\n                }),\n                messageName: messageName || 'SERVER_ACTION'\n              }, true, messageId, {\n                meta: meta\n              });\n            }, {\n              source: {\n                sourceType: 'vps'\n              }\n            })];\n          case 1:\n            // мету и server_action отправляем в одном systemMessage\n            _a.sent();\n            return [2 /*return*/, messageId];\n        }\n      });\n    });\n  };\n  /** отправляет текст и текущую мету */\n  var sendText = function (text, isSsml, shouldSendDisableDubbing, additionalMeta) {\n    if (isSsml === void 0) {\n      isSsml = false;\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (text.trim() === '') {\n          return [2 /*return*/, undefined];\n        }\n        return [2 /*return*/, protocol.batch(function (_a) {\n          var sendSystemMessage = _a.sendSystemMessage,\n            clientSendText = _a.sendText,\n            sendSettings = _a.sendSettings,\n            messageId = _a.messageId;\n          return __awaiter(void 0, void 0, void 0, function () {\n            var prevDubbing, sendDisableDubbing, isStillNeedReturnDubbing;\n            return __generator(this, function (_b) {\n              switch (_b.label) {\n                case 0:\n                  return [4 /*yield*/, sendMeta(sendSystemMessage, additionalMeta)];\n                case 1:\n                  _b.sent();\n                  prevDubbing = protocol.configuration.settings.dubbing;\n                  sendDisableDubbing = prevDubbing !== -1 && shouldSendDisableDubbing;\n                  if (!sendDisableDubbing) return [3 /*break*/, 3];\n                  return [4 /*yield*/, sendSettings({\n                    dubbing: -1\n                  }, false)];\n                case 2:\n                  _b.sent();\n                  _b.label = 3;\n                case 3:\n                  isSsml ? clientSendText(text, {}, 'application/ssml') : clientSendText(text, {});\n                  isStillNeedReturnDubbing = prevDubbing === protocol.configuration.settings.dubbing;\n                  if (sendDisableDubbing && isStillNeedReturnDubbing) {\n                    sendSettings({\n                      dubbing: prevDubbing\n                    });\n                  }\n                  return [2 /*return*/, messageId];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n  /** инициализирует исходящий голосовой поток, факт. передает в callback параметры для отправки голоса,\n   * отправляет мету */\n  var createVoiceStream = function (callback, additionalMeta) {\n    return protocol.batch(function (_a) {\n      var sendSystemMessage = _a.sendSystemMessage,\n        sendVoice = _a.sendVoice,\n        messageId = _a.messageId;\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4 /*yield*/, sendMeta(sendSystemMessage, additionalMeta)];\n            case 1:\n              _b.sent();\n              return [4 /*yield*/, callback({\n                sendVoice: sendVoice,\n                messageId: messageId\n              })];\n            case 2:\n              _b.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n  };\n\n  var off = protocol.on('incoming', function (message) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    if ((_a = message.systemMessage) === null || _a === void 0 ? void 0 : _a.data) {\n      emit('systemMessage', JSON.parse(message.systemMessage.data), message);\n    }\n    if (message.voice) {\n      emit('voice', message.voice.data || new Uint8Array(), message);\n    }\n    if (message.status) {\n      emit('status', message.status, message);\n    }\n    if (message.messageName === 'TAKE_HISTORY' && ((_b = message.bytes) === null || _b === void 0 ? void 0 : _b.data)) {\n      var history_1 = protoExports.GetHistoryResponse.decode((_c = message.bytes) === null || _c === void 0 ? void 0 : _c.data).historyMessages;\n      var parsedHistory = history_1.map(function (historyMessage) {\n        return __assign(__assign({}, historyMessage), {\n          content: JSON.parse(historyMessage.content || '')\n        });\n      });\n      emit('history', parsedHistory, message);\n    }\n    if (message.messageName === MessageNames.STT && (message.text || ((_e = (_d = message.bytes) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.length))) {\n      var response = ((_g = (_f = message.bytes) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.length) ? asrExports.PacketWrapperFromServer.decode(message.bytes.data) : undefined;\n      emit('stt', {\n        text: message.text,\n        response: response\n      }, message);\n    }\n    if (message.messageName === MessageNames.MTT && ((_j = (_h = message.bytes) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.length)) {\n      emit('musicRecognition', mttExports.Music2TrackProtocol.MttResponse.decode(message.bytes.data), message);\n    }\n  });\n  return {\n    destroy: function () {\n      off();\n    },\n    init: protocol.init,\n    createVoiceStream: createVoiceStream,\n    sendData: sendData,\n    sendMeta: sendMeta,\n    sendOpenAssistant: sendOpenAssistant,\n    sendServerAction: sendServerAction,\n    sendText: sendText,\n    sendCancel: sendCancel,\n    sendMute: sendMute,\n    on: on,\n    waitForAnswer: waitForAnswer\n  };\n};\nvar RETRY_INTERVAL = 300; // ms\nvar defaultWSCreator = function (url) {\n  return new WebSocket(url);\n};\nvar createTransport = function (_a) {\n  var _b = _a.createWS,\n    createWS = _b === void 0 ? defaultWSCreator : _b,\n    checkCertUrl = _a.checkCertUrl;\n  var _c = createNanoEvents(),\n    on = _c.on,\n    emit = _c.emit;\n  var hasCert = !checkCertUrl;\n  var retryTimeoutId = -1;\n  var retries = 0;\n  var status = 'closed';\n  var webSocket;\n  var stopped = true;\n  var checkCert = function (checkUrl) {\n    return new Promise(function (resolve) {\n      window.fetch(checkUrl).then(function () {\n        return resolve(true);\n      }).catch(function () {\n        return resolve(false);\n      });\n    });\n  };\n  var close = function () {\n    stopped = true;\n    if (status === 'closing' || status === 'closed') {\n      return;\n    }\n    status = 'closing';\n    webSocket === null || webSocket === void 0 ? void 0 : webSocket.close();\n  };\n  var connect = function (url) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var okay;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            status = 'connecting';\n            emit('connecting');\n            if (!(!hasCert && window.navigator.onLine)) return [3 /*break*/, 2];\n            return [4 /*yield*/, checkCert(checkCertUrl)];\n          case 1:\n            okay = _a.sent();\n            if (!okay) {\n              status = 'closed';\n              emit('close');\n              emit('error', new Error('Cert authority invalid'));\n              return [2 /*return*/];\n            }\n\n            hasCert = true;\n            _a.label = 2;\n          case 2:\n            webSocket = createWS(url);\n            webSocket.binaryType = 'arraybuffer';\n            webSocket.addEventListener('open', function () {\n              if (webSocket.readyState !== 1) {\n                return;\n              }\n              window.clearTimeout(retryTimeoutId);\n              retries = 0;\n              status = 'open';\n              emit('open');\n            });\n            webSocket.addEventListener('close', function () {\n              status = 'closed';\n              emit('close');\n            });\n            webSocket.addEventListener('error', function (e) {\n              if (status !== 'connecting') {\n                throw e;\n              }\n              // пробуем переподключаться, если возникла ошибка при коннекте\n              if (!webSocket || webSocket.readyState === 3 && !stopped) {\n                window.clearTimeout(retryTimeoutId);\n                if (retries < 2) {\n                  retryTimeoutId = window.setTimeout(function () {\n                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                    open(url);\n                    retries++;\n                  }, RETRY_INTERVAL * retries);\n                } else {\n                  retries = 0;\n                  emit('error', e);\n                }\n              }\n            });\n            webSocket.addEventListener('message', function (_a) {\n              var data = _a.data;\n              emit('message', data);\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  var open = function (url) {\n    if (status === 'connecting' || status === 'open') {\n      return;\n    }\n    stopped = false;\n    connect(url);\n  };\n  var reconnect = function (url) {\n    if (status === 'closed') {\n      open(url);\n      return;\n    }\n    window.setTimeout(function () {\n      return reconnect(url);\n    });\n    close();\n  };\n  var send = function (data) {\n    webSocket.send(data);\n  };\n  return {\n    close: close,\n    get isOnline() {\n      return window.navigator.onLine;\n    },\n    on: on,\n    open: open,\n    reconnect: reconnect,\n    send: send\n  };\n};\nvar convertToMetaPermissions = function (permission) {\n  return Object.keys(permission).map(function (key) {\n    return {\n      type: key,\n      status: permission[key]\n    };\n  });\n};\nvar getLocation = function () {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2 /*return*/, new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(function (_a) {\n          var coords = _a.coords,\n            timestamp = _a.timestamp;\n          resolve({\n            lat: coords.latitude,\n            lon: coords.longitude,\n            accuracy: coords.accuracy,\n            timestamp: timestamp\n          });\n        }, reject, {\n          timeout: 5000\n        });\n      })];\n    });\n  });\n};\nvar getTime = function () {\n  return {\n    // Здесь нужен полифилл, т.к. `Intl.DateTimeFormat().resolvedOptions().timeZone` - возвращает пустую строку\n    timezone_id: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    timezone_offset_sec: -new Date().getTimezoneOffset() * 60,\n    timestamp: Date.now()\n  };\n};\nvar getAnswerForRequestPermissions = function (requestMessageId, appInfo, items) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var permissions, response;\n    return __generator(this, function (_a) {\n      permissions = {\n        record_audio: 'denied_once',\n        geo: 'denied_once',\n        read_contacts: 'denied_permanently',\n        push: 'denied_once'\n      };\n      response = {\n        app_info: appInfo,\n        meta: {\n          time: getTime(),\n          permissions: []\n        },\n        server_action: {\n          action_id: 'command_response',\n          request_message_id: requestMessageId,\n          command_response: {\n            request_permissions: {\n              permissions: []\n            }\n          }\n        }\n      };\n      return [2 /*return*/, Promise.all(items.map(function (permission) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var _a, location_1;\n          var _c, _d, _e;\n          return __generator(this, function (_f) {\n            switch (_f.label) {\n              case 0:\n                _a = permission;\n                switch (_a) {\n                  case 'geo':\n                    return [3 /*break*/, 1];\n                }\n                return [3 /*break*/, 5];\n              case 1:\n                _f.trys.push([1, 3,, 4]);\n                return [4 /*yield*/, getLocation()];\n              case 2:\n                location_1 = _f.sent();\n                permissions.geo = 'granted';\n                response.meta.location = location_1;\n                (_c = response.server_action.command_response.request_permissions) === null || _c === void 0 ? void 0 : _c.permissions.push({\n                  type: 'geo',\n                  status: 'granted'\n                });\n                return [3 /*break*/, 4];\n              case 3:\n                _f.sent();\n                permissions.geo = 'denied_permanently';\n                (_d = response.server_action.command_response.request_permissions) === null || _d === void 0 ? void 0 : _d.permissions.push({\n                  type: 'geo',\n                  status: 'denied_permanently'\n                });\n                return [3 /*break*/, 4];\n              case 4:\n                return [3 /*break*/, 6];\n              case 5:\n                // остальные доступы не поддерживаем\n                (_e = response.server_action.command_response.request_permissions) === null || _e === void 0 ? void 0 : _e.permissions.push({\n                  type: permission,\n                  status: 'denied_permanently'\n                });\n                return [3 /*break*/, 6];\n              case 6:\n                return [2 /*return*/];\n            }\n          });\n        });\n      })).then(function () {\n        response.meta.permissions = convertToMetaPermissions(permissions);\n        return response;\n      })];\n    });\n  });\n};\nvar isAudioSupported = typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n/**\n * Возвращает новый инстанс AudioContext или ошибку\n * @param options AudioContextOptions\n * @returns AudioContext\n */\nvar createAudioContext = function (options) {\n  if (window.AudioContext) {\n    return new AudioContext(options);\n  }\n  if (window.webkitAudioContext) {\n    // eslint-disable-next-line new-cap\n    return new window.webkitAudioContext();\n  }\n  throw new Error('Audio not supported');\n};\nvar _a = createNanoEvents(),\n  on = _a.on,\n  emit = _a.emit;\nvar audioContext;\n/**\n * При помощи вызова функции из аргумента, возвращает, готовый к воспроизведению звука, AudioContext.\n * Всегда возвращает один и тот же AudioContext\n * @param onReady Функция, в аргумент которой будет возвращен AudioContext\n */\nvar resolveAudioContext = function (onReady) {\n  if (!audioContext) {\n    var isSafari_1 = navigator.vendor.search('Apple') >= 0;\n    var context_1 = createAudioContext();\n    audioContext = {\n      context: context_1,\n      ready: !isSafari_1 && context_1.state === 'running',\n      on: on\n    };\n    context_1.onstatechange = function () {\n      if (audioContext.context.state === 'running') {\n        audioContext.ready = true;\n        emit('ready');\n      }\n    };\n    /// Контекст может быть не готов для использования сразу после создания\n    /// Если попробовать что-то воспроизвести в этом контексте - звука не будет\n    if (!audioContext.ready) {\n      var handleClick_1 = function () {\n        document.removeEventListener('click', handleClick_1);\n        if (isSafari_1) {\n          /// проигрываем тишину, т.к нужно что-то проиграть,\n          /// чтобы сафари разрешил воспроизводить звуки в любой момент в этом контексте\n          var oscillator = audioContext.context.createOscillator();\n          oscillator.frequency.value = 0;\n          oscillator.connect(audioContext.context.destination);\n          oscillator.start(0);\n          oscillator.stop(0.5);\n        }\n        if (audioContext.context.state === 'suspended') {\n          /// Developers who write games, WebRTC applications, or other websites that use the Web Audio API\n          /// should call context.resume() after the first user gesture (e.g. a click, or tap)\n          /// https://sites.google.com/a/chromium.org/dev/audio-video/autoplay\n          audioContext.context.resume();\n        }\n      };\n      /// чтобы сделать контекст готовым к использованию (воспроизведению звука),\n      /// необходимо событие от пользователя (только не touch)\n      document.addEventListener('click', handleClick_1);\n    }\n  }\n  if (audioContext.ready) {\n    onReady && onReady(audioContext.context);\n  } else {\n    var unsubscribe_1 = on('ready', function () {\n      onReady(audioContext.context);\n      unsubscribe_1();\n    });\n  }\n};\n\n/**\n * Понижает sample rate c inSampleRate до значения outSampleRate и преобразует Float32Array в ArrayBuffer\n * @param buffer Аудио\n * @param inSampleRate текущий sample rate\n * @param outSampleRate требуемый sample rate\n * @returns Аудио со значением sample rate = outSampleRate\n */\nvar downsampleBuffer = function (buffer, inSampleRate, outSampleRate) {\n  if (outSampleRate > inSampleRate) {\n    throw new Error('downsampling rate show be smaller than original sample rate');\n  }\n  var sampleRateRatio = inSampleRate / outSampleRate;\n  var newLength = Math.round(buffer.length / sampleRateRatio);\n  var result = new Int16Array(newLength);\n  var offsetResult = 0;\n  var offsetBuffer = 0;\n  while (offsetResult < result.length) {\n    var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n    var accum = 0;\n    var count = 0;\n    for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n      accum += buffer[i];\n      count++;\n    }\n    result[offsetResult] = Math.min(1, accum / count) * 0x7fff;\n    offsetResult++;\n    offsetBuffer = nextOffsetBuffer;\n  }\n  return result.buffer;\n};\nvar TARGET_SAMPLE_RATE = 16000;\nvar IS_FIREFOX = typeof window !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar IS_SAFARI = typeof window !== 'undefined' && /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nvar context;\nvar processor;\n/**\n * Преобразует stream в чанки (кусочки), и передает их в cb,\n * будет это делать, пока не будет вызвана функция остановки\n * @param stream Аудио-поток\n * @param cb callback, куда будут переданы чанки из потока\n * @returns Функция, вызов которой остановит передачу чанков\n */\nvar createAudioRecorder = function (stream, cb) {\n  return new Promise(function (resolve) {\n    var state = 'inactive';\n    var input;\n    var stop = function () {\n      if (state === 'inactive') {\n        return;\n      }\n      state = 'inactive';\n      stream.getTracks().forEach(function (track) {\n        track.stop();\n      });\n      input.disconnect();\n    };\n    var start = function () {\n      if (state !== 'inactive') {\n        throw new Error(\"Can't start not inactive recorder\");\n      }\n      state = 'recording';\n      if (!context) {\n        context = createAudioContext({\n          // firefox не умеет выравнивать samplerate, будем делать это самостоятельно\n          sampleRate: IS_FIREFOX ? undefined : TARGET_SAMPLE_RATE\n        });\n      }\n      input = context.createMediaStreamSource(stream);\n      if (!processor) {\n        processor = context.createScriptProcessor(2048, 1, 1);\n      }\n      var listener = function (e) {\n        var buffer = e.inputBuffer.getChannelData(0);\n        var data = downsampleBuffer(buffer, context.sampleRate, TARGET_SAMPLE_RATE);\n        var last = state === 'inactive';\n        // отсылаем только чанки где есть звук voiceData > 0, т.к.\n        // в safari первые несколько чанков со звуком пустые\n        var dataWithVoice = new Uint8Array(data).some(function (voiceData) {\n          return voiceData > 0;\n        });\n        if (!IS_SAFARI || dataWithVoice) {\n          resolve(stop);\n          cb(data, last);\n        }\n        if (last) {\n          processor.removeEventListener('audioprocess', listener);\n        }\n      };\n      processor.addEventListener('audioprocess', listener);\n      input.connect(processor);\n      processor.connect(context.destination);\n    };\n    start();\n  });\n};\n/**\n * Запрашивает у браузера доступ к микрофону и резолвит Promise, если разрешение получено.\n * После получения разрешения, чанки с голосом будут передаваться в cb - пока не будет вызвана функция из результата.\n * @param cb Callback, куда будут передаваться чанки с голосом пользователя\n * @returns Promise, который содержит функцию прерывающую слушание\n */\nvar createNavigatorAudioProvider = function (cb) {\n  return navigator.mediaDevices.getUserMedia({\n    audio: true\n  }).then(function (stream) {\n    return createAudioRecorder(stream, cb);\n  }).catch(function (err) {\n    if (window.location.protocol === 'http:') {\n      throw new Error('Audio is supported only on a secure connection');\n    }\n    throw err;\n  });\n};\n\n/**\n * Возвращает объект, позволяющий получать запись голоса пользователя и управлять ею.\n * @param createAudioProvider Источник голоса\n * @returns Api для запуска и остановки слушания\n */\nvar createVoiceListener = function (createAudioProvider) {\n  if (createAudioProvider === void 0) {\n    createAudioProvider = createNavigatorAudioProvider;\n  }\n  var _a = createNanoEvents(),\n    emit = _a.emit,\n    on = _a.on;\n  var stopRecord;\n  var status = 'stopped';\n  var cancelableToken = {\n    current: false\n  };\n  var stop = function () {\n    cancelableToken.current = true;\n    cancelableToken = {\n      current: false\n    };\n    status = 'stopped';\n    stopRecord === null || stopRecord === void 0 ? void 0 : stopRecord();\n    emit('status', 'stopped');\n  };\n  var listen = function (handleVoice) {\n    cancelableToken = {\n      current: false\n    };\n    var capturedToken = cancelableToken;\n    status = 'started';\n    emit('status', 'started');\n    return createAudioProvider(function (data, last) {\n      return handleVoice(new Uint8Array(data), last);\n    }).then(function (recStop) {\n      stopRecord = recStop;\n    }).then(function () {\n      if (capturedToken.current === true || status === 'stopped') {\n        stopRecord();\n      } else {\n        status = 'listen';\n        emit('status', 'listen');\n      }\n    }).catch(function (err) {\n      status = 'stopped';\n      emit('status', 'stopped');\n      throw err;\n    });\n  };\n  return {\n    listen: listen,\n    stop: stop,\n    on: on,\n    get status() {\n      return status;\n    }\n  };\n};\n\n/** Создает коллекцию треков  */\nvar createTrackCollection = function () {\n  var trackIds;\n  var trackMap;\n  var clear = function () {\n    trackIds = new Array();\n    trackMap = new Map();\n  };\n  var push = function (id, track) {\n    if (trackMap.has(id)) {\n      throw new Error('Track already exists');\n    }\n    trackMap.set(id, track);\n    trackIds.push(id);\n  };\n  var has = function (id) {\n    return trackMap.has(id);\n  };\n  var getById = function (id) {\n    var track = trackMap.get(id);\n    if (track === undefined) {\n      throw new Error('Unknown track id');\n    }\n    return track;\n  };\n  var getByIndex = function (index) {\n    if (index < 0 || index >= trackIds.length) {\n      throw new Error('Index out of bounds');\n    }\n    var track = trackMap.get(trackIds[index]);\n    if (track == null) {\n      throw new Error('Something wrong...');\n    }\n    return track;\n  };\n  var some = function (predicate) {\n    return trackIds.some(function (id) {\n      return predicate(getById(id));\n    });\n  };\n  clear();\n  return {\n    clear: clear,\n    has: has,\n    get: getById,\n    getByIndex: getByIndex,\n    push: push,\n    some: some,\n    get length() {\n      return trackIds.length;\n    }\n  };\n};\n\n/** Создает структуру для хранения загружаемых и воспроизводимых частей трека */\nvar createChunkQueue = function () {\n  var buffer = []; // очередь на воспроизведение\n  var chunks = []; // очередь воспроизведения\n  var duration = 0; // продолжительность очереди на воспроизведение, сек\n  var loaded = false; // флаг завершения загрузки\n  /** Добавить чанк в очередь на воспроизведение */\n  var push = function (chunk) {\n    var _a;\n    buffer.push(chunk);\n    duration += ((_a = chunk.buffer) === null || _a === void 0 ? void 0 : _a.duration) || 0;\n  };\n  /** Добавить чанк в очередь воспроизведения */\n  var toPlay = function (chunk) {\n    chunks.push(chunk);\n  };\n  /** Удалить чанк из очереди воспроизведения */\n  var remove = function (chunk) {\n    chunks.splice(chunks.indexOf(chunk), 1);\n  };\n  /** Получить очередь на воспроизведение */\n  var popAll = function () {\n    duration = 0;\n    return buffer.splice(0, buffer.length);\n  };\n  /** Проставляем признак окончания загрузки трека */\n  var allLoaded = function () {\n    loaded = true;\n  };\n  return {\n    get bufferLen() {\n      return buffer.length;\n    },\n    get chunks() {\n      return chunks;\n    },\n    allLoaded: allLoaded,\n    toPlay: toPlay,\n    remove: remove,\n    push: push,\n    popAll: popAll,\n    get length() {\n      return chunks.length;\n    },\n    get duration() {\n      return duration;\n    },\n    get ended() {\n      // считаем трек законченным, когда все загружено и воспроизведено\n      return loaded && chunks.length === 0 && buffer.length === 0;\n    },\n    get loaded() {\n      return loaded;\n    }\n  };\n};\nvar from16BitToFloat32 = function (incomingData) {\n  var l = incomingData.length;\n  var outputData = new Float32Array(l);\n  for (var i = 0; i < l; i += 1) {\n    outputData[i] = incomingData[i] / 32768.0;\n  }\n  return outputData;\n};\n/** Возвращает потоковый подгружаемый трек, который умеет себя проигрывать */\nvar createTrackStream = function (ctx, _a) {\n  var _b = _a === void 0 ? {} : _a,\n    _c = _b.sampleRate,\n    sampleRate = _c === void 0 ? 24000 : _c,\n    _d = _b.numberOfChannels,\n    numberOfChannels = _d === void 0 ? 1 : _d,\n    _e = _b.delay,\n    delay = _e === void 0 ? 0 : _e,\n    onPlay = _b.onPlay,\n    onEnd = _b.onEnd,\n    onStop = _b.onStop,\n    trackStatus = _b.trackStatus;\n  // очередь загруженных чанков (кусочков) трека\n  var queue = createChunkQueue();\n  var extraByte = null;\n  var status = trackStatus || 'stop';\n  var lastChunkOffset = 0;\n  var startTime = 0;\n  var firstChunk = true;\n  var end = function () {\n    // останавливаем воспроизведение чанков из очереди воспроизведения\n    queue.chunks.forEach(function (chunk) {\n      chunk.stop();\n    });\n    status = 'end';\n    onEnd && onEnd();\n    startTime = 0;\n    lastChunkOffset = 0;\n  };\n  var stop = function () {\n    onStop === null || onStop === void 0 ? void 0 : onStop();\n    end();\n  };\n  var play = function () {\n    if (status === 'end') {\n      return;\n    }\n    if (status !== 'play') {\n      status = 'play';\n      onPlay && onPlay();\n    }\n    if (queue.ended) {\n      end();\n      return;\n    }\n    // воспроизводим трек, если он полностью загрузился или длина загруженного больше задержки\n    if (queue.loaded || queue.duration >= delay) {\n      startTime = queue.length === 0 ? ctx.currentTime : startTime;\n      var chunks = queue.popAll();\n      chunks.forEach(function (chunk) {\n        var _a;\n        queue.toPlay(chunk);\n        chunk.start(startTime + lastChunkOffset);\n        lastChunkOffset += ((_a = chunk.buffer) === null || _a === void 0 ? void 0 : _a.duration) || 0;\n      });\n    }\n  };\n  var getExtraBytes = function (data, bytesArraysSizes) {\n    if (extraByte == null && bytesArraysSizes.incomingMessageVoiceDataLength % 2) {\n      extraByte = data[bytesArraysSizes.incomingMessageVoiceDataLength - 1];\n      bytesArraysSizes.incomingMessageVoiceDataLength -= 1;\n      bytesArraysSizes.sourceLen -= 1;\n    } else if (extraByte != null) {\n      bytesArraysSizes.prepend = extraByte;\n      bytesArraysSizes.start = 1;\n      if (bytesArraysSizes.incomingMessageVoiceDataLength % 2) {\n        bytesArraysSizes.incomingMessageVoiceDataLength += 1;\n        extraByte = null;\n      } else {\n        extraByte = data[bytesArraysSizes.incomingMessageVoiceDataLength - 1];\n        bytesArraysSizes.sourceLen -= 1;\n      }\n    }\n  };\n  var createChunk = function (chunk) {\n    var audioBuffer = ctx.createBuffer(numberOfChannels, chunk.length / numberOfChannels, sampleRate);\n    for (var i = 0; i < numberOfChannels; i++) {\n      var channelChunk = new Float32Array(chunk.length / numberOfChannels);\n      var index = 0;\n      for (var j = i; j < chunk.length; j += numberOfChannels) {\n        channelChunk[index++] = chunk[j];\n      }\n      audioBuffer.getChannelData(i).set(channelChunk);\n    }\n    var source = ctx.createBufferSource();\n    source.buffer = audioBuffer;\n    source.connect(ctx.destination);\n    source.onended = function () {\n      queue.remove(source);\n      if (queue.ended && status !== 'end') {\n        status = 'end';\n        onEnd && onEnd();\n      }\n    };\n    return source;\n  };\n  /** добавляет чанк в очередь на воспроизведение */\n  var write = function (data) {\n    // 44 байта - заголовок трека\n    var slicePoint = firstChunk ? 44 : 0;\n    var bytesArraysSizes = {\n      incomingMessageVoiceDataLength: data.length,\n      sourceLen: data.length,\n      start: 0,\n      prepend: null\n    };\n    firstChunk = false;\n    if (slicePoint >= data.length) {\n      return;\n    }\n    getExtraBytes(data, bytesArraysSizes);\n    var dataBuffer = new ArrayBuffer(bytesArraysSizes.incomingMessageVoiceDataLength);\n    var bufferUi8 = new Uint8Array(dataBuffer);\n    var bufferI16 = new Int16Array(dataBuffer);\n    bufferUi8.set(data.slice(0, bytesArraysSizes.sourceLen), bytesArraysSizes.start);\n    if (bytesArraysSizes.prepend != null) {\n      bufferUi8[0] = bytesArraysSizes.prepend;\n    }\n    var chunk = createChunk(from16BitToFloat32(bufferI16.slice(slicePoint)));\n    queue.push(chunk);\n    if (status === 'play') {\n      play();\n    }\n  };\n  return {\n    get loaded() {\n      return queue.loaded;\n    },\n    setLoaded: function () {\n      queue.allLoaded();\n      if (status === 'play') {\n        play();\n      }\n    },\n    write: write,\n    get status() {\n      return status;\n    },\n    play: play,\n    stop: stop\n  };\n};\nvar createVoicePlayer = function (actx, _a) {\n  var _b = _a === void 0 ? {} : _a,\n    _c = _b.startVoiceDelay,\n    startVoiceDelay = _c === void 0 ? 0.2 : _c,\n    sampleRate = _b.sampleRate,\n    numberOfChannels = _b.numberOfChannels;\n  var _d = createNanoEvents(),\n    on = _d.on,\n    emit = _d.emit;\n  var tracks = createTrackCollection();\n  // true - воспроизводим все треки в очереди (новые в том числе), false - скипаем всю очередь (новые в т.ч.)\n  var active = true;\n  // индекс текущего трека в tracks\n  var cursor = 0;\n  var play = function () {\n    if (cursor >= tracks.length) {\n      if (tracks.some(function (track) {\n        return !track.loaded;\n      })) {\n        return;\n      }\n      // очищаем коллекцию, если все треки были воспроизведены\n      cursor = 0;\n      tracks.clear();\n      return;\n    }\n    // рекурсивно последовательно включаем треки из очереди\n    var current = tracks.getByIndex(cursor);\n    if (current.status === 'end') {\n      if (cursor < tracks.length) {\n        cursor++;\n        play();\n      }\n    } else {\n      current.play();\n    }\n  };\n  var append = function (data, trackId, last) {\n    if (last === void 0) {\n      last = false;\n    }\n    var current = tracks.has(trackId) ? tracks.get(trackId) : undefined;\n    if (current == null) {\n      /// если trackId нет в коллекции - создаем трек\n      /// по окончании проигрывания - запускаем следующий трек, вызывая play\n      current = createTrackStream(actx, {\n        sampleRate: sampleRate,\n        numberOfChannels: numberOfChannels,\n        delay: startVoiceDelay,\n        onPlay: function () {\n          return emit('play', trackId);\n        },\n        onStop: function () {\n          return emit('stop', trackId);\n        },\n        onEnd: function () {\n          emit('end', trackId);\n          play();\n        },\n        trackStatus: active ? 'stop' : 'end'\n      });\n      tracks.push(trackId, current);\n    }\n    if (current.status !== 'end' && data.length) {\n      current.write(data);\n    }\n    if (last) {\n      // все чанки трека загружены\n      current.setLoaded();\n    }\n    play();\n  };\n  var stop = function () {\n    while (cursor < tracks.length) {\n      var cur = cursor;\n      cursor++;\n      tracks.getByIndex(cur).stop();\n    }\n  };\n  return {\n    append: append,\n    setActive: function (value) {\n      active = value;\n      if (value) {\n        play();\n      } else {\n        stop();\n      }\n    },\n    on: on,\n    stop: stop\n  };\n};\n\n/** Фильтр тишины */\nvar filterEmptyChunks = function (chunksOriginal) {\n  return chunksOriginal.reduce(function (acc, chunkOriginal) {\n    var chunk = chunkOriginal.filter(function (int) {\n      return int;\n    });\n    if (chunk.length) {\n      acc.push(chunk);\n    }\n    return acc;\n  }, []);\n};\nvar createVoice = function (client, settings, emit,\n/// пока onReady не вызван, треки не воспроизводятся\n/// когда случится onReady, очередь треков начнет проигрываться\nonReady) {\n  var voicePlayer;\n  var listener = createVoiceListener();\n  var subscriptions = [];\n  var appInfoDict = {};\n  var mesIdQueue = [];\n  /** в процессе инициализации слушания */\n  var isRecognizeInitializing = false;\n  /** проигрывается/не проигрывается озвучка */\n  var isPlaying = false;\n  /** id сообщения, после проигрывания которого, нужно активировать слушание */\n  var autolistenMessageId = null;\n  /** id сообщения со звуком, отправляемое в данный момент */\n  var currentVoiceMessageId = null;\n  /** стримит поток чанков. Если метода нет, то стриминг не идёт */\n  var streaming = null;\n  /** Останавливает слушание голоса, отправляет cancel. Возвращает true - если слушание было активно */\n  var stopVoice = function (sendCancel) {\n    if (sendCancel === void 0) {\n      sendCancel = true;\n    }\n    autolistenMessageId = null;\n    streaming = null;\n    if (sendCancel && currentVoiceMessageId) {\n      client.sendCancel(currentVoiceMessageId);\n    }\n    currentVoiceMessageId = null;\n    if (listener.status === 'listen') {\n      listener.stop();\n      return true;\n    }\n    return false;\n  };\n  /** Останавливает слушание и воспроизведение */\n  var stop = function () {\n    // здесь важен порядок остановки голоса\n    stopVoice();\n    voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n  };\n  var recognize = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      begin = _b.begin,\n      messageName = _b.messageName,\n      _c = _b.isAutoListening,\n      isAutoListening = _c === void 0 ? false : _c;\n    return __awaiter(void 0, void 0, void 0, function () {\n      var unsubscribe_1;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (stopVoice()) {\n              return [2 /*return*/];\n            }\n\n            if (isPlaying) {\n              voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n              return [2 /*return*/];\n            }\n\n            if (settings.current.disableListening) {\n              return [2 /*return*/];\n            }\n\n            if (!(listener.status === 'stopped' && !isRecognizeInitializing)) return [3 /*break*/, 2];\n            isRecognizeInitializing = true;\n            unsubscribe_1 = listener.on('status', function () {\n              isRecognizeInitializing = false;\n              unsubscribe_1();\n            });\n            return [4 /*yield*/, client.init()];\n          case 1:\n            _d.sent();\n            return [2 /*return*/, client.createVoiceStream(function (_a) {\n              var sendVoice = _a.sendVoice,\n                messageId = _a.messageId;\n              begin === null || begin === void 0 ? void 0 : begin.forEach(function (chunk) {\n                return sendVoice(new Uint8Array(chunk), false);\n              });\n              currentVoiceMessageId = messageId;\n              return listener.listen(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                  args[_i] = arguments[_i];\n                }\n                sendVoice.apply(void 0, __spreadArray(__spreadArray([], args), [messageName]));\n              });\n            }, {\n              source: {\n                sourceType: isAutoListening ? 'autoListening' : 'lavashar'\n              }\n            })];\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Стримит переданные чанки звука в VPS.\n   * При отсутствии last=true через 3 секунды тишины отправляет Cancel.\n   * Если было активно слушание или проигрывание – останавливает.\n   *\n   * @param chunks одноканальные, sampleRate: 16000\n   * @param last последние чанки этого стрима?\n   * @param messageName указать, если чанки для шазама\n   */\n  var streamVoice = function (chunks, last, messageName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            chunks = filterEmptyChunks(chunks);\n            if (streaming === null || streaming === void 0 ? void 0 : streaming(chunks, last)) {\n              return [2 /*return*/];\n            }\n\n            stopVoice();\n            if (isPlaying) {\n              voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n            }\n            if (!(!isRecognizeInitializing && chunks.length)) return [3 /*break*/, 2];\n            isRecognizeInitializing = true;\n            return [4 /*yield*/, client.init()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, client.createVoiceStream(function (_a) {\n              var messageId = _a.messageId,\n                sendVoice = _a.sendVoice;\n              return __awaiter(void 0, void 0, void 0, function () {\n                var cancelTimeoutId;\n                return __generator(this, function (_b) {\n                  cancelTimeoutId = -1;\n                  isRecognizeInitializing = false;\n                  currentVoiceMessageId = messageId;\n                  streaming = function (ch, l) {\n                    clearTimeout(cancelTimeoutId);\n                    ch.forEach(function (chunk) {\n                      return sendVoice(new Uint8Array(chunk), l, messageName);\n                    });\n                    if (l) {\n                      streaming = null;\n                    } else {\n                      cancelTimeoutId = setTimeout(function () {\n                        if (streaming) {\n                          stopVoice();\n                        }\n                      }, 3000);\n                    }\n                    return true;\n                  };\n                  streaming(chunks, last);\n                  return [2 /*return*/];\n                });\n              });\n            }, {\n              source: {\n                sourceType: 'lavashar'\n              }\n            })];\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Отправляет готовые чанки звука в VPS.\n   * Чанки считаются завершёнными (сообщение отправляется с last=true).\n   * Если было активно слушание или проигрывание – останавливает.\n   *\n   * @param chunks одноканальные, sampleRate: 16000\n   * @param messageName указать, если чанки для шазама\n   */\n  var sendVoice = function (chunks, messageName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            chunks = filterEmptyChunks(chunks);\n            stopVoice();\n            if (isPlaying) {\n              voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n            }\n            if (!(!isRecognizeInitializing && chunks.length)) return [3 /*break*/, 2];\n            isRecognizeInitializing = true;\n            return [4 /*yield*/, client.init()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, client.createVoiceStream(function (_a) {\n              var messageId = _a.messageId,\n                sendVoiceStream = _a.sendVoice;\n              isRecognizeInitializing = false;\n              currentVoiceMessageId = messageId;\n              chunks.forEach(function (chunk) {\n                return sendVoiceStream(new Uint8Array(chunk), true, messageName);\n              });\n              return Promise.resolve();\n            }, {\n              source: {\n                sourceType: 'lavashar'\n              }\n            })];\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Активирует слушание голоса.\n   * Если было активно слушание или проигрывание - останавливает, слушание в этом случае не активируется.\n   *\n   * @param begin одноканальные чанки, sampleRate: 16000 – будут отправлены перед голосом пользователя\n   */\n  var listen = function (_a, isAutoListening) {\n    var _b = _a === void 0 ? {} : _a,\n      begin = _b.begin;\n    return recognize({\n      begin: begin,\n      isAutoListening: isAutoListening\n    });\n  };\n  /**\n   * Активирует распознавание музыки.\n   * Если было активно слушание или проигрывание – останавливает\n   */\n  var shazam = function () {\n    return recognize({\n      messageName: MessageNames.MTT,\n      isAutoListening: false\n    });\n  };\n  if (isAudioSupported) {\n    resolveAudioContext(function (context) {\n      /// создаем плеер только если поддерживается аудио\n      /// и только когда готов AudioContext\n      voicePlayer = createVoicePlayer(context, {\n        startVoiceDelay: 1\n      });\n      // начало проигрывания озвучки\n      subscriptions.push(voicePlayer.on('play', function (mesId) {\n        isPlaying = true;\n        emit({\n          emotion: 'talk'\n        });\n        emit({\n          tts: {\n            status: 'start',\n            messageId: Number(mesId),\n            appInfo: appInfoDict[mesId]\n          }\n        });\n      }));\n      subscriptions.push(voicePlayer.on('stop', function (mesId) {\n        client.sendMute(Number(mesId));\n      }));\n      // окончание проигрывания озвучки\n      subscriptions.push(voicePlayer.on('end', function (mesId) {\n        isPlaying = false;\n        emit({\n          emotion: 'idle'\n        });\n        emit({\n          tts: {\n            status: 'stop',\n            messageId: Number(mesId),\n            appInfo: appInfoDict[mesId]\n          }\n        });\n        if (mesId === autolistenMessageId) {\n          listen();\n        }\n        // очистка сохраненных appInfo и messageId\n        var idx = 0;\n        do {\n          delete appInfoDict[mesIdQueue[0]];\n        } while (mesIdQueue[idx++] !== mesId && mesIdQueue.length > idx);\n        mesIdQueue.splice(0, idx);\n      }));\n      // оповещаем о готовности к воспроизведению звука\n      onReady === null || onReady === void 0 ? void 0 : onReady();\n    });\n  }\n  subscriptions.push(\n  // обработка входящей озвучки\n  client.on('voice', function (data, message) {\n    if (settings.current.disableDubbing) {\n      return;\n    }\n    voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.append(data, message.messageId.toString(), message.last === 1);\n  }),\n  // статусы слушания речи\n  listener.on('status', function (status) {\n    emit({\n      listener: {\n        status: status\n      }\n    });\n    if (status === 'listen') {\n      voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(false);\n      emit({\n        emotion: 'listen'\n      });\n    } else if (status === 'stopped') {\n      voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(!settings.current.disableDubbing);\n      emit({\n        asr: {\n          text: ''\n        },\n        emotion: 'idle'\n      });\n    }\n  }),\n  // активация автослушания\n  client.on('systemMessage', function (systemMessage, originalMessage) {\n    var autoListening = systemMessage.auto_listening;\n    var messageId = originalMessage.messageId.toString();\n    if (typeof systemMessage.app_info !== 'undefined') {\n      appInfoDict[messageId] = systemMessage.app_info;\n      mesIdQueue.push(messageId);\n    }\n    if (autoListening) {\n      /// если озвучка включена - сохраняем mesId чтобы включить слушание после озвучки\n      /// если озвучка выключена - включаем слушание сразу\n      if (settings.current.disableDubbing === false) {\n        autolistenMessageId = messageId;\n      } else {\n        listen({}, autoListening);\n      }\n    }\n  }), client.on('status', function (_a) {\n    var code = _a.code;\n    if (code < 0) {\n      stopVoice(false);\n    }\n  }), client.on('stt', function (_a, originalMessage) {\n    var _b;\n    var text = _a.text,\n      response = _a.response;\n    var listening = listener.status === 'listen' && !settings.current.disableListening;\n    if (text) {\n      var last = originalMessage.last === 1;\n      if (last || listening) {\n        emit({\n          asr: {\n            mid: originalMessage.messageId,\n            text: text.data || '',\n            last: last\n          }\n        });\n      }\n      if (last) {\n        stopVoice(false);\n      }\n    }\n    if (response) {\n      var decoderResultField = response.decoderResultField,\n        errorResponse = response.errorResponse;\n      var last = !!(decoderResultField && (decoderResultField === null || decoderResultField === void 0 ? void 0 : decoderResultField.isFinal));\n      if ((last || listening) && ((_b = decoderResultField === null || decoderResultField === void 0 ? void 0 : decoderResultField.hypothesis) === null || _b === void 0 ? void 0 : _b.length)) {\n        emit({\n          asr: {\n            mid: originalMessage.messageId,\n            text: decoderResultField.hypothesis[0].normalizedText || '',\n            last: last\n          }\n        });\n      }\n      if (last || errorResponse) {\n        stopVoice(false);\n      }\n    }\n  }), client.on('musicRecognition', function (response, originalMessage) {\n    var _a;\n    emit({\n      mtt: {\n        response: response,\n        mid: originalMessage.messageId\n      }\n    });\n    if (((_a = response.decoderResultField) === null || _a === void 0 ? void 0 : _a.isFinal) || response.errorResponse) {\n      stopVoice(false);\n    }\n  }), settings.on('change-request', function (nextSettings) {\n    var disableDubbing = nextSettings.disableDubbing,\n      disableListening = nextSettings.disableListening;\n    /// Важен порядок обработки флагов слушания и озвучки —\n    /// сначала слушание, потом озвучка\n    disableListening && stopVoice();\n    // Такой вызов необходим, чтобы включая озвучку она тут же проигралась (при её наличии), и наоборот\n    settings.current.disableDubbing !== disableDubbing && (voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(!disableDubbing));\n  }));\n  return {\n    destroy: function () {\n      stopVoice();\n      voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(false);\n      subscriptions.splice(0, subscriptions.length).map(function (unsubscribe) {\n        return unsubscribe();\n      });\n    },\n    listen: listen,\n    shazam: shazam,\n    sendVoice: sendVoice,\n    streamVoice: streamVoice,\n    stop: stop,\n    stopPlaying: function () {\n      voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n    }\n  };\n};\nvar createMutexedObject = function (initialObject) {\n  var _a = createNanoEvents(),\n    on = _a.on,\n    emit = _a.emit;\n  var object = __assign({}, initialObject);\n  var nextObject = {};\n  var mode = 'released';\n  var tryApply = function () {\n    if (mode === 'released') {\n      var prevObject_1 = object;\n      object = __assign(__assign({}, prevObject_1), nextObject);\n      var isObjectChanged = Object.keys(nextObject).some(function (name) {\n        return nextObject[name] !== prevObject_1[name];\n      });\n      if (isObjectChanged) {\n        emit('changed', object, prevObject_1);\n      }\n    }\n  };\n  var lock = function () {\n    mode = 'locked';\n  };\n  var release = function () {\n    mode = 'released';\n    tryApply();\n  };\n  var change = function (setts) {\n    nextObject = __assign(__assign({}, nextObject), setts);\n    emit('change-request', setts);\n    tryApply();\n  };\n  var current = {};\n  Object.keys(initialObject).forEach(function (prop) {\n    Object.defineProperty(current, prop, {\n      get: function () {\n        return object[prop];\n      }\n    });\n  });\n  return {\n    on: on,\n    lock: lock,\n    release: release,\n    change: change,\n    current: current\n  };\n};\nvar createMutexSwitcher = function (_a, initialDeps) {\n  var lock = _a.lock,\n    release = _a.release;\n  var deps = __assign({}, initialDeps);\n  return {\n    change: function (nextDeps) {\n      deps = __assign(__assign({}, deps), nextDeps);\n      if (Object.values(deps).every(function (dep) {\n        return dep;\n      })) {\n        release();\n      } else {\n        lock();\n      }\n    }\n  };\n};\nvar STATE_UPDATE_TIMEOUT = 200;\nvar DEFAULT_PROJECT_ID = 'd929986a-611a-2ba0-6174-1928c99600a5';\nvar DEFAULT_APPLICATION_ID = '7c4e23bf-cd93-b57e-874b-d9fc1b35f93d';\nvar DEFAULT_APP_VERSION_ID = '26d0bb2e-45d6-a276-f70e-6c016d1f9cff';\nvar DEFAULT_APP = {\n  projectId: DEFAULT_PROJECT_ID,\n  applicationId: DEFAULT_APPLICATION_ID,\n  appversionId: DEFAULT_APP_VERSION_ID,\n  frontendStateId: [DEFAULT_PROJECT_ID, DEFAULT_APPLICATION_ID, DEFAULT_APP_VERSION_ID].join('_'),\n  frontendType: 'DIALOG',\n  systemName: 'assistant',\n  frontendEndpoint: 'None'\n};\nvar BASIC_SMART_APP_COMMANDS_TYPES = ['smart_app_data', 'smart_app_error', 'start_smart_search', 'navigation'];\nfunction convertFieldValuesToString(object) {\n  return Object.keys(object).reduce(function (acc, key) {\n    if (object[key]) {\n      acc[key] = JSON.stringify(object[key]);\n    }\n    return acc;\n  }, {});\n}\nvar isDefaultApp = function (appInfo) {\n  return appInfo.frontendStateId === DEFAULT_APP.frontendStateId;\n};\nvar promiseTimeout = function (promise, timeout) {\n  var timeoutId;\n  return Promise.race([promise.then(function (v) {\n    if (timeoutId) {\n      window.clearTimeout(timeoutId);\n    }\n    return v;\n  }), new Promise(function (_, reject) {\n    timeoutId = window.setTimeout(function () {\n      reject(new Error(\"Timed out in \" + timeout + \" ms.\"));\n    }, timeout);\n  })]);\n};\nvar createAssistant = function (_a) {\n  var _b;\n  var getMeta = _a.getMeta,\n    getInitialMeta = _a.getInitialMeta,\n    checkCertUrl = _a.checkCertUrl,\n    configuration = __rest(_a, [\"getMeta\", \"getInitialMeta\", \"checkCertUrl\"]);\n  var _c = createNanoEvents(),\n    on = _c.on,\n    emit = _c.emit;\n  // default_character отправляется в мета при отправке InitialSettings\n  var defaultCharacter = 'sber';\n  // хеш [messageId]: requestId, где requestId - пользовательский ид экшена\n  var requestIdMap = {};\n  // mid для последнего отправленного/принятого сообщения (кроме server_action)\n  var lastMid = 0;\n  var subscriptions = [];\n  var backgroundApps = {};\n  var settings = createMutexedObject({\n    disableDubbing: configuration.settings.dubbing === -1,\n    disableListening: false,\n    sendTextAsSsml: false\n  });\n  var settingsSwitcher = createMutexSwitcher(settings, {\n    isListenerStopped: true,\n    isVoicePlayerEnded: true\n  });\n  // готов/не готов воспроизводить озвучку\n  var voiceReady = false;\n  // текущий апп\n  var app = {\n    info: DEFAULT_APP\n  };\n  var sdkMeta = {\n    theme: 'dark'\n  };\n  var metaProvider = function (additionalMeta) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var appState, _a, current_app, getBackgroundAppsMeta, background_apps;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!(app !== null && app.info.frontendType === 'WEB_APP' && app.getState)) return [3 /*break*/, 2];\n            return [4 /*yield*/, promiseTimeout(app.getState(), STATE_UPDATE_TIMEOUT).catch(function () {\n              // eslint-disable-next-line no-console\n              console.error('App-state wasn`t resolved, timeout had been expired');\n              return undefined;\n            })];\n          case 1:\n            _a = _b.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            _a = undefined;\n            _b.label = 3;\n          case 3:\n            appState = _a;\n            current_app = {\n              app_info: app.info,\n              state: appState || {}\n            };\n            getBackgroundAppsMeta = function () {\n              return __awaiter(void 0, void 0, void 0, function () {\n                var apps, backgroundAppsIds, backgroundAppsMeta;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      apps = __assign({}, backgroundApps);\n                      backgroundAppsIds = Object.keys(apps);\n                      backgroundAppsMeta = [];\n                      return [4 /*yield*/, Promise.all(backgroundAppsIds.map(function (applicationId) {\n                        return __awaiter(void 0, void 0, void 0, function () {\n                          var _a, getState;\n                          return __generator(this, function (_b) {\n                            _a = apps[applicationId].getState, getState = _a === void 0 ? function () {\n                              return Promise.resolve({});\n                            } : _a;\n                            return [2 /*return*/, promiseTimeout(getState(), STATE_UPDATE_TIMEOUT).then(function (state) {\n                              return state;\n                            }, function () {\n                              return {};\n                            })];\n                          });\n                        });\n                      })).then(function (results) {\n                        results.forEach(function (appResult, index) {\n                          var state = appResult;\n                          var applicationId = backgroundAppsIds[index];\n                          backgroundAppsMeta.push({\n                            app_info: apps[applicationId].appInfo,\n                            state: state\n                          });\n                        });\n                      })];\n                    case 1:\n                      _a.sent();\n                      return [2 /*return*/, backgroundAppsMeta];\n                  }\n                });\n              });\n            };\n            return [4 /*yield*/, getBackgroundAppsMeta()];\n          case 4:\n            background_apps = _b.sent();\n            return [2 /*return*/, convertFieldValuesToString(__assign(__assign(__assign(__assign({}, sdkMeta), {\n              time: getTime(),\n              current_app: current_app,\n              background_apps: background_apps\n            }), additionalMeta || {}), getMeta ? getMeta() : {}))];\n        }\n      });\n    });\n  };\n  var transport = createTransport({\n    createWS: (_b = configuration.fakeVps) === null || _b === void 0 ? void 0 : _b.createFakeWS,\n    checkCertUrl: checkCertUrl\n  });\n  var protocol = createProtocol(transport, __assign(__assign({}, configuration), {\n    getInitialMeta: typeof getInitialMeta !== 'undefined' ? function () {\n      return getInitialMeta().then(function (meta) {\n        return convertFieldValuesToString(__assign(__assign({}, meta), {\n          default_character: defaultCharacter\n        }));\n      });\n    } : function () {\n      return convertFieldValuesToString({\n        default_character: defaultCharacter\n      });\n    },\n    // пока голос не готов, выключаем озвучку\n    settings: __assign(__assign({}, configuration.settings), {\n      dubbing: -1\n    })\n  }));\n  var client = createClient(protocol, metaProvider);\n  var voice = createVoice(client, settings, function (event) {\n    if (typeof event.tts !== 'undefined') {\n      emit('tts', event.tts);\n      settingsSwitcher.change({\n        isVoicePlayerEnded: event.tts.status === 'stop'\n      });\n      return;\n    }\n    if (typeof event.listener !== 'undefined') {\n      settingsSwitcher.change({\n        isListenerStopped: event.listener.status === 'stopped'\n      });\n    }\n    emit('assistant', event);\n  }, function () {\n    voiceReady = true;\n    if (!settings.current.disableDubbing) {\n      protocol.changeSettings({\n        dubbing: 1\n      });\n    }\n  });\n  /** завершает текущий апп */\n  var closeApp = function (closing) {\n    if (closing === void 0) {\n      closing = app.info;\n    }\n    // переключить на дефолтный апп\n    if (closing.applicationId === app.info.applicationId) {\n      /// выглядит как нарушение логики,\n      /// но с точки зрения апи - ок\n      /// иначе потребителю нужно знать про DEFAULT_APP\n      app = {\n        info: DEFAULT_APP\n      };\n    }\n    if (!isDefaultApp(closing)) {\n      emit('app', {\n        type: 'close',\n        app: closing\n      });\n    }\n  };\n  /** отправляет текст */\n  var sendText = function (text, shouldSendDisableDubbing, additionalMeta) {\n    if (shouldSendDisableDubbing === void 0) {\n      shouldSendDisableDubbing = false;\n    }\n    voice.stop();\n    return client.sendText(text, settings.current.sendTextAsSsml, shouldSendDisableDubbing, additionalMeta);\n  };\n  /** отправляет server_action */\n  var sendServerAction = function (serverAction, messageName, requestId, actionApp, mode) {\n    if (messageName === void 0) {\n      messageName = 'SERVER_ACTION';\n    }\n    if (requestId === void 0) {\n      requestId = undefined;\n    }\n    if (actionApp === void 0) {\n      actionApp = app.info;\n    }\n    client.sendServerAction(serverAction, actionApp, messageName, mode).then(function (messageId) {\n      if (requestId && messageId) {\n        requestIdMap[messageId.toString()] = requestId;\n      }\n    });\n  };\n  /** отправляет ответ на запрос доступа к местоположению и пр. меты */\n  var sendMetaForPermissionRequest = function (requestMessageId, appInfo, items) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var _a, props, data, meta;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, getAnswerForRequestPermissions(requestMessageId, appInfo, items)];\n          case 1:\n            _a = _b.sent(), props = __rest(_a.meta, []), data = __rest(_a, [\"meta\"]);\n            return [4 /*yield*/, metaProvider()];\n          case 2:\n            meta = _b.sent();\n            client.sendData(__assign({}, data), 'SERVER_ACTION', __assign(__assign({}, meta), convertFieldValuesToString(props)));\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  subscriptions.push(protocol.on('ready', function () {\n    return emit('vps', {\n      type: 'ready'\n    });\n  }));\n  // пока voicePlayer не доступен, включение озвучки не будет отправлено\n  subscriptions.push(settings.on('changed', function (nextSettings, prevSettings) {\n    if (nextSettings.disableDubbing !== prevSettings.disableDubbing) {\n      voiceReady && protocol.changeSettings({\n        dubbing: nextSettings.disableDubbing ? -1 : 1\n      });\n    }\n  }));\n  // при неудачном переподключении к сокету\n  subscriptions.push(transport.on('error', function (error) {\n    voice.stop();\n    protocol.clearQueue();\n    emit('vps', {\n      type: 'error',\n      error: error\n    });\n  }));\n  // обработка исходящих сообщений\n  subscriptions.push(protocol.on('outcoming', function (message) {\n    if (message.text || message.voice) {\n      /// не прерываем множественные ответы для сервер-экшенов\n      /// прервем, если получим карточку или бабл в ответ\n      lastMid = message.messageId;\n    }\n    emit('vps', {\n      type: 'outcoming',\n      message: message\n    });\n  }));\n  // обработка ошибок\n  subscriptions.push(protocol.on('error', function (error) {\n    emit('error', error);\n  }));\n  // оповещение о статусах\n  subscriptions.push(client.on('status', function (status, _a) {\n    var messageId = _a.messageId;\n    emit('status', status, messageId);\n  }));\n  // история на запрос GetHistoryRequest\n  subscriptions.push(client.on('history', function (history) {\n    emit('history', history);\n  }));\n  // обработка входящих команд, и событий аппа\n  subscriptions.push(client.on('systemMessage', function (systemMessage, originalMessage) {\n    if (originalMessage.messageName === 'ANSWER_TO_USER') {\n      var _a = systemMessage.answerId,\n        answerId = _a === void 0 ? 0 : _a,\n        activate_app_info = systemMessage.activate_app_info,\n        _b = systemMessage.items,\n        items = _b === void 0 ? [] : _b,\n        mesAppInfo = systemMessage.app_info;\n      var isChatApp = mesAppInfo && mesAppInfo.frontendType === 'CHAT_APP';\n      var isDialog = mesAppInfo && mesAppInfo.frontendType === 'DIALOG';\n      var isAppChanged = mesAppInfo && mesAppInfo.applicationId !== app.info.applicationId;\n      if (\n      // DIALOG не попадает в current_app\n      !isDialog && isAppChanged && (\n      /// игнорируем activate_app_info для чатапов\n      /// по-умолчанию activate_app_info: true\n      isChatApp || activate_app_info !== false)) {\n        emit('app', {\n          type: 'run',\n          app: mesAppInfo\n        });\n      }\n      if (isDialog && isAppChanged && app.info.applicationId !== DEFAULT_APPLICATION_ID) {\n        emit('app', {\n          type: 'run',\n          app: DEFAULT_APP\n        });\n      }\n      // cancel для множественных ответов\n      if (answerId >= 2 && lastMid > originalMessage.messageId) {\n        client.sendCancel(originalMessage.messageId);\n      }\n      // последним сообщением считаем, только если пришли карточки/баблы\n      if (lastMid < originalMessage.messageId && items.findIndex(function (_a) {\n        var bubble = _a.bubble,\n          card = _a.card;\n        return bubble || card;\n      }) >= 0) {\n        lastMid = originalMessage.messageId;\n      }\n      if (items.length) {\n        var _loop_1 = function (i) {\n          var command = items[i].command;\n          if (typeof command !== 'undefined') {\n            window.setTimeout(function () {\n              return emit('command', command);\n            });\n            if (command.type === 'start_music_recognition') {\n              voice.shazam();\n              return {\n                value: void 0\n              };\n            }\n            if (command.type === 'request_permissions' && mesAppInfo) {\n              sendMetaForPermissionRequest(originalMessage.messageId, mesAppInfo, command.permissions);\n              return {\n                value: void 0\n              };\n            }\n            if (command.type === 'action') {\n              emit('actionCommand', {\n                type: 'command',\n                command: command,\n                appInfo: mesAppInfo\n              });\n            }\n            if (mesAppInfo && BASIC_SMART_APP_COMMANDS_TYPES.includes(command.type)) {\n              // эмитим все команды, т.к бывают фоновые команды\n              emit('app', {\n                type: 'command',\n                command: __assign(__assign({}, command), {\n                  sdk_meta: {\n                    mid: originalMessage.messageId.toString(),\n                    requestId: requestIdMap[originalMessage.messageId.toString()]\n                  }\n                }),\n                app: mesAppInfo\n              });\n            }\n            if (command.type === 'close_app' && !isDialog) {\n              closeApp(mesAppInfo);\n            }\n          }\n        };\n        for (var i = 0; i < items.length; i++) {\n          var state_1 = _loop_1(i);\n          if (typeof state_1 === \"object\") return state_1.value;\n        }\n      }\n      emit('vps', {\n        type: 'incoming',\n        systemMessage: systemMessage,\n        originalMessage: originalMessage\n      });\n    }\n  }));\n  // прокидывает команды backgroundApp'ов в их подписчики\n  on('app', function (event) {\n    var _a;\n    if (event.type === 'command') {\n      var backgroundAppOnCommand = (_a = backgroundApps[event.app.applicationId]) === null || _a === void 0 ? void 0 : _a.commandsSubscribers;\n      if (Array.isArray(backgroundAppOnCommand)) {\n        backgroundAppOnCommand.forEach(function (onCommand) {\n          var _a;\n          onCommand(event.command, (_a = event.command.sdk_meta) === null || _a === void 0 ? void 0 : _a.mid);\n        });\n      }\n    }\n  });\n  /** уничтожает ассистент, очищает подписки */\n  var destroy = function () {\n    voice.destroy();\n    client.destroy();\n    protocol.destroy();\n    subscriptions.splice(0, subscriptions.length).map(function (unsubscribe) {\n      return unsubscribe();\n    });\n  };\n  /** запускает ассистент (приветствие) */\n  var start = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.disableGreetings,\n      disableGreetings = _c === void 0 ? false : _c,\n      _d = _b.initPhrase,\n      initPhrase = _d === void 0 ? undefined : _d,\n      _e = _b.isFirstSession,\n      isFirstSession = _e === void 0 ? false : _e;\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            if (!(!disableGreetings && isDefaultApp(app.info))) return [3 /*break*/, 2];\n            return [4 /*yield*/, client.sendOpenAssistant({\n              isFirstSession: isFirstSession\n            })];\n          case 1:\n            _f.sent();\n            _f.label = 2;\n          case 2:\n            if (initPhrase) {\n              return [2 /*return*/, client.sendText(initPhrase).then(function (messageId) {\n                return messageId ? client.waitForAnswer(messageId) : undefined;\n              })];\n            }\n            return [2 /*return*/, undefined];\n        }\n      });\n    });\n  };\n  return {\n    get activeApp() {\n      return !isDefaultApp(app.info) ? app.info : null;\n    },\n    get settings() {\n      return Object.create(Object.getPrototypeOf(settings.current), Object.getOwnPropertyDescriptors(settings.current));\n    },\n    destroy: destroy,\n    closeApp: closeApp,\n    listen: voice.listen,\n    shazam: voice.shazam,\n    sendServerAction: sendServerAction,\n    getHistoryRequest: protocol.getHistoryRequest,\n    sendText: sendText,\n    sendVoice: voice.sendVoice,\n    streamVoice: voice.streamVoice,\n    start: start,\n    stop: function () {\n      voice.stop();\n      if (lastMid !== 0) {\n        client.sendCancel(lastMid);\n      }\n      setTimeout(function () {\n        protocol.clearQueue();\n        transport.close();\n      });\n    },\n    stopTts: voice.stopPlaying,\n    stopVoice: voice.stop,\n    emit: emit,\n    on: on,\n    changeConfiguration: protocol.changeConfiguration,\n    changeSettings: settings.change,\n    changeSdkMeta: function (nextSdkMeta) {\n      sdkMeta = __assign(__assign({}, sdkMeta), nextSdkMeta);\n    },\n    reconnect: protocol.reconnect,\n    get protocol() {\n      return protocol;\n    },\n    setActiveApp: function (info, getState) {\n      app = {\n        info: info,\n        getState: getState\n      };\n    },\n    addBackgroundApp: function (_a) {\n      var appInfo = _a.appInfo,\n        getState = _a.getState;\n      backgroundApps[appInfo.applicationId] = {\n        appInfo: appInfo,\n        getState: getState,\n        commandsSubscribers: []\n      };\n      var remove = function () {\n        delete backgroundApps[appInfo.applicationId];\n      };\n      var onCommand = function (subscriber) {\n        var _a;\n        (_a = backgroundApps[appInfo.applicationId]) === null || _a === void 0 ? void 0 : _a.commandsSubscribers.push(subscriber);\n        return {\n          clearSubscribers: function () {\n            if (backgroundApps[appInfo.applicationId]) {\n              backgroundApps[appInfo.applicationId].commandsSubscribers = [];\n            }\n          }\n        };\n      };\n      var sendServerActionToBackgroundApp = function (serverAction, messageName, requestId) {\n        var _a;\n        if (messageName === void 0) {\n          messageName = 'SERVER_ACTION';\n        }\n        if (requestId === void 0) {\n          requestId = undefined;\n        }\n        return sendServerAction(serverAction, messageName, requestId, (_a = backgroundApps[appInfo.applicationId]) === null || _a === void 0 ? void 0 : _a.appInfo);\n      };\n      return {\n        remove: remove,\n        onCommand: onCommand,\n        sendServerAction: sendServerActionToBackgroundApp\n      };\n    },\n    get status() {\n      return protocol.status;\n    },\n    setDefaultCharacterMeta: function (characterId) {\n      defaultCharacter = characterId;\n    }\n  };\n};\nexport { createNavigatorAudioProvider as a, asrExports as b, createAssistant as c };","map":{"version":3,"names":["_","__assign","b","__awaiter","c","__generator","d","createNanoEvents","a","__rest","e","__spreadArray","commonjsRequire","r","requireMinimal","commonjsGlobal","p","protoExports","M","MessageNames","createProtocol","asr","exports","module","global","factory","$protobuf","$Reader","Reader","$util","util","$root","roots","Variables","properties","variables","keys","Object","i","length","prototype","emptyObject","decode","reader","create","end","undefined","len","pos","message","key","value","tag","uint32","end2","tag2","string","skipType","UndecodedSeconds","undecodedSeconds","float","FullyFinalized","EmotionResult","name","confidence","Hypothesis","words","acousticCost","linguisticCost","finalCost","phraseStart","phraseEnd","normalizedText","DecoderResult","hypothesis","emotionResult","contextAnswer","emptyArray","chunkStart","chunkEnd","timeEndpointDetectionMs","timeDecodingMs","isFinal","push","bool","ContextAnswer","contextResult","ContextRef","id","index","originalValue","predictedValue","score","int32","ErrorResponse","errorMessage","PacketWrapperFromServer","undecodedSecondsField","fullyFinalizedField","decoderResultField","errorResponse","$oneOfFields","defineProperty","get","oneOfGetter","set","oneOfSetter","asrExports","mtt","Music2TrackProtocol","result","isMusicFound","errorCode","MttResponse","mttExports","createClient","protocol","provideMeta","_a","on","emit","waitForAnswer","messageId","Promise","resolve","off","systemMessageData","originalMessage","messageName","ANSWER_TO_USER","DO_NOTHING","sendData","data","meta","getMessageId","sendSystemMessage","sendCancel","sendOpenAssistant","_b","isFirstSession","_c","_d","label","is_first_session","sent","sendMeta","additionalMeta","sendMute","sendServerAction","serverAction","appInfo","mode","systemData","app_info","server_action","source","sourceType","sendText","text","isSsml","shouldSendDisableDubbing","trim","batch","clientSendText","sendSettings","prevDubbing","sendDisableDubbing","isStillNeedReturnDubbing","configuration","settings","dubbing","createVoiceStream","callback","sendVoice","_e","_f","_g","_h","_j","systemMessage","JSON","parse","voice","Uint8Array","status","bytes","history_1","GetHistoryResponse","historyMessages","parsedHistory","map","historyMessage","content","STT","response","MTT","destroy","init","RETRY_INTERVAL","defaultWSCreator","url","WebSocket","createTransport","createWS","checkCertUrl","hasCert","retryTimeoutId","retries","webSocket","stopped","checkCert","checkUrl","window","fetch","then","catch","close","connect","okay","navigator","onLine","Error","binaryType","addEventListener","readyState","clearTimeout","setTimeout","open","reconnect","send","isOnline","convertToMetaPermissions","permission","type","getLocation","reject","geolocation","getCurrentPosition","coords","timestamp","lat","latitude","lon","longitude","accuracy","timeout","getTime","timezone_id","Intl","DateTimeFormat","resolvedOptions","timeZone","timezone_offset_sec","Date","getTimezoneOffset","now","getAnswerForRequestPermissions","requestMessageId","items","permissions","record_audio","geo","read_contacts","time","action_id","request_message_id","command_response","request_permissions","all","location_1","trys","location","isAudioSupported","AudioContext","webkitAudioContext","createAudioContext","options","audioContext","resolveAudioContext","onReady","isSafari_1","vendor","search","context_1","context","ready","state","onstatechange","handleClick_1","document","removeEventListener","oscillator","createOscillator","frequency","destination","start","stop","resume","unsubscribe_1","downsampleBuffer","buffer","inSampleRate","outSampleRate","sampleRateRatio","newLength","Math","round","Int16Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","min","TARGET_SAMPLE_RATE","IS_FIREFOX","userAgent","toLowerCase","indexOf","IS_SAFARI","test","processor","createAudioRecorder","stream","cb","input","getTracks","forEach","track","disconnect","sampleRate","createMediaStreamSource","createScriptProcessor","listener","inputBuffer","getChannelData","last","dataWithVoice","some","voiceData","createNavigatorAudioProvider","mediaDevices","getUserMedia","audio","err","createVoiceListener","createAudioProvider","stopRecord","cancelableToken","current","listen","handleVoice","capturedToken","recStop","createTrackCollection","trackIds","trackMap","clear","Array","Map","has","getById","getByIndex","predicate","createChunkQueue","chunks","duration","loaded","chunk","toPlay","remove","splice","popAll","allLoaded","bufferLen","ended","from16BitToFloat32","incomingData","l","outputData","Float32Array","createTrackStream","ctx","numberOfChannels","delay","onPlay","onEnd","onStop","trackStatus","queue","extraByte","lastChunkOffset","startTime","firstChunk","play","currentTime","getExtraBytes","bytesArraysSizes","incomingMessageVoiceDataLength","sourceLen","prepend","createChunk","audioBuffer","createBuffer","channelChunk","j","createBufferSource","onended","write","slicePoint","dataBuffer","ArrayBuffer","bufferUi8","bufferI16","slice","setLoaded","createVoicePlayer","actx","startVoiceDelay","tracks","active","cursor","append","trackId","cur","setActive","filterEmptyChunks","chunksOriginal","reduce","acc","chunkOriginal","filter","int","createVoice","client","voicePlayer","subscriptions","appInfoDict","mesIdQueue","isRecognizeInitializing","isPlaying","autolistenMessageId","currentVoiceMessageId","streaming","stopVoice","recognize","begin","isAutoListening","disableListening","args","_i","arguments","apply","streamVoice","cancelTimeoutId","ch","sendVoiceStream","shazam","mesId","emotion","tts","Number","idx","disableDubbing","toString","autoListening","auto_listening","code","listening","mid","nextSettings","unsubscribe","stopPlaying","createMutexedObject","initialObject","object","nextObject","tryApply","prevObject_1","isObjectChanged","lock","release","change","setts","prop","createMutexSwitcher","initialDeps","deps","nextDeps","values","every","dep","STATE_UPDATE_TIMEOUT","DEFAULT_PROJECT_ID","DEFAULT_APPLICATION_ID","DEFAULT_APP_VERSION_ID","DEFAULT_APP","projectId","applicationId","appversionId","frontendStateId","join","frontendType","systemName","frontendEndpoint","BASIC_SMART_APP_COMMANDS_TYPES","convertFieldValuesToString","stringify","isDefaultApp","promiseTimeout","promise","timeoutId","race","v","createAssistant","getMeta","getInitialMeta","defaultCharacter","requestIdMap","lastMid","backgroundApps","sendTextAsSsml","settingsSwitcher","isListenerStopped","isVoicePlayerEnded","voiceReady","app","info","sdkMeta","theme","metaProvider","appState","current_app","getBackgroundAppsMeta","background_apps","getState","console","error","apps","backgroundAppsIds","backgroundAppsMeta","results","appResult","transport","fakeVps","createFakeWS","default_character","event","changeSettings","closeApp","closing","requestId","actionApp","sendMetaForPermissionRequest","props","prevSettings","clearQueue","history","answerId","activate_app_info","mesAppInfo","isChatApp","isDialog","isAppChanged","findIndex","bubble","card","_loop_1","command","includes","sdk_meta","state_1","backgroundAppOnCommand","commandsSubscribers","isArray","onCommand","disableGreetings","initPhrase","activeApp","getPrototypeOf","getOwnPropertyDescriptors","getHistoryRequest","stopTts","changeConfiguration","changeSdkMeta","nextSdkMeta","setActiveApp","addBackgroundApp","subscriber","clearSubscribers","sendServerActionToBackgroundApp","setDefaultCharacterMeta","characterId"],"sources":["/Users/egor/Documents/GitHub/SBERProject/node_modules/@salutejs/client/esm/assistant-d559dcae.js"],"sourcesContent":["import { _ as __assign, b as __awaiter, c as __generator, d as createNanoEvents, a as __rest, e as __spreadArray } from './common-ba25e019.js';\nimport { b as commonjsRequire, r as requireMinimal, c as commonjsGlobal, p as protoExports, M as MessageNames, d as createProtocol } from './sdk-082d96e7.js';\n\nvar asr = {exports: {}};\n\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\n(function (module) {\n\t(function(global, factory) { /* global define, require, module */\n\n\t    /* AMD */ if (typeof commonjsRequire === 'function' && 'object' === 'object' && module && module.exports)\n\t        module.exports = factory(requireMinimal());\n\n\t})(commonjsGlobal, function($protobuf) {\n\n\t    // Common aliases\n\t    var $Reader = $protobuf.Reader, $util = $protobuf.util;\n\t    \n\t    // Exported root namespace\n\t    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\t    \n\t    $root.Variables = (function() {\n\t    \n\t        /**\n\t         * Properties of a Variables.\n\t         * @exports IVariables\n\t         * @interface IVariables\n\t         * @property {Object.<string,string>|null} [variables] Variables variables\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new Variables.\n\t         * @exports Variables\n\t         * @classdesc Represents a Variables.\n\t         * @implements IVariables\n\t         * @constructor\n\t         * @param {IVariables=} [properties] Properties to set\n\t         */\n\t        function Variables(properties) {\n\t            this.variables = {};\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * Variables variables.\n\t         * @member {Object.<string,string>} variables\n\t         * @memberof Variables\n\t         * @instance\n\t         */\n\t        Variables.prototype.variables = $util.emptyObject;\n\t    \n\t        /**\n\t         * Decodes a Variables message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof Variables\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {Variables} Variables\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        Variables.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Variables(), key, value;\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                case 1: {\n\t                        if (message.variables === $util.emptyObject)\n\t                            message.variables = {};\n\t                        var end2 = reader.uint32() + reader.pos;\n\t                        key = \"\";\n\t                        value = \"\";\n\t                        while (reader.pos < end2) {\n\t                            var tag2 = reader.uint32();\n\t                            switch (tag2 >>> 3) {\n\t                            case 1:\n\t                                key = reader.string();\n\t                                break;\n\t                            case 2:\n\t                                value = reader.string();\n\t                                break;\n\t                            default:\n\t                                reader.skipType(tag2 & 7);\n\t                                break;\n\t                            }\n\t                        }\n\t                        message.variables[key] = value;\n\t                        break;\n\t                    }\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        return Variables;\n\t    })();\n\t    \n\t    $root.UndecodedSeconds = (function() {\n\t    \n\t        /**\n\t         * Properties of an UndecodedSeconds.\n\t         * @exports IUndecodedSeconds\n\t         * @interface IUndecodedSeconds\n\t         * @property {number|null} [undecodedSeconds] UndecodedSeconds undecodedSeconds\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new UndecodedSeconds.\n\t         * @exports UndecodedSeconds\n\t         * @classdesc Represents an UndecodedSeconds.\n\t         * @implements IUndecodedSeconds\n\t         * @constructor\n\t         * @param {IUndecodedSeconds=} [properties] Properties to set\n\t         */\n\t        function UndecodedSeconds(properties) {\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * UndecodedSeconds undecodedSeconds.\n\t         * @member {number} undecodedSeconds\n\t         * @memberof UndecodedSeconds\n\t         * @instance\n\t         */\n\t        UndecodedSeconds.prototype.undecodedSeconds = 0;\n\t    \n\t        /**\n\t         * Decodes an UndecodedSeconds message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof UndecodedSeconds\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {UndecodedSeconds} UndecodedSeconds\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        UndecodedSeconds.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UndecodedSeconds();\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                case 1: {\n\t                        message.undecodedSeconds = reader.float();\n\t                        break;\n\t                    }\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        return UndecodedSeconds;\n\t    })();\n\t    \n\t    $root.FullyFinalized = (function() {\n\t    \n\t        /**\n\t         * Properties of a FullyFinalized.\n\t         * @exports IFullyFinalized\n\t         * @interface IFullyFinalized\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new FullyFinalized.\n\t         * @exports FullyFinalized\n\t         * @classdesc Represents a FullyFinalized.\n\t         * @implements IFullyFinalized\n\t         * @constructor\n\t         * @param {IFullyFinalized=} [properties] Properties to set\n\t         */\n\t        function FullyFinalized(properties) {\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * Decodes a FullyFinalized message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof FullyFinalized\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {FullyFinalized} FullyFinalized\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        FullyFinalized.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.FullyFinalized();\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        return FullyFinalized;\n\t    })();\n\t    \n\t    $root.EmotionResult = (function() {\n\t    \n\t        /**\n\t         * Properties of an EmotionResult.\n\t         * @exports IEmotionResult\n\t         * @interface IEmotionResult\n\t         * @property {string|null} [name] EmotionResult name\n\t         * @property {number|null} [confidence] EmotionResult confidence\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new EmotionResult.\n\t         * @exports EmotionResult\n\t         * @classdesc Represents an EmotionResult.\n\t         * @implements IEmotionResult\n\t         * @constructor\n\t         * @param {IEmotionResult=} [properties] Properties to set\n\t         */\n\t        function EmotionResult(properties) {\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * EmotionResult name.\n\t         * @member {string} name\n\t         * @memberof EmotionResult\n\t         * @instance\n\t         */\n\t        EmotionResult.prototype.name = \"\";\n\t    \n\t        /**\n\t         * EmotionResult confidence.\n\t         * @member {number} confidence\n\t         * @memberof EmotionResult\n\t         * @instance\n\t         */\n\t        EmotionResult.prototype.confidence = 0;\n\t    \n\t        /**\n\t         * Decodes an EmotionResult message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof EmotionResult\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {EmotionResult} EmotionResult\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        EmotionResult.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.EmotionResult();\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                case 1: {\n\t                        message.name = reader.string();\n\t                        break;\n\t                    }\n\t                case 2: {\n\t                        message.confidence = reader.float();\n\t                        break;\n\t                    }\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        return EmotionResult;\n\t    })();\n\t    \n\t    $root.Hypothesis = (function() {\n\t    \n\t        /**\n\t         * Properties of a Hypothesis.\n\t         * @exports IHypothesis\n\t         * @interface IHypothesis\n\t         * @property {string|null} [words] Hypothesis words\n\t         * @property {number|null} [acousticCost] Hypothesis acousticCost\n\t         * @property {number|null} [linguisticCost] Hypothesis linguisticCost\n\t         * @property {number|null} [finalCost] Hypothesis finalCost\n\t         * @property {number|null} [phraseStart] Hypothesis phraseStart\n\t         * @property {number|null} [phraseEnd] Hypothesis phraseEnd\n\t         * @property {string|null} [normalizedText] Hypothesis normalizedText\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new Hypothesis.\n\t         * @exports Hypothesis\n\t         * @classdesc Represents a Hypothesis.\n\t         * @implements IHypothesis\n\t         * @constructor\n\t         * @param {IHypothesis=} [properties] Properties to set\n\t         */\n\t        function Hypothesis(properties) {\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * Hypothesis words.\n\t         * @member {string} words\n\t         * @memberof Hypothesis\n\t         * @instance\n\t         */\n\t        Hypothesis.prototype.words = \"\";\n\t    \n\t        /**\n\t         * Hypothesis acousticCost.\n\t         * @member {number} acousticCost\n\t         * @memberof Hypothesis\n\t         * @instance\n\t         */\n\t        Hypothesis.prototype.acousticCost = 0;\n\t    \n\t        /**\n\t         * Hypothesis linguisticCost.\n\t         * @member {number} linguisticCost\n\t         * @memberof Hypothesis\n\t         * @instance\n\t         */\n\t        Hypothesis.prototype.linguisticCost = 0;\n\t    \n\t        /**\n\t         * Hypothesis finalCost.\n\t         * @member {number} finalCost\n\t         * @memberof Hypothesis\n\t         * @instance\n\t         */\n\t        Hypothesis.prototype.finalCost = 0;\n\t    \n\t        /**\n\t         * Hypothesis phraseStart.\n\t         * @member {number} phraseStart\n\t         * @memberof Hypothesis\n\t         * @instance\n\t         */\n\t        Hypothesis.prototype.phraseStart = 0;\n\t    \n\t        /**\n\t         * Hypothesis phraseEnd.\n\t         * @member {number} phraseEnd\n\t         * @memberof Hypothesis\n\t         * @instance\n\t         */\n\t        Hypothesis.prototype.phraseEnd = 0;\n\t    \n\t        /**\n\t         * Hypothesis normalizedText.\n\t         * @member {string} normalizedText\n\t         * @memberof Hypothesis\n\t         * @instance\n\t         */\n\t        Hypothesis.prototype.normalizedText = \"\";\n\t    \n\t        /**\n\t         * Decodes a Hypothesis message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof Hypothesis\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {Hypothesis} Hypothesis\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        Hypothesis.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Hypothesis();\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                case 1: {\n\t                        message.words = reader.string();\n\t                        break;\n\t                    }\n\t                case 2: {\n\t                        message.acousticCost = reader.float();\n\t                        break;\n\t                    }\n\t                case 3: {\n\t                        message.linguisticCost = reader.float();\n\t                        break;\n\t                    }\n\t                case 4: {\n\t                        message.finalCost = reader.float();\n\t                        break;\n\t                    }\n\t                case 5: {\n\t                        message.phraseStart = reader.float();\n\t                        break;\n\t                    }\n\t                case 6: {\n\t                        message.phraseEnd = reader.float();\n\t                        break;\n\t                    }\n\t                case 7: {\n\t                        message.normalizedText = reader.string();\n\t                        break;\n\t                    }\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        return Hypothesis;\n\t    })();\n\t    \n\t    $root.DecoderResult = (function() {\n\t    \n\t        /**\n\t         * Properties of a DecoderResult.\n\t         * @exports IDecoderResult\n\t         * @interface IDecoderResult\n\t         * @property {Array.<IHypothesis>|null} [hypothesis] DecoderResult hypothesis\n\t         * @property {number|null} [chunkStart] DecoderResult chunkStart\n\t         * @property {number|null} [chunkEnd] DecoderResult chunkEnd\n\t         * @property {number|null} [timeEndpointDetectionMs] DecoderResult timeEndpointDetectionMs\n\t         * @property {number|null} [timeDecodingMs] DecoderResult timeDecodingMs\n\t         * @property {IVariables|null} [variables] DecoderResult variables\n\t         * @property {boolean|null} [isFinal] DecoderResult isFinal\n\t         * @property {Array.<IEmotionResult>|null} [emotionResult] DecoderResult emotionResult\n\t         * @property {Array.<DecoderResult.IContextAnswer>|null} [contextAnswer] DecoderResult contextAnswer\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new DecoderResult.\n\t         * @exports DecoderResult\n\t         * @classdesc Represents a DecoderResult.\n\t         * @implements IDecoderResult\n\t         * @constructor\n\t         * @param {IDecoderResult=} [properties] Properties to set\n\t         */\n\t        function DecoderResult(properties) {\n\t            this.hypothesis = [];\n\t            this.emotionResult = [];\n\t            this.contextAnswer = [];\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * DecoderResult hypothesis.\n\t         * @member {Array.<IHypothesis>} hypothesis\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.hypothesis = $util.emptyArray;\n\t    \n\t        /**\n\t         * DecoderResult chunkStart.\n\t         * @member {number} chunkStart\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.chunkStart = 0;\n\t    \n\t        /**\n\t         * DecoderResult chunkEnd.\n\t         * @member {number} chunkEnd\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.chunkEnd = 0;\n\t    \n\t        /**\n\t         * DecoderResult timeEndpointDetectionMs.\n\t         * @member {number} timeEndpointDetectionMs\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.timeEndpointDetectionMs = 0;\n\t    \n\t        /**\n\t         * DecoderResult timeDecodingMs.\n\t         * @member {number} timeDecodingMs\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.timeDecodingMs = 0;\n\t    \n\t        /**\n\t         * DecoderResult variables.\n\t         * @member {IVariables|null|undefined} variables\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.variables = null;\n\t    \n\t        /**\n\t         * DecoderResult isFinal.\n\t         * @member {boolean} isFinal\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.isFinal = false;\n\t    \n\t        /**\n\t         * DecoderResult emotionResult.\n\t         * @member {Array.<IEmotionResult>} emotionResult\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.emotionResult = $util.emptyArray;\n\t    \n\t        /**\n\t         * DecoderResult contextAnswer.\n\t         * @member {Array.<DecoderResult.IContextAnswer>} contextAnswer\n\t         * @memberof DecoderResult\n\t         * @instance\n\t         */\n\t        DecoderResult.prototype.contextAnswer = $util.emptyArray;\n\t    \n\t        /**\n\t         * Decodes a DecoderResult message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof DecoderResult\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {DecoderResult} DecoderResult\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        DecoderResult.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.DecoderResult();\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                case 1: {\n\t                        if (!(message.hypothesis && message.hypothesis.length))\n\t                            message.hypothesis = [];\n\t                        message.hypothesis.push($root.Hypothesis.decode(reader, reader.uint32()));\n\t                        break;\n\t                    }\n\t                case 2: {\n\t                        message.chunkStart = reader.float();\n\t                        break;\n\t                    }\n\t                case 3: {\n\t                        message.chunkEnd = reader.float();\n\t                        break;\n\t                    }\n\t                case 4: {\n\t                        message.timeEndpointDetectionMs = reader.float();\n\t                        break;\n\t                    }\n\t                case 5: {\n\t                        message.timeDecodingMs = reader.float();\n\t                        break;\n\t                    }\n\t                case 6: {\n\t                        message.variables = $root.Variables.decode(reader, reader.uint32());\n\t                        break;\n\t                    }\n\t                case 7: {\n\t                        message.isFinal = reader.bool();\n\t                        break;\n\t                    }\n\t                case 8: {\n\t                        if (!(message.emotionResult && message.emotionResult.length))\n\t                            message.emotionResult = [];\n\t                        message.emotionResult.push($root.EmotionResult.decode(reader, reader.uint32()));\n\t                        break;\n\t                    }\n\t                case 9: {\n\t                        if (!(message.contextAnswer && message.contextAnswer.length))\n\t                            message.contextAnswer = [];\n\t                        message.contextAnswer.push($root.DecoderResult.ContextAnswer.decode(reader, reader.uint32()));\n\t                        break;\n\t                    }\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        DecoderResult.ContextAnswer = (function() {\n\t    \n\t            /**\n\t             * Properties of a ContextAnswer.\n\t             * @memberof DecoderResult\n\t             * @interface IContextAnswer\n\t             * @property {Array.<DecoderResult.ContextAnswer.IContextRef>|null} [contextResult] ContextAnswer contextResult\n\t             */\n\t    \n\t            /**\n\t             * Constructs a new ContextAnswer.\n\t             * @memberof DecoderResult\n\t             * @classdesc Represents a ContextAnswer.\n\t             * @implements IContextAnswer\n\t             * @constructor\n\t             * @param {DecoderResult.IContextAnswer=} [properties] Properties to set\n\t             */\n\t            function ContextAnswer(properties) {\n\t                this.contextResult = [];\n\t                if (properties)\n\t                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                        if (properties[keys[i]] != null)\n\t                            this[keys[i]] = properties[keys[i]];\n\t            }\n\t    \n\t            /**\n\t             * ContextAnswer contextResult.\n\t             * @member {Array.<DecoderResult.ContextAnswer.IContextRef>} contextResult\n\t             * @memberof DecoderResult.ContextAnswer\n\t             * @instance\n\t             */\n\t            ContextAnswer.prototype.contextResult = $util.emptyArray;\n\t    \n\t            /**\n\t             * Decodes a ContextAnswer message from the specified reader or buffer.\n\t             * @function decode\n\t             * @memberof DecoderResult.ContextAnswer\n\t             * @static\n\t             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t             * @param {number} [length] Message length if known beforehand\n\t             * @returns {DecoderResult.ContextAnswer} ContextAnswer\n\t             * @throws {Error} If the payload is not a reader or valid buffer\n\t             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t             */\n\t            ContextAnswer.decode = function decode(reader, length) {\n\t                if (!(reader instanceof $Reader))\n\t                    reader = $Reader.create(reader);\n\t                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.DecoderResult.ContextAnswer();\n\t                while (reader.pos < end) {\n\t                    var tag = reader.uint32();\n\t                    switch (tag >>> 3) {\n\t                    case 1: {\n\t                            if (!(message.contextResult && message.contextResult.length))\n\t                                message.contextResult = [];\n\t                            message.contextResult.push($root.DecoderResult.ContextAnswer.ContextRef.decode(reader, reader.uint32()));\n\t                            break;\n\t                        }\n\t                    default:\n\t                        reader.skipType(tag & 7);\n\t                        break;\n\t                    }\n\t                }\n\t                return message;\n\t            };\n\t    \n\t            ContextAnswer.ContextRef = (function() {\n\t    \n\t                /**\n\t                 * Properties of a ContextRef.\n\t                 * @memberof DecoderResult.ContextAnswer\n\t                 * @interface IContextRef\n\t                 * @property {string|null} [id] ContextRef id\n\t                 * @property {number|null} [index] ContextRef index\n\t                 * @property {string|null} [originalValue] ContextRef originalValue\n\t                 * @property {string|null} [predictedValue] ContextRef predictedValue\n\t                 * @property {number|null} [score] ContextRef score\n\t                 */\n\t    \n\t                /**\n\t                 * Constructs a new ContextRef.\n\t                 * @memberof DecoderResult.ContextAnswer\n\t                 * @classdesc Represents a ContextRef.\n\t                 * @implements IContextRef\n\t                 * @constructor\n\t                 * @param {DecoderResult.ContextAnswer.IContextRef=} [properties] Properties to set\n\t                 */\n\t                function ContextRef(properties) {\n\t                    if (properties)\n\t                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                            if (properties[keys[i]] != null)\n\t                                this[keys[i]] = properties[keys[i]];\n\t                }\n\t    \n\t                /**\n\t                 * ContextRef id.\n\t                 * @member {string} id\n\t                 * @memberof DecoderResult.ContextAnswer.ContextRef\n\t                 * @instance\n\t                 */\n\t                ContextRef.prototype.id = \"\";\n\t    \n\t                /**\n\t                 * ContextRef index.\n\t                 * @member {number} index\n\t                 * @memberof DecoderResult.ContextAnswer.ContextRef\n\t                 * @instance\n\t                 */\n\t                ContextRef.prototype.index = 0;\n\t    \n\t                /**\n\t                 * ContextRef originalValue.\n\t                 * @member {string} originalValue\n\t                 * @memberof DecoderResult.ContextAnswer.ContextRef\n\t                 * @instance\n\t                 */\n\t                ContextRef.prototype.originalValue = \"\";\n\t    \n\t                /**\n\t                 * ContextRef predictedValue.\n\t                 * @member {string} predictedValue\n\t                 * @memberof DecoderResult.ContextAnswer.ContextRef\n\t                 * @instance\n\t                 */\n\t                ContextRef.prototype.predictedValue = \"\";\n\t    \n\t                /**\n\t                 * ContextRef score.\n\t                 * @member {number} score\n\t                 * @memberof DecoderResult.ContextAnswer.ContextRef\n\t                 * @instance\n\t                 */\n\t                ContextRef.prototype.score = 0;\n\t    \n\t                /**\n\t                 * Decodes a ContextRef message from the specified reader or buffer.\n\t                 * @function decode\n\t                 * @memberof DecoderResult.ContextAnswer.ContextRef\n\t                 * @static\n\t                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t                 * @param {number} [length] Message length if known beforehand\n\t                 * @returns {DecoderResult.ContextAnswer.ContextRef} ContextRef\n\t                 * @throws {Error} If the payload is not a reader or valid buffer\n\t                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t                 */\n\t                ContextRef.decode = function decode(reader, length) {\n\t                    if (!(reader instanceof $Reader))\n\t                        reader = $Reader.create(reader);\n\t                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.DecoderResult.ContextAnswer.ContextRef();\n\t                    while (reader.pos < end) {\n\t                        var tag = reader.uint32();\n\t                        switch (tag >>> 3) {\n\t                        case 1: {\n\t                                message.id = reader.string();\n\t                                break;\n\t                            }\n\t                        case 2: {\n\t                                message.index = reader.int32();\n\t                                break;\n\t                            }\n\t                        case 3: {\n\t                                message.originalValue = reader.string();\n\t                                break;\n\t                            }\n\t                        case 4: {\n\t                                message.predictedValue = reader.string();\n\t                                break;\n\t                            }\n\t                        case 5: {\n\t                                message.score = reader.float();\n\t                                break;\n\t                            }\n\t                        default:\n\t                            reader.skipType(tag & 7);\n\t                            break;\n\t                        }\n\t                    }\n\t                    return message;\n\t                };\n\t    \n\t                return ContextRef;\n\t            })();\n\t    \n\t            return ContextAnswer;\n\t        })();\n\t    \n\t        return DecoderResult;\n\t    })();\n\t    \n\t    $root.ErrorResponse = (function() {\n\t    \n\t        /**\n\t         * Properties of an ErrorResponse.\n\t         * @exports IErrorResponse\n\t         * @interface IErrorResponse\n\t         * @property {string|null} [errorMessage] ErrorResponse errorMessage\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new ErrorResponse.\n\t         * @exports ErrorResponse\n\t         * @classdesc Represents an ErrorResponse.\n\t         * @implements IErrorResponse\n\t         * @constructor\n\t         * @param {IErrorResponse=} [properties] Properties to set\n\t         */\n\t        function ErrorResponse(properties) {\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * ErrorResponse errorMessage.\n\t         * @member {string} errorMessage\n\t         * @memberof ErrorResponse\n\t         * @instance\n\t         */\n\t        ErrorResponse.prototype.errorMessage = \"\";\n\t    \n\t        /**\n\t         * Decodes an ErrorResponse message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof ErrorResponse\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {ErrorResponse} ErrorResponse\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        ErrorResponse.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ErrorResponse();\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                case 1: {\n\t                        message.errorMessage = reader.string();\n\t                        break;\n\t                    }\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        return ErrorResponse;\n\t    })();\n\t    \n\t    $root.PacketWrapperFromServer = (function() {\n\t    \n\t        /**\n\t         * Properties of a PacketWrapperFromServer.\n\t         * @exports IPacketWrapperFromServer\n\t         * @interface IPacketWrapperFromServer\n\t         * @property {IUndecodedSeconds|null} [undecodedSecondsField] PacketWrapperFromServer undecodedSecondsField\n\t         * @property {IFullyFinalized|null} [fullyFinalizedField] PacketWrapperFromServer fullyFinalizedField\n\t         * @property {IDecoderResult|null} [decoderResultField] PacketWrapperFromServer decoderResultField\n\t         * @property {IErrorResponse|null} [errorResponse] PacketWrapperFromServer errorResponse\n\t         */\n\t    \n\t        /**\n\t         * Constructs a new PacketWrapperFromServer.\n\t         * @exports PacketWrapperFromServer\n\t         * @classdesc Represents a PacketWrapperFromServer.\n\t         * @implements IPacketWrapperFromServer\n\t         * @constructor\n\t         * @param {IPacketWrapperFromServer=} [properties] Properties to set\n\t         */\n\t        function PacketWrapperFromServer(properties) {\n\t            if (properties)\n\t                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                    if (properties[keys[i]] != null)\n\t                        this[keys[i]] = properties[keys[i]];\n\t        }\n\t    \n\t        /**\n\t         * PacketWrapperFromServer undecodedSecondsField.\n\t         * @member {IUndecodedSeconds|null|undefined} undecodedSecondsField\n\t         * @memberof PacketWrapperFromServer\n\t         * @instance\n\t         */\n\t        PacketWrapperFromServer.prototype.undecodedSecondsField = null;\n\t    \n\t        /**\n\t         * PacketWrapperFromServer fullyFinalizedField.\n\t         * @member {IFullyFinalized|null|undefined} fullyFinalizedField\n\t         * @memberof PacketWrapperFromServer\n\t         * @instance\n\t         */\n\t        PacketWrapperFromServer.prototype.fullyFinalizedField = null;\n\t    \n\t        /**\n\t         * PacketWrapperFromServer decoderResultField.\n\t         * @member {IDecoderResult|null|undefined} decoderResultField\n\t         * @memberof PacketWrapperFromServer\n\t         * @instance\n\t         */\n\t        PacketWrapperFromServer.prototype.decoderResultField = null;\n\t    \n\t        /**\n\t         * PacketWrapperFromServer errorResponse.\n\t         * @member {IErrorResponse|null|undefined} errorResponse\n\t         * @memberof PacketWrapperFromServer\n\t         * @instance\n\t         */\n\t        PacketWrapperFromServer.prototype.errorResponse = null;\n\t    \n\t        // OneOf field names bound to virtual getters and setters\n\t        var $oneOfFields;\n\t    \n\t        /**\n\t         * PacketWrapperFromServer MessageType.\n\t         * @member {\"undecodedSecondsField\"|\"fullyFinalizedField\"|\"decoderResultField\"|\"errorResponse\"|undefined} MessageType\n\t         * @memberof PacketWrapperFromServer\n\t         * @instance\n\t         */\n\t        Object.defineProperty(PacketWrapperFromServer.prototype, \"MessageType\", {\n\t            get: $util.oneOfGetter($oneOfFields = [\"undecodedSecondsField\", \"fullyFinalizedField\", \"decoderResultField\", \"errorResponse\"]),\n\t            set: $util.oneOfSetter($oneOfFields)\n\t        });\n\t    \n\t        /**\n\t         * Decodes a PacketWrapperFromServer message from the specified reader or buffer.\n\t         * @function decode\n\t         * @memberof PacketWrapperFromServer\n\t         * @static\n\t         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t         * @param {number} [length] Message length if known beforehand\n\t         * @returns {PacketWrapperFromServer} PacketWrapperFromServer\n\t         * @throws {Error} If the payload is not a reader or valid buffer\n\t         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t         */\n\t        PacketWrapperFromServer.decode = function decode(reader, length) {\n\t            if (!(reader instanceof $Reader))\n\t                reader = $Reader.create(reader);\n\t            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.PacketWrapperFromServer();\n\t            while (reader.pos < end) {\n\t                var tag = reader.uint32();\n\t                switch (tag >>> 3) {\n\t                case 1: {\n\t                        message.undecodedSecondsField = $root.UndecodedSeconds.decode(reader, reader.uint32());\n\t                        break;\n\t                    }\n\t                case 2: {\n\t                        message.fullyFinalizedField = $root.FullyFinalized.decode(reader, reader.uint32());\n\t                        break;\n\t                    }\n\t                case 4: {\n\t                        message.decoderResultField = $root.DecoderResult.decode(reader, reader.uint32());\n\t                        break;\n\t                    }\n\t                case 8: {\n\t                        message.errorResponse = $root.ErrorResponse.decode(reader, reader.uint32());\n\t                        break;\n\t                    }\n\t                default:\n\t                    reader.skipType(tag & 7);\n\t                    break;\n\t                }\n\t            }\n\t            return message;\n\t        };\n\t    \n\t        return PacketWrapperFromServer;\n\t    })();\n\n\t    return $root;\n\t}); \n} (asr));\n\nvar asrExports = asr.exports;\n\nvar mtt = {exports: {}};\n\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\n(function (module) {\n\t(function(global, factory) { /* global define, require, module */\n\n\t    /* AMD */ if (typeof commonjsRequire === 'function' && 'object' === 'object' && module && module.exports)\n\t        module.exports = factory(requireMinimal());\n\n\t})(commonjsGlobal, function($protobuf) {\n\n\t    // Common aliases\n\t    var $Reader = $protobuf.Reader, $util = $protobuf.util;\n\t    \n\t    // Exported root namespace\n\t    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\t    \n\t    $root.Music2TrackProtocol = (function() {\n\t    \n\t        /**\n\t         * Namespace Music2TrackProtocol.\n\t         * @exports Music2TrackProtocol\n\t         * @namespace\n\t         */\n\t        var Music2TrackProtocol = {};\n\t    \n\t        Music2TrackProtocol.DecoderResult = (function() {\n\t    \n\t            /**\n\t             * Properties of a DecoderResult.\n\t             * @memberof Music2TrackProtocol\n\t             * @interface IDecoderResult\n\t             * @property {string|null} [result] DecoderResult result\n\t             * @property {boolean|null} [isMusicFound] DecoderResult isMusicFound\n\t             * @property {boolean|null} [isFinal] DecoderResult isFinal\n\t             */\n\t    \n\t            /**\n\t             * Constructs a new DecoderResult.\n\t             * @memberof Music2TrackProtocol\n\t             * @classdesc Represents a DecoderResult.\n\t             * @implements IDecoderResult\n\t             * @constructor\n\t             * @param {Music2TrackProtocol.IDecoderResult=} [properties] Properties to set\n\t             */\n\t            function DecoderResult(properties) {\n\t                if (properties)\n\t                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                        if (properties[keys[i]] != null)\n\t                            this[keys[i]] = properties[keys[i]];\n\t            }\n\t    \n\t            /**\n\t             * DecoderResult result.\n\t             * @member {string} result\n\t             * @memberof Music2TrackProtocol.DecoderResult\n\t             * @instance\n\t             */\n\t            DecoderResult.prototype.result = \"\";\n\t    \n\t            /**\n\t             * DecoderResult isMusicFound.\n\t             * @member {boolean} isMusicFound\n\t             * @memberof Music2TrackProtocol.DecoderResult\n\t             * @instance\n\t             */\n\t            DecoderResult.prototype.isMusicFound = false;\n\t    \n\t            /**\n\t             * DecoderResult isFinal.\n\t             * @member {boolean} isFinal\n\t             * @memberof Music2TrackProtocol.DecoderResult\n\t             * @instance\n\t             */\n\t            DecoderResult.prototype.isFinal = false;\n\t    \n\t            /**\n\t             * Decodes a DecoderResult message from the specified reader or buffer.\n\t             * @function decode\n\t             * @memberof Music2TrackProtocol.DecoderResult\n\t             * @static\n\t             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t             * @param {number} [length] Message length if known beforehand\n\t             * @returns {Music2TrackProtocol.DecoderResult} DecoderResult\n\t             * @throws {Error} If the payload is not a reader or valid buffer\n\t             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t             */\n\t            DecoderResult.decode = function decode(reader, length) {\n\t                if (!(reader instanceof $Reader))\n\t                    reader = $Reader.create(reader);\n\t                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Music2TrackProtocol.DecoderResult();\n\t                while (reader.pos < end) {\n\t                    var tag = reader.uint32();\n\t                    switch (tag >>> 3) {\n\t                    case 1: {\n\t                            message.result = reader.string();\n\t                            break;\n\t                        }\n\t                    case 2: {\n\t                            message.isMusicFound = reader.bool();\n\t                            break;\n\t                        }\n\t                    case 3: {\n\t                            message.isFinal = reader.bool();\n\t                            break;\n\t                        }\n\t                    default:\n\t                        reader.skipType(tag & 7);\n\t                        break;\n\t                    }\n\t                }\n\t                return message;\n\t            };\n\t    \n\t            return DecoderResult;\n\t        })();\n\t    \n\t        Music2TrackProtocol.ErrorResponse = (function() {\n\t    \n\t            /**\n\t             * Properties of an ErrorResponse.\n\t             * @memberof Music2TrackProtocol\n\t             * @interface IErrorResponse\n\t             * @property {string|null} [errorMessage] ErrorResponse errorMessage\n\t             * @property {number|null} [errorCode] ErrorResponse errorCode\n\t             */\n\t    \n\t            /**\n\t             * Constructs a new ErrorResponse.\n\t             * @memberof Music2TrackProtocol\n\t             * @classdesc Represents an ErrorResponse.\n\t             * @implements IErrorResponse\n\t             * @constructor\n\t             * @param {Music2TrackProtocol.IErrorResponse=} [properties] Properties to set\n\t             */\n\t            function ErrorResponse(properties) {\n\t                if (properties)\n\t                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                        if (properties[keys[i]] != null)\n\t                            this[keys[i]] = properties[keys[i]];\n\t            }\n\t    \n\t            /**\n\t             * ErrorResponse errorMessage.\n\t             * @member {string} errorMessage\n\t             * @memberof Music2TrackProtocol.ErrorResponse\n\t             * @instance\n\t             */\n\t            ErrorResponse.prototype.errorMessage = \"\";\n\t    \n\t            /**\n\t             * ErrorResponse errorCode.\n\t             * @member {number} errorCode\n\t             * @memberof Music2TrackProtocol.ErrorResponse\n\t             * @instance\n\t             */\n\t            ErrorResponse.prototype.errorCode = 0;\n\t    \n\t            /**\n\t             * Decodes an ErrorResponse message from the specified reader or buffer.\n\t             * @function decode\n\t             * @memberof Music2TrackProtocol.ErrorResponse\n\t             * @static\n\t             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t             * @param {number} [length] Message length if known beforehand\n\t             * @returns {Music2TrackProtocol.ErrorResponse} ErrorResponse\n\t             * @throws {Error} If the payload is not a reader or valid buffer\n\t             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t             */\n\t            ErrorResponse.decode = function decode(reader, length) {\n\t                if (!(reader instanceof $Reader))\n\t                    reader = $Reader.create(reader);\n\t                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Music2TrackProtocol.ErrorResponse();\n\t                while (reader.pos < end) {\n\t                    var tag = reader.uint32();\n\t                    switch (tag >>> 3) {\n\t                    case 1: {\n\t                            message.errorMessage = reader.string();\n\t                            break;\n\t                        }\n\t                    case 2: {\n\t                            message.errorCode = reader.int32();\n\t                            break;\n\t                        }\n\t                    default:\n\t                        reader.skipType(tag & 7);\n\t                        break;\n\t                    }\n\t                }\n\t                return message;\n\t            };\n\t    \n\t            return ErrorResponse;\n\t        })();\n\t    \n\t        Music2TrackProtocol.MttResponse = (function() {\n\t    \n\t            /**\n\t             * Properties of a MttResponse.\n\t             * @memberof Music2TrackProtocol\n\t             * @interface IMttResponse\n\t             * @property {Music2TrackProtocol.IDecoderResult|null} [decoderResultField] MttResponse decoderResultField\n\t             * @property {Music2TrackProtocol.IErrorResponse|null} [errorResponse] MttResponse errorResponse\n\t             */\n\t    \n\t            /**\n\t             * Constructs a new MttResponse.\n\t             * @memberof Music2TrackProtocol\n\t             * @classdesc Represents a MttResponse.\n\t             * @implements IMttResponse\n\t             * @constructor\n\t             * @param {Music2TrackProtocol.IMttResponse=} [properties] Properties to set\n\t             */\n\t            function MttResponse(properties) {\n\t                if (properties)\n\t                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n\t                        if (properties[keys[i]] != null)\n\t                            this[keys[i]] = properties[keys[i]];\n\t            }\n\t    \n\t            /**\n\t             * MttResponse decoderResultField.\n\t             * @member {Music2TrackProtocol.IDecoderResult|null|undefined} decoderResultField\n\t             * @memberof Music2TrackProtocol.MttResponse\n\t             * @instance\n\t             */\n\t            MttResponse.prototype.decoderResultField = null;\n\t    \n\t            /**\n\t             * MttResponse errorResponse.\n\t             * @member {Music2TrackProtocol.IErrorResponse|null|undefined} errorResponse\n\t             * @memberof Music2TrackProtocol.MttResponse\n\t             * @instance\n\t             */\n\t            MttResponse.prototype.errorResponse = null;\n\t    \n\t            // OneOf field names bound to virtual getters and setters\n\t            var $oneOfFields;\n\t    \n\t            /**\n\t             * MttResponse MessageType.\n\t             * @member {\"decoderResultField\"|\"errorResponse\"|undefined} MessageType\n\t             * @memberof Music2TrackProtocol.MttResponse\n\t             * @instance\n\t             */\n\t            Object.defineProperty(MttResponse.prototype, \"MessageType\", {\n\t                get: $util.oneOfGetter($oneOfFields = [\"decoderResultField\", \"errorResponse\"]),\n\t                set: $util.oneOfSetter($oneOfFields)\n\t            });\n\t    \n\t            /**\n\t             * Decodes a MttResponse message from the specified reader or buffer.\n\t             * @function decode\n\t             * @memberof Music2TrackProtocol.MttResponse\n\t             * @static\n\t             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n\t             * @param {number} [length] Message length if known beforehand\n\t             * @returns {Music2TrackProtocol.MttResponse} MttResponse\n\t             * @throws {Error} If the payload is not a reader or valid buffer\n\t             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n\t             */\n\t            MttResponse.decode = function decode(reader, length) {\n\t                if (!(reader instanceof $Reader))\n\t                    reader = $Reader.create(reader);\n\t                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Music2TrackProtocol.MttResponse();\n\t                while (reader.pos < end) {\n\t                    var tag = reader.uint32();\n\t                    switch (tag >>> 3) {\n\t                    case 1: {\n\t                            message.decoderResultField = $root.Music2TrackProtocol.DecoderResult.decode(reader, reader.uint32());\n\t                            break;\n\t                        }\n\t                    case 2: {\n\t                            message.errorResponse = $root.Music2TrackProtocol.ErrorResponse.decode(reader, reader.uint32());\n\t                            break;\n\t                        }\n\t                    default:\n\t                        reader.skipType(tag & 7);\n\t                        break;\n\t                    }\n\t                }\n\t                return message;\n\t            };\n\t    \n\t            return MttResponse;\n\t        })();\n\t    \n\t        return Music2TrackProtocol;\n\t    })();\n\n\t    return $root;\n\t}); \n} (mtt));\n\nvar mttExports = mtt.exports;\n\nvar createClient = function (protocol, provideMeta) {\n    if (provideMeta === void 0) { provideMeta = undefined; }\n    var _a = createNanoEvents(), on = _a.on, emit = _a.emit;\n    /** ждет ответ бека и возвращает данные из этого ответа */\n    var waitForAnswer = function (messageId) {\n        return new Promise(function (resolve) {\n            var off = on('systemMessage', function (systemMessageData, originalMessage) {\n                if (originalMessage.messageId === messageId &&\n                    (originalMessage.messageName === MessageNames.ANSWER_TO_USER ||\n                        originalMessage.messageName === MessageNames.DO_NOTHING)) {\n                    off();\n                    resolve(systemMessageData);\n                }\n            });\n        });\n    };\n    /** отправляет произвольный systemMessage, не подкладывает мету */\n    var sendData = function (data, messageName, meta) {\n        if (messageName === void 0) { messageName = ''; }\n        var messageId = protocol.getMessageId();\n        protocol.sendSystemMessage({\n            data: data,\n            messageName: messageName,\n        }, true, messageId, { meta: meta || {} });\n        return messageId;\n    };\n    /** отправляет cancel на сообщение */\n    var sendCancel = function (messageId) {\n        protocol.sendCancel({}, true, messageId);\n    };\n    /** отправляет приветствие */\n    var sendOpenAssistant = function (_a) {\n        var _b = _a === void 0 ? { isFirstSession: false } : _a, isFirstSession = _b.isFirstSession;\n        return __awaiter(void 0, void 0, void 0, function () {\n            var data, meta, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        data = isFirstSession ? { is_first_session: true } : {};\n                        if (!provideMeta) return [3 /*break*/, 2];\n                        return [4 /*yield*/, provideMeta()];\n                    case 1:\n                        _c = _d.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _c = undefined;\n                        _d.label = 3;\n                    case 3:\n                        meta = _c;\n                        return [2 /*return*/, waitForAnswer(sendData(data, 'OPEN_ASSISTANT', meta))];\n                }\n            });\n        });\n    };\n    /** вызывает sendSystemMessage, куда подкладывает мету */\n    var sendMeta = function (sendSystemMessage, additionalMeta) { return __awaiter(void 0, void 0, void 0, function () {\n        var meta, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!provideMeta) return [3 /*break*/, 2];\n                    return [4 /*yield*/, provideMeta(additionalMeta)];\n                case 1:\n                    _a = _b.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    _a = {};\n                    _b.label = 3;\n                case 3:\n                    meta = _a;\n                    if (typeof meta !== 'undefined') {\n                        sendSystemMessage({\n                            data: {},\n                            messageName: '',\n                        }, false, {\n                            meta: meta,\n                        });\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    /** перестать слать озвучку для messageId */\n    var sendMute = function (messageId) {\n        protocol.sendMute({}, true, messageId);\n    };\n    /** отправляет server_action и мету */\n    var sendServerAction = function (serverAction, appInfo, messageName, mode) {\n        if (messageName === void 0) { messageName = 'SERVER_ACTION'; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var messageId;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        messageId = protocol.getMessageId();\n                        // мету и server_action отправляем в одном systemMessage\n                        return [4 /*yield*/, sendMeta(function (data, _, _a) {\n                                var _b = _a === void 0 ? {} : _a, meta = _b.meta;\n                                var systemData = __rest(data, []);\n                                protocol.sendSystemMessage({\n                                    // eslint-disable-next-line camelcase\n                                    data: __assign(__assign({}, systemData), { app_info: appInfo, server_action: serverAction, mode: mode }),\n                                    messageName: messageName || 'SERVER_ACTION',\n                                }, true, messageId, { meta: meta });\n                            }, {\n                                source: {\n                                    sourceType: 'vps',\n                                },\n                            })];\n                    case 1:\n                        // мету и server_action отправляем в одном systemMessage\n                        _a.sent();\n                        return [2 /*return*/, messageId];\n                }\n            });\n        });\n    };\n    /** отправляет текст и текущую мету */\n    var sendText = function (text, isSsml, shouldSendDisableDubbing, additionalMeta) {\n        if (isSsml === void 0) { isSsml = false; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (text.trim() === '') {\n                    return [2 /*return*/, undefined];\n                }\n                return [2 /*return*/, protocol.batch(function (_a) {\n                        var sendSystemMessage = _a.sendSystemMessage, clientSendText = _a.sendText, sendSettings = _a.sendSettings, messageId = _a.messageId;\n                        return __awaiter(void 0, void 0, void 0, function () {\n                            var prevDubbing, sendDisableDubbing, isStillNeedReturnDubbing;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0: return [4 /*yield*/, sendMeta(sendSystemMessage, additionalMeta)];\n                                    case 1:\n                                        _b.sent();\n                                        prevDubbing = protocol.configuration.settings.dubbing;\n                                        sendDisableDubbing = prevDubbing !== -1 && shouldSendDisableDubbing;\n                                        if (!sendDisableDubbing) return [3 /*break*/, 3];\n                                        return [4 /*yield*/, sendSettings({ dubbing: -1 }, false)];\n                                    case 2:\n                                        _b.sent();\n                                        _b.label = 3;\n                                    case 3:\n                                        isSsml ? clientSendText(text, {}, 'application/ssml') : clientSendText(text, {});\n                                        isStillNeedReturnDubbing = prevDubbing === protocol.configuration.settings.dubbing;\n                                        if (sendDisableDubbing && isStillNeedReturnDubbing) {\n                                            sendSettings({ dubbing: prevDubbing });\n                                        }\n                                        return [2 /*return*/, messageId];\n                                }\n                            });\n                        });\n                    })];\n            });\n        });\n    };\n    /** инициализирует исходящий голосовой поток, факт. передает в callback параметры для отправки голоса,\n     * отправляет мету */\n    var createVoiceStream = function (callback, additionalMeta) {\n        return protocol.batch(function (_a) {\n            var sendSystemMessage = _a.sendSystemMessage, sendVoice = _a.sendVoice, messageId = _a.messageId;\n            return __awaiter(void 0, void 0, void 0, function () {\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0: return [4 /*yield*/, sendMeta(sendSystemMessage, additionalMeta)];\n                        case 1:\n                            _b.sent();\n                            return [4 /*yield*/, callback({ sendVoice: sendVoice, messageId: messageId })];\n                        case 2:\n                            _b.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            });\n        });\n    };\n    var off = protocol.on('incoming', function (message) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        if ((_a = message.systemMessage) === null || _a === void 0 ? void 0 : _a.data) {\n            emit('systemMessage', JSON.parse(message.systemMessage.data), message);\n        }\n        if (message.voice) {\n            emit('voice', message.voice.data || new Uint8Array(), message);\n        }\n        if (message.status) {\n            emit('status', message.status, message);\n        }\n        if (message.messageName === 'TAKE_HISTORY' && ((_b = message.bytes) === null || _b === void 0 ? void 0 : _b.data)) {\n            var history_1 = protoExports.GetHistoryResponse.decode((_c = message.bytes) === null || _c === void 0 ? void 0 : _c.data).historyMessages;\n            var parsedHistory = history_1.map(function (historyMessage) { return (__assign(__assign({}, historyMessage), { content: JSON.parse(historyMessage.content || '') })); });\n            emit('history', parsedHistory, message);\n        }\n        if (message.messageName === MessageNames.STT && (message.text || ((_e = (_d = message.bytes) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.length))) {\n            var response = ((_g = (_f = message.bytes) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.length)\n                ? asrExports.PacketWrapperFromServer.decode(message.bytes.data)\n                : undefined;\n            emit('stt', { text: message.text, response: response }, message);\n        }\n        if (message.messageName === MessageNames.MTT && ((_j = (_h = message.bytes) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.length)) {\n            emit('musicRecognition', mttExports.Music2TrackProtocol.MttResponse.decode(message.bytes.data), message);\n        }\n    });\n    return {\n        destroy: function () {\n            off();\n        },\n        init: protocol.init,\n        createVoiceStream: createVoiceStream,\n        sendData: sendData,\n        sendMeta: sendMeta,\n        sendOpenAssistant: sendOpenAssistant,\n        sendServerAction: sendServerAction,\n        sendText: sendText,\n        sendCancel: sendCancel,\n        sendMute: sendMute,\n        on: on,\n        waitForAnswer: waitForAnswer,\n    };\n};\n\nvar RETRY_INTERVAL = 300; // ms\nvar defaultWSCreator = function (url) { return new WebSocket(url); };\nvar createTransport = function (_a) {\n    var _b = _a.createWS, createWS = _b === void 0 ? defaultWSCreator : _b, checkCertUrl = _a.checkCertUrl;\n    var _c = createNanoEvents(), on = _c.on, emit = _c.emit;\n    var hasCert = !checkCertUrl;\n    var retryTimeoutId = -1;\n    var retries = 0;\n    var status = 'closed';\n    var webSocket;\n    var stopped = true;\n    var checkCert = function (checkUrl) {\n        return new Promise(function (resolve) {\n            window\n                .fetch(checkUrl)\n                .then(function () { return resolve(true); })\n                .catch(function () { return resolve(false); });\n        });\n    };\n    var close = function () {\n        stopped = true;\n        if (status === 'closing' || status === 'closed') {\n            return;\n        }\n        status = 'closing';\n        webSocket === null || webSocket === void 0 ? void 0 : webSocket.close();\n    };\n    var connect = function (url) { return __awaiter(void 0, void 0, void 0, function () {\n        var okay;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    status = 'connecting';\n                    emit('connecting');\n                    if (!(!hasCert && window.navigator.onLine)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, checkCert(checkCertUrl)];\n                case 1:\n                    okay = _a.sent();\n                    if (!okay) {\n                        status = 'closed';\n                        emit('close');\n                        emit('error', new Error('Cert authority invalid'));\n                        return [2 /*return*/];\n                    }\n                    hasCert = true;\n                    _a.label = 2;\n                case 2:\n                    webSocket = createWS(url);\n                    webSocket.binaryType = 'arraybuffer';\n                    webSocket.addEventListener('open', function () {\n                        if (webSocket.readyState !== 1) {\n                            return;\n                        }\n                        window.clearTimeout(retryTimeoutId);\n                        retries = 0;\n                        status = 'open';\n                        emit('open');\n                    });\n                    webSocket.addEventListener('close', function () {\n                        status = 'closed';\n                        emit('close');\n                    });\n                    webSocket.addEventListener('error', function (e) {\n                        if (status !== 'connecting') {\n                            throw e;\n                        }\n                        // пробуем переподключаться, если возникла ошибка при коннекте\n                        if (!webSocket || (webSocket.readyState === 3 && !stopped)) {\n                            window.clearTimeout(retryTimeoutId);\n                            if (retries < 2) {\n                                retryTimeoutId = window.setTimeout(function () {\n                                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                                    open(url);\n                                    retries++;\n                                }, RETRY_INTERVAL * retries);\n                            }\n                            else {\n                                retries = 0;\n                                emit('error', e);\n                            }\n                        }\n                    });\n                    webSocket.addEventListener('message', function (_a) {\n                        var data = _a.data;\n                        emit('message', data);\n                    });\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    var open = function (url) {\n        if (status === 'connecting' || status === 'open') {\n            return;\n        }\n        stopped = false;\n        connect(url);\n    };\n    var reconnect = function (url) {\n        if (status === 'closed') {\n            open(url);\n            return;\n        }\n        window.setTimeout(function () { return reconnect(url); });\n        close();\n    };\n    var send = function (data) {\n        webSocket.send(data);\n    };\n    return {\n        close: close,\n        get isOnline() {\n            return window.navigator.onLine;\n        },\n        on: on,\n        open: open,\n        reconnect: reconnect,\n        send: send,\n    };\n};\n\nvar convertToMetaPermissions = function (permission) {\n    return Object.keys(permission).map(function (key) { return ({\n        type: key,\n        status: permission[key],\n    }); });\n};\nvar getLocation = function () { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n                navigator.geolocation.getCurrentPosition(function (_a) {\n                    var coords = _a.coords, timestamp = _a.timestamp;\n                    resolve({\n                        lat: coords.latitude,\n                        lon: coords.longitude,\n                        accuracy: coords.accuracy,\n                        timestamp: timestamp,\n                    });\n                }, reject, { timeout: 5000 });\n            })];\n    });\n}); };\nvar getTime = function () { return ({\n    // Здесь нужен полифилл, т.к. `Intl.DateTimeFormat().resolvedOptions().timeZone` - возвращает пустую строку\n    timezone_id: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    timezone_offset_sec: -new Date().getTimezoneOffset() * 60,\n    timestamp: Date.now(),\n}); };\nvar getAnswerForRequestPermissions = function (requestMessageId, appInfo, items) { return __awaiter(void 0, void 0, void 0, function () {\n    var permissions, response;\n    return __generator(this, function (_a) {\n        permissions = {\n            record_audio: 'denied_once',\n            geo: 'denied_once',\n            read_contacts: 'denied_permanently',\n            push: 'denied_once',\n        };\n        response = {\n            app_info: appInfo,\n            meta: {\n                time: getTime(),\n                permissions: [],\n            },\n            server_action: {\n                action_id: 'command_response',\n                request_message_id: requestMessageId,\n                command_response: {\n                    request_permissions: {\n                        permissions: [],\n                    },\n                },\n            },\n        };\n        return [2 /*return*/, Promise.all(items.map(function (permission) { return __awaiter(void 0, void 0, void 0, function () {\n                var _a, location_1;\n                var _c, _d, _e;\n                return __generator(this, function (_f) {\n                    switch (_f.label) {\n                        case 0:\n                            _a = permission;\n                            switch (_a) {\n                                case 'geo': return [3 /*break*/, 1];\n                            }\n                            return [3 /*break*/, 5];\n                        case 1:\n                            _f.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, getLocation()];\n                        case 2:\n                            location_1 = _f.sent();\n                            permissions.geo = 'granted';\n                            response.meta.location = location_1;\n                            (_c = response.server_action.command_response.request_permissions) === null || _c === void 0 ? void 0 : _c.permissions.push({\n                                type: 'geo',\n                                status: 'granted',\n                            });\n                            return [3 /*break*/, 4];\n                        case 3:\n                            _f.sent();\n                            permissions.geo = 'denied_permanently';\n                            (_d = response.server_action.command_response.request_permissions) === null || _d === void 0 ? void 0 : _d.permissions.push({\n                                type: 'geo',\n                                status: 'denied_permanently',\n                            });\n                            return [3 /*break*/, 4];\n                        case 4: return [3 /*break*/, 6];\n                        case 5:\n                            // остальные доступы не поддерживаем\n                            (_e = response.server_action.command_response.request_permissions) === null || _e === void 0 ? void 0 : _e.permissions.push({\n                                type: permission,\n                                status: 'denied_permanently',\n                            });\n                            return [3 /*break*/, 6];\n                        case 6: return [2 /*return*/];\n                    }\n                });\n            }); })).then(function () {\n                response.meta.permissions = convertToMetaPermissions(permissions);\n                return response;\n            })];\n    });\n}); };\n\nvar isAudioSupported = typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n/**\n * Возвращает новый инстанс AudioContext или ошибку\n * @param options AudioContextOptions\n * @returns AudioContext\n */\nvar createAudioContext = function (options) {\n    if (window.AudioContext) {\n        return new AudioContext(options);\n    }\n    if (window.webkitAudioContext) {\n        // eslint-disable-next-line new-cap\n        return new window.webkitAudioContext();\n    }\n    throw new Error('Audio not supported');\n};\nvar _a = createNanoEvents(), on = _a.on, emit = _a.emit;\nvar audioContext;\n/**\n * При помощи вызова функции из аргумента, возвращает, готовый к воспроизведению звука, AudioContext.\n * Всегда возвращает один и тот же AudioContext\n * @param onReady Функция, в аргумент которой будет возвращен AudioContext\n */\nvar resolveAudioContext = function (onReady) {\n    if (!audioContext) {\n        var isSafari_1 = navigator.vendor.search('Apple') >= 0;\n        var context_1 = createAudioContext();\n        audioContext = {\n            context: context_1,\n            ready: !isSafari_1 && context_1.state === 'running',\n            on: on,\n        };\n        context_1.onstatechange = function () {\n            if (audioContext.context.state === 'running') {\n                audioContext.ready = true;\n                emit('ready');\n            }\n        };\n        /// Контекст может быть не готов для использования сразу после создания\n        /// Если попробовать что-то воспроизвести в этом контексте - звука не будет\n        if (!audioContext.ready) {\n            var handleClick_1 = function () {\n                document.removeEventListener('click', handleClick_1);\n                if (isSafari_1) {\n                    /// проигрываем тишину, т.к нужно что-то проиграть,\n                    /// чтобы сафари разрешил воспроизводить звуки в любой момент в этом контексте\n                    var oscillator = audioContext.context.createOscillator();\n                    oscillator.frequency.value = 0;\n                    oscillator.connect(audioContext.context.destination);\n                    oscillator.start(0);\n                    oscillator.stop(0.5);\n                }\n                if (audioContext.context.state === 'suspended') {\n                    /// Developers who write games, WebRTC applications, or other websites that use the Web Audio API\n                    /// should call context.resume() after the first user gesture (e.g. a click, or tap)\n                    /// https://sites.google.com/a/chromium.org/dev/audio-video/autoplay\n                    audioContext.context.resume();\n                }\n            };\n            /// чтобы сделать контекст готовым к использованию (воспроизведению звука),\n            /// необходимо событие от пользователя (только не touch)\n            document.addEventListener('click', handleClick_1);\n        }\n    }\n    if (audioContext.ready) {\n        onReady && onReady(audioContext.context);\n    }\n    else {\n        var unsubscribe_1 = on('ready', function () {\n            onReady(audioContext.context);\n            unsubscribe_1();\n        });\n    }\n};\n\n/**\n * Понижает sample rate c inSampleRate до значения outSampleRate и преобразует Float32Array в ArrayBuffer\n * @param buffer Аудио\n * @param inSampleRate текущий sample rate\n * @param outSampleRate требуемый sample rate\n * @returns Аудио со значением sample rate = outSampleRate\n */\nvar downsampleBuffer = function (buffer, inSampleRate, outSampleRate) {\n    if (outSampleRate > inSampleRate) {\n        throw new Error('downsampling rate show be smaller than original sample rate');\n    }\n    var sampleRateRatio = inSampleRate / outSampleRate;\n    var newLength = Math.round(buffer.length / sampleRateRatio);\n    var result = new Int16Array(newLength);\n    var offsetResult = 0;\n    var offsetBuffer = 0;\n    while (offsetResult < result.length) {\n        var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n        var accum = 0;\n        var count = 0;\n        for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n            accum += buffer[i];\n            count++;\n        }\n        result[offsetResult] = Math.min(1, accum / count) * 0x7fff;\n        offsetResult++;\n        offsetBuffer = nextOffsetBuffer;\n    }\n    return result.buffer;\n};\nvar TARGET_SAMPLE_RATE = 16000;\nvar IS_FIREFOX = typeof window !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar IS_SAFARI = typeof window !== 'undefined' && /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nvar context;\nvar processor;\n/**\n * Преобразует stream в чанки (кусочки), и передает их в cb,\n * будет это делать, пока не будет вызвана функция остановки\n * @param stream Аудио-поток\n * @param cb callback, куда будут переданы чанки из потока\n * @returns Функция, вызов которой остановит передачу чанков\n */\nvar createAudioRecorder = function (stream, cb) {\n    return new Promise(function (resolve) {\n        var state = 'inactive';\n        var input;\n        var stop = function () {\n            if (state === 'inactive') {\n                return;\n            }\n            state = 'inactive';\n            stream.getTracks().forEach(function (track) {\n                track.stop();\n            });\n            input.disconnect();\n        };\n        var start = function () {\n            if (state !== 'inactive') {\n                throw new Error(\"Can't start not inactive recorder\");\n            }\n            state = 'recording';\n            if (!context) {\n                context = createAudioContext({\n                    // firefox не умеет выравнивать samplerate, будем делать это самостоятельно\n                    sampleRate: IS_FIREFOX ? undefined : TARGET_SAMPLE_RATE,\n                });\n            }\n            input = context.createMediaStreamSource(stream);\n            if (!processor) {\n                processor = context.createScriptProcessor(2048, 1, 1);\n            }\n            var listener = function (e) {\n                var buffer = e.inputBuffer.getChannelData(0);\n                var data = downsampleBuffer(buffer, context.sampleRate, TARGET_SAMPLE_RATE);\n                var last = state === 'inactive';\n                // отсылаем только чанки где есть звук voiceData > 0, т.к.\n                // в safari первые несколько чанков со звуком пустые\n                var dataWithVoice = new Uint8Array(data).some(function (voiceData) { return voiceData > 0; });\n                if (!IS_SAFARI || dataWithVoice) {\n                    resolve(stop);\n                    cb(data, last);\n                }\n                if (last) {\n                    processor.removeEventListener('audioprocess', listener);\n                }\n            };\n            processor.addEventListener('audioprocess', listener);\n            input.connect(processor);\n            processor.connect(context.destination);\n        };\n        start();\n    });\n};\n/**\n * Запрашивает у браузера доступ к микрофону и резолвит Promise, если разрешение получено.\n * После получения разрешения, чанки с голосом будут передаваться в cb - пока не будет вызвана функция из результата.\n * @param cb Callback, куда будут передаваться чанки с голосом пользователя\n * @returns Promise, который содержит функцию прерывающую слушание\n */\nvar createNavigatorAudioProvider = function (cb) {\n    return navigator.mediaDevices\n        .getUserMedia({\n        audio: true,\n    })\n        .then(function (stream) {\n        return createAudioRecorder(stream, cb);\n    })\n        .catch(function (err) {\n        if (window.location.protocol === 'http:') {\n            throw new Error('Audio is supported only on a secure connection');\n        }\n        throw err;\n    });\n};\n\n/**\n * Возвращает объект, позволяющий получать запись голоса пользователя и управлять ею.\n * @param createAudioProvider Источник голоса\n * @returns Api для запуска и остановки слушания\n */\nvar createVoiceListener = function (createAudioProvider) {\n    if (createAudioProvider === void 0) { createAudioProvider = createNavigatorAudioProvider; }\n    var _a = createNanoEvents(), emit = _a.emit, on = _a.on;\n    var stopRecord;\n    var status = 'stopped';\n    var cancelableToken = { current: false };\n    var stop = function () {\n        cancelableToken.current = true;\n        cancelableToken = { current: false };\n        status = 'stopped';\n        stopRecord === null || stopRecord === void 0 ? void 0 : stopRecord();\n        emit('status', 'stopped');\n    };\n    var listen = function (handleVoice) {\n        cancelableToken = { current: false };\n        var capturedToken = cancelableToken;\n        status = 'started';\n        emit('status', 'started');\n        return createAudioProvider(function (data, last) { return handleVoice(new Uint8Array(data), last); })\n            .then(function (recStop) {\n            stopRecord = recStop;\n        })\n            .then(function () {\n            if (capturedToken.current === true || status === 'stopped') {\n                stopRecord();\n            }\n            else {\n                status = 'listen';\n                emit('status', 'listen');\n            }\n        })\n            .catch(function (err) {\n            status = 'stopped';\n            emit('status', 'stopped');\n            throw err;\n        });\n    };\n    return {\n        listen: listen,\n        stop: stop,\n        on: on,\n        get status() {\n            return status;\n        },\n    };\n};\n\n/** Создает коллекцию треков  */\nvar createTrackCollection = function () {\n    var trackIds;\n    var trackMap;\n    var clear = function () {\n        trackIds = new Array();\n        trackMap = new Map();\n    };\n    var push = function (id, track) {\n        if (trackMap.has(id)) {\n            throw new Error('Track already exists');\n        }\n        trackMap.set(id, track);\n        trackIds.push(id);\n    };\n    var has = function (id) { return trackMap.has(id); };\n    var getById = function (id) {\n        var track = trackMap.get(id);\n        if (track === undefined) {\n            throw new Error('Unknown track id');\n        }\n        return track;\n    };\n    var getByIndex = function (index) {\n        if (index < 0 || index >= trackIds.length) {\n            throw new Error('Index out of bounds');\n        }\n        var track = trackMap.get(trackIds[index]);\n        if (track == null) {\n            throw new Error('Something wrong...');\n        }\n        return track;\n    };\n    var some = function (predicate) { return trackIds.some(function (id) { return predicate(getById(id)); }); };\n    clear();\n    return {\n        clear: clear,\n        has: has,\n        get: getById,\n        getByIndex: getByIndex,\n        push: push,\n        some: some,\n        get length() {\n            return trackIds.length;\n        },\n    };\n};\n\n/** Создает структуру для хранения загружаемых и воспроизводимых частей трека */\nvar createChunkQueue = function () {\n    var buffer = []; // очередь на воспроизведение\n    var chunks = []; // очередь воспроизведения\n    var duration = 0; // продолжительность очереди на воспроизведение, сек\n    var loaded = false; // флаг завершения загрузки\n    /** Добавить чанк в очередь на воспроизведение */\n    var push = function (chunk) {\n        var _a;\n        buffer.push(chunk);\n        duration += ((_a = chunk.buffer) === null || _a === void 0 ? void 0 : _a.duration) || 0;\n    };\n    /** Добавить чанк в очередь воспроизведения */\n    var toPlay = function (chunk) {\n        chunks.push(chunk);\n    };\n    /** Удалить чанк из очереди воспроизведения */\n    var remove = function (chunk) {\n        chunks.splice(chunks.indexOf(chunk), 1);\n    };\n    /** Получить очередь на воспроизведение */\n    var popAll = function () {\n        duration = 0;\n        return buffer.splice(0, buffer.length);\n    };\n    /** Проставляем признак окончания загрузки трека */\n    var allLoaded = function () {\n        loaded = true;\n    };\n    return {\n        get bufferLen() {\n            return buffer.length;\n        },\n        get chunks() {\n            return chunks;\n        },\n        allLoaded: allLoaded,\n        toPlay: toPlay,\n        remove: remove,\n        push: push,\n        popAll: popAll,\n        get length() {\n            return chunks.length;\n        },\n        get duration() {\n            return duration;\n        },\n        get ended() {\n            // считаем трек законченным, когда все загружено и воспроизведено\n            return loaded && chunks.length === 0 && buffer.length === 0;\n        },\n        get loaded() {\n            return loaded;\n        },\n    };\n};\n\nvar from16BitToFloat32 = function (incomingData) {\n    var l = incomingData.length;\n    var outputData = new Float32Array(l);\n    for (var i = 0; i < l; i += 1) {\n        outputData[i] = incomingData[i] / 32768.0;\n    }\n    return outputData;\n};\n/** Возвращает потоковый подгружаемый трек, который умеет себя проигрывать */\nvar createTrackStream = function (ctx, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.sampleRate, sampleRate = _c === void 0 ? 24000 : _c, _d = _b.numberOfChannels, numberOfChannels = _d === void 0 ? 1 : _d, _e = _b.delay, delay = _e === void 0 ? 0 : _e, onPlay = _b.onPlay, onEnd = _b.onEnd, onStop = _b.onStop, trackStatus = _b.trackStatus;\n    // очередь загруженных чанков (кусочков) трека\n    var queue = createChunkQueue();\n    var extraByte = null;\n    var status = trackStatus || 'stop';\n    var lastChunkOffset = 0;\n    var startTime = 0;\n    var firstChunk = true;\n    var end = function () {\n        // останавливаем воспроизведение чанков из очереди воспроизведения\n        queue.chunks.forEach(function (chunk) {\n            chunk.stop();\n        });\n        status = 'end';\n        onEnd && onEnd();\n        startTime = 0;\n        lastChunkOffset = 0;\n    };\n    var stop = function () {\n        onStop === null || onStop === void 0 ? void 0 : onStop();\n        end();\n    };\n    var play = function () {\n        if (status === 'end') {\n            return;\n        }\n        if (status !== 'play') {\n            status = 'play';\n            onPlay && onPlay();\n        }\n        if (queue.ended) {\n            end();\n            return;\n        }\n        // воспроизводим трек, если он полностью загрузился или длина загруженного больше задержки\n        if (queue.loaded || queue.duration >= delay) {\n            startTime = queue.length === 0 ? ctx.currentTime : startTime;\n            var chunks = queue.popAll();\n            chunks.forEach(function (chunk) {\n                var _a;\n                queue.toPlay(chunk);\n                chunk.start(startTime + lastChunkOffset);\n                lastChunkOffset += ((_a = chunk.buffer) === null || _a === void 0 ? void 0 : _a.duration) || 0;\n            });\n        }\n    };\n    var getExtraBytes = function (data, bytesArraysSizes) {\n        if (extraByte == null && bytesArraysSizes.incomingMessageVoiceDataLength % 2) {\n            extraByte = data[bytesArraysSizes.incomingMessageVoiceDataLength - 1];\n            bytesArraysSizes.incomingMessageVoiceDataLength -= 1;\n            bytesArraysSizes.sourceLen -= 1;\n        }\n        else if (extraByte != null) {\n            bytesArraysSizes.prepend = extraByte;\n            bytesArraysSizes.start = 1;\n            if (bytesArraysSizes.incomingMessageVoiceDataLength % 2) {\n                bytesArraysSizes.incomingMessageVoiceDataLength += 1;\n                extraByte = null;\n            }\n            else {\n                extraByte = data[bytesArraysSizes.incomingMessageVoiceDataLength - 1];\n                bytesArraysSizes.sourceLen -= 1;\n            }\n        }\n    };\n    var createChunk = function (chunk) {\n        var audioBuffer = ctx.createBuffer(numberOfChannels, chunk.length / numberOfChannels, sampleRate);\n        for (var i = 0; i < numberOfChannels; i++) {\n            var channelChunk = new Float32Array(chunk.length / numberOfChannels);\n            var index = 0;\n            for (var j = i; j < chunk.length; j += numberOfChannels) {\n                channelChunk[index++] = chunk[j];\n            }\n            audioBuffer.getChannelData(i).set(channelChunk);\n        }\n        var source = ctx.createBufferSource();\n        source.buffer = audioBuffer;\n        source.connect(ctx.destination);\n        source.onended = function () {\n            queue.remove(source);\n            if (queue.ended && status !== 'end') {\n                status = 'end';\n                onEnd && onEnd();\n            }\n        };\n        return source;\n    };\n    /** добавляет чанк в очередь на воспроизведение */\n    var write = function (data) {\n        // 44 байта - заголовок трека\n        var slicePoint = firstChunk ? 44 : 0;\n        var bytesArraysSizes = {\n            incomingMessageVoiceDataLength: data.length,\n            sourceLen: data.length,\n            start: 0,\n            prepend: null,\n        };\n        firstChunk = false;\n        if (slicePoint >= data.length) {\n            return;\n        }\n        getExtraBytes(data, bytesArraysSizes);\n        var dataBuffer = new ArrayBuffer(bytesArraysSizes.incomingMessageVoiceDataLength);\n        var bufferUi8 = new Uint8Array(dataBuffer);\n        var bufferI16 = new Int16Array(dataBuffer);\n        bufferUi8.set(data.slice(0, bytesArraysSizes.sourceLen), bytesArraysSizes.start);\n        if (bytesArraysSizes.prepend != null) {\n            bufferUi8[0] = bytesArraysSizes.prepend;\n        }\n        var chunk = createChunk(from16BitToFloat32(bufferI16.slice(slicePoint)));\n        queue.push(chunk);\n        if (status === 'play') {\n            play();\n        }\n    };\n    return {\n        get loaded() {\n            return queue.loaded;\n        },\n        setLoaded: function () {\n            queue.allLoaded();\n            if (status === 'play') {\n                play();\n            }\n        },\n        write: write,\n        get status() {\n            return status;\n        },\n        play: play,\n        stop: stop,\n    };\n};\n\nvar createVoicePlayer = function (actx, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.startVoiceDelay, startVoiceDelay = _c === void 0 ? 0.2 : _c, sampleRate = _b.sampleRate, numberOfChannels = _b.numberOfChannels;\n    var _d = createNanoEvents(), on = _d.on, emit = _d.emit;\n    var tracks = createTrackCollection();\n    // true - воспроизводим все треки в очереди (новые в том числе), false - скипаем всю очередь (новые в т.ч.)\n    var active = true;\n    // индекс текущего трека в tracks\n    var cursor = 0;\n    var play = function () {\n        if (cursor >= tracks.length) {\n            if (tracks.some(function (track) { return !track.loaded; })) {\n                return;\n            }\n            // очищаем коллекцию, если все треки были воспроизведены\n            cursor = 0;\n            tracks.clear();\n            return;\n        }\n        // рекурсивно последовательно включаем треки из очереди\n        var current = tracks.getByIndex(cursor);\n        if (current.status === 'end') {\n            if (cursor < tracks.length) {\n                cursor++;\n                play();\n            }\n        }\n        else {\n            current.play();\n        }\n    };\n    var append = function (data, trackId, last) {\n        if (last === void 0) { last = false; }\n        var current = tracks.has(trackId) ? tracks.get(trackId) : undefined;\n        if (current == null) {\n            /// если trackId нет в коллекции - создаем трек\n            /// по окончании проигрывания - запускаем следующий трек, вызывая play\n            current = createTrackStream(actx, {\n                sampleRate: sampleRate,\n                numberOfChannels: numberOfChannels,\n                delay: startVoiceDelay,\n                onPlay: function () { return emit('play', trackId); },\n                onStop: function () { return emit('stop', trackId); },\n                onEnd: function () {\n                    emit('end', trackId);\n                    play();\n                },\n                trackStatus: active ? 'stop' : 'end',\n            });\n            tracks.push(trackId, current);\n        }\n        if (current.status !== 'end' && data.length) {\n            current.write(data);\n        }\n        if (last) {\n            // все чанки трека загружены\n            current.setLoaded();\n        }\n        play();\n    };\n    var stop = function () {\n        while (cursor < tracks.length) {\n            var cur = cursor;\n            cursor++;\n            tracks.getByIndex(cur).stop();\n        }\n    };\n    return {\n        append: append,\n        setActive: function (value) {\n            active = value;\n            if (value) {\n                play();\n            }\n            else {\n                stop();\n            }\n        },\n        on: on,\n        stop: stop,\n    };\n};\n\n/** Фильтр тишины */\nvar filterEmptyChunks = function (chunksOriginal) {\n    return chunksOriginal.reduce(function (acc, chunkOriginal) {\n        var chunk = chunkOriginal.filter(function (int) { return int; });\n        if (chunk.length) {\n            acc.push(chunk);\n        }\n        return acc;\n    }, []);\n};\nvar createVoice = function (client, settings, emit, \n/// пока onReady не вызван, треки не воспроизводятся\n/// когда случится onReady, очередь треков начнет проигрываться\nonReady) {\n    var voicePlayer;\n    var listener = createVoiceListener();\n    var subscriptions = [];\n    var appInfoDict = {};\n    var mesIdQueue = [];\n    /** в процессе инициализации слушания */\n    var isRecognizeInitializing = false;\n    /** проигрывается/не проигрывается озвучка */\n    var isPlaying = false;\n    /** id сообщения, после проигрывания которого, нужно активировать слушание */\n    var autolistenMessageId = null;\n    /** id сообщения со звуком, отправляемое в данный момент */\n    var currentVoiceMessageId = null;\n    /** стримит поток чанков. Если метода нет, то стриминг не идёт */\n    var streaming = null;\n    /** Останавливает слушание голоса, отправляет cancel. Возвращает true - если слушание было активно */\n    var stopVoice = function (sendCancel) {\n        if (sendCancel === void 0) { sendCancel = true; }\n        autolistenMessageId = null;\n        streaming = null;\n        if (sendCancel && currentVoiceMessageId) {\n            client.sendCancel(currentVoiceMessageId);\n        }\n        currentVoiceMessageId = null;\n        if (listener.status === 'listen') {\n            listener.stop();\n            return true;\n        }\n        return false;\n    };\n    /** Останавливает слушание и воспроизведение */\n    var stop = function () {\n        // здесь важен порядок остановки голоса\n        stopVoice();\n        voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n    };\n    var recognize = function (_a) {\n        var _b = _a === void 0 ? {} : _a, begin = _b.begin, messageName = _b.messageName, _c = _b.isAutoListening, isAutoListening = _c === void 0 ? false : _c;\n        return __awaiter(void 0, void 0, void 0, function () {\n            var unsubscribe_1;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (stopVoice()) {\n                            return [2 /*return*/];\n                        }\n                        if (isPlaying) {\n                            voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n                            return [2 /*return*/];\n                        }\n                        if (settings.current.disableListening) {\n                            return [2 /*return*/];\n                        }\n                        if (!(listener.status === 'stopped' && !isRecognizeInitializing)) return [3 /*break*/, 2];\n                        isRecognizeInitializing = true;\n                        unsubscribe_1 = listener.on('status', function () {\n                            isRecognizeInitializing = false;\n                            unsubscribe_1();\n                        });\n                        return [4 /*yield*/, client.init()];\n                    case 1:\n                        _d.sent();\n                        return [2 /*return*/, client.createVoiceStream(function (_a) {\n                                var sendVoice = _a.sendVoice, messageId = _a.messageId;\n                                begin === null || begin === void 0 ? void 0 : begin.forEach(function (chunk) { return sendVoice(new Uint8Array(chunk), false); });\n                                currentVoiceMessageId = messageId;\n                                return listener.listen(function () {\n                                    var args = [];\n                                    for (var _i = 0; _i < arguments.length; _i++) {\n                                        args[_i] = arguments[_i];\n                                    }\n                                    sendVoice.apply(void 0, __spreadArray(__spreadArray([], args), [messageName]));\n                                });\n                            }, {\n                                source: {\n                                    sourceType: isAutoListening ? 'autoListening' : 'lavashar',\n                                },\n                            })];\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Стримит переданные чанки звука в VPS.\n     * При отсутствии last=true через 3 секунды тишины отправляет Cancel.\n     * Если было активно слушание или проигрывание – останавливает.\n     *\n     * @param chunks одноканальные, sampleRate: 16000\n     * @param last последние чанки этого стрима?\n     * @param messageName указать, если чанки для шазама\n     */\n    var streamVoice = function (chunks, last, messageName) { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    chunks = filterEmptyChunks(chunks);\n                    if (streaming === null || streaming === void 0 ? void 0 : streaming(chunks, last)) {\n                        return [2 /*return*/];\n                    }\n                    stopVoice();\n                    if (isPlaying) {\n                        voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n                    }\n                    if (!(!isRecognizeInitializing && chunks.length)) return [3 /*break*/, 2];\n                    isRecognizeInitializing = true;\n                    return [4 /*yield*/, client.init()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, client.createVoiceStream(function (_a) {\n                            var messageId = _a.messageId, sendVoice = _a.sendVoice;\n                            return __awaiter(void 0, void 0, void 0, function () {\n                                var cancelTimeoutId;\n                                return __generator(this, function (_b) {\n                                    cancelTimeoutId = -1;\n                                    isRecognizeInitializing = false;\n                                    currentVoiceMessageId = messageId;\n                                    streaming = function (ch, l) {\n                                        clearTimeout(cancelTimeoutId);\n                                        ch.forEach(function (chunk) { return sendVoice(new Uint8Array(chunk), l, messageName); });\n                                        if (l) {\n                                            streaming = null;\n                                        }\n                                        else {\n                                            cancelTimeoutId = setTimeout(function () {\n                                                if (streaming) {\n                                                    stopVoice();\n                                                }\n                                            }, 3000);\n                                        }\n                                        return true;\n                                    };\n                                    streaming(chunks, last);\n                                    return [2 /*return*/];\n                                });\n                            });\n                        }, {\n                            source: {\n                                sourceType: 'lavashar',\n                            },\n                        })];\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); };\n    /**\n     * Отправляет готовые чанки звука в VPS.\n     * Чанки считаются завершёнными (сообщение отправляется с last=true).\n     * Если было активно слушание или проигрывание – останавливает.\n     *\n     * @param chunks одноканальные, sampleRate: 16000\n     * @param messageName указать, если чанки для шазама\n     */\n    var sendVoice = function (chunks, messageName) { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    chunks = filterEmptyChunks(chunks);\n                    stopVoice();\n                    if (isPlaying) {\n                        voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n                    }\n                    if (!(!isRecognizeInitializing && chunks.length)) return [3 /*break*/, 2];\n                    isRecognizeInitializing = true;\n                    return [4 /*yield*/, client.init()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, client.createVoiceStream(function (_a) {\n                            var messageId = _a.messageId, sendVoiceStream = _a.sendVoice;\n                            isRecognizeInitializing = false;\n                            currentVoiceMessageId = messageId;\n                            chunks.forEach(function (chunk) { return sendVoiceStream(new Uint8Array(chunk), true, messageName); });\n                            return Promise.resolve();\n                        }, {\n                            source: {\n                                sourceType: 'lavashar',\n                            },\n                        })];\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); };\n    /**\n     * Активирует слушание голоса.\n     * Если было активно слушание или проигрывание - останавливает, слушание в этом случае не активируется.\n     *\n     * @param begin одноканальные чанки, sampleRate: 16000 – будут отправлены перед голосом пользователя\n     */\n    var listen = function (_a, isAutoListening) {\n        var _b = _a === void 0 ? {} : _a, begin = _b.begin;\n        return recognize({ begin: begin, isAutoListening: isAutoListening });\n    };\n    /**\n     * Активирует распознавание музыки.\n     * Если было активно слушание или проигрывание – останавливает\n     */\n    var shazam = function () {\n        return recognize({ messageName: MessageNames.MTT, isAutoListening: false });\n    };\n    if (isAudioSupported) {\n        resolveAudioContext(function (context) {\n            /// создаем плеер только если поддерживается аудио\n            /// и только когда готов AudioContext\n            voicePlayer = createVoicePlayer(context, { startVoiceDelay: 1 });\n            // начало проигрывания озвучки\n            subscriptions.push(voicePlayer.on('play', function (mesId) {\n                isPlaying = true;\n                emit({ emotion: 'talk' });\n                emit({ tts: { status: 'start', messageId: Number(mesId), appInfo: appInfoDict[mesId] } });\n            }));\n            subscriptions.push(voicePlayer.on('stop', function (mesId) {\n                client.sendMute(Number(mesId));\n            }));\n            // окончание проигрывания озвучки\n            subscriptions.push(voicePlayer.on('end', function (mesId) {\n                isPlaying = false;\n                emit({ emotion: 'idle' });\n                emit({ tts: { status: 'stop', messageId: Number(mesId), appInfo: appInfoDict[mesId] } });\n                if (mesId === autolistenMessageId) {\n                    listen();\n                }\n                // очистка сохраненных appInfo и messageId\n                var idx = 0;\n                do {\n                    delete appInfoDict[mesIdQueue[0]];\n                } while (mesIdQueue[idx++] !== mesId && mesIdQueue.length > idx);\n                mesIdQueue.splice(0, idx);\n            }));\n            // оповещаем о готовности к воспроизведению звука\n            onReady === null || onReady === void 0 ? void 0 : onReady();\n        });\n    }\n    subscriptions.push(\n    // обработка входящей озвучки\n    client.on('voice', function (data, message) {\n        if (settings.current.disableDubbing) {\n            return;\n        }\n        voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.append(data, message.messageId.toString(), message.last === 1);\n    }), \n    // статусы слушания речи\n    listener.on('status', function (status) {\n        emit({ listener: { status: status } });\n        if (status === 'listen') {\n            voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(false);\n            emit({ emotion: 'listen' });\n        }\n        else if (status === 'stopped') {\n            voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(!settings.current.disableDubbing);\n            emit({ asr: { text: '' }, emotion: 'idle' });\n        }\n    }), \n    // активация автослушания\n    client.on('systemMessage', function (systemMessage, originalMessage) {\n        var autoListening = systemMessage.auto_listening;\n        var messageId = originalMessage.messageId.toString();\n        if (typeof systemMessage.app_info !== 'undefined') {\n            appInfoDict[messageId] = systemMessage.app_info;\n            mesIdQueue.push(messageId);\n        }\n        if (autoListening) {\n            /// если озвучка включена - сохраняем mesId чтобы включить слушание после озвучки\n            /// если озвучка выключена - включаем слушание сразу\n            if (settings.current.disableDubbing === false) {\n                autolistenMessageId = messageId;\n            }\n            else {\n                listen({}, autoListening);\n            }\n        }\n    }), client.on('status', function (_a) {\n        var code = _a.code;\n        if (code < 0) {\n            stopVoice(false);\n        }\n    }), client.on('stt', function (_a, originalMessage) {\n        var _b;\n        var text = _a.text, response = _a.response;\n        var listening = listener.status === 'listen' && !settings.current.disableListening;\n        if (text) {\n            var last = originalMessage.last === 1;\n            if (last || listening) {\n                emit({\n                    asr: {\n                        mid: originalMessage.messageId,\n                        text: text.data || '',\n                        last: last,\n                    },\n                });\n            }\n            if (last) {\n                stopVoice(false);\n            }\n        }\n        if (response) {\n            var decoderResultField = response.decoderResultField, errorResponse = response.errorResponse;\n            var last = !!(decoderResultField && (decoderResultField === null || decoderResultField === void 0 ? void 0 : decoderResultField.isFinal));\n            if ((last || listening) && ((_b = decoderResultField === null || decoderResultField === void 0 ? void 0 : decoderResultField.hypothesis) === null || _b === void 0 ? void 0 : _b.length)) {\n                emit({\n                    asr: {\n                        mid: originalMessage.messageId,\n                        text: decoderResultField.hypothesis[0].normalizedText || '',\n                        last: last,\n                    },\n                });\n            }\n            if (last || errorResponse) {\n                stopVoice(false);\n            }\n        }\n    }), client.on('musicRecognition', function (response, originalMessage) {\n        var _a;\n        emit({ mtt: { response: response, mid: originalMessage.messageId } });\n        if (((_a = response.decoderResultField) === null || _a === void 0 ? void 0 : _a.isFinal) || response.errorResponse) {\n            stopVoice(false);\n        }\n    }), settings.on('change-request', function (nextSettings) {\n        var disableDubbing = nextSettings.disableDubbing, disableListening = nextSettings.disableListening;\n        /// Важен порядок обработки флагов слушания и озвучки —\n        /// сначала слушание, потом озвучка\n        disableListening && stopVoice();\n        // Такой вызов необходим, чтобы включая озвучку она тут же проигралась (при её наличии), и наоборот\n        settings.current.disableDubbing !== disableDubbing && (voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(!disableDubbing));\n    }));\n    return {\n        destroy: function () {\n            stopVoice();\n            voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.setActive(false);\n            subscriptions.splice(0, subscriptions.length).map(function (unsubscribe) { return unsubscribe(); });\n        },\n        listen: listen,\n        shazam: shazam,\n        sendVoice: sendVoice,\n        streamVoice: streamVoice,\n        stop: stop,\n        stopPlaying: function () {\n            voicePlayer === null || voicePlayer === void 0 ? void 0 : voicePlayer.stop();\n        },\n    };\n};\n\nvar createMutexedObject = function (initialObject) {\n    var _a = createNanoEvents(), on = _a.on, emit = _a.emit;\n    var object = __assign({}, initialObject);\n    var nextObject = {};\n    var mode = 'released';\n    var tryApply = function () {\n        if (mode === 'released') {\n            var prevObject_1 = object;\n            object = __assign(__assign({}, prevObject_1), nextObject);\n            var isObjectChanged = Object.keys(nextObject).some(function (name) { return nextObject[name] !== prevObject_1[name]; });\n            if (isObjectChanged) {\n                emit('changed', object, prevObject_1);\n            }\n        }\n    };\n    var lock = function () {\n        mode = 'locked';\n    };\n    var release = function () {\n        mode = 'released';\n        tryApply();\n    };\n    var change = function (setts) {\n        nextObject = __assign(__assign({}, nextObject), setts);\n        emit('change-request', setts);\n        tryApply();\n    };\n    var current = {};\n    Object.keys(initialObject).forEach(function (prop) {\n        Object.defineProperty(current, prop, {\n            get: function () {\n                return object[prop];\n            },\n        });\n    });\n    return {\n        on: on,\n        lock: lock,\n        release: release,\n        change: change,\n        current: current,\n    };\n};\n\nvar createMutexSwitcher = function (_a, initialDeps) {\n    var lock = _a.lock, release = _a.release;\n    var deps = __assign({}, initialDeps);\n    return {\n        change: function (nextDeps) {\n            deps = __assign(__assign({}, deps), nextDeps);\n            if (Object.values(deps).every(function (dep) { return dep; })) {\n                release();\n            }\n            else {\n                lock();\n            }\n        },\n    };\n};\n\nvar STATE_UPDATE_TIMEOUT = 200;\nvar DEFAULT_PROJECT_ID = 'd929986a-611a-2ba0-6174-1928c99600a5';\nvar DEFAULT_APPLICATION_ID = '7c4e23bf-cd93-b57e-874b-d9fc1b35f93d';\nvar DEFAULT_APP_VERSION_ID = '26d0bb2e-45d6-a276-f70e-6c016d1f9cff';\nvar DEFAULT_APP = {\n    projectId: DEFAULT_PROJECT_ID,\n    applicationId: DEFAULT_APPLICATION_ID,\n    appversionId: DEFAULT_APP_VERSION_ID,\n    frontendStateId: [DEFAULT_PROJECT_ID, DEFAULT_APPLICATION_ID, DEFAULT_APP_VERSION_ID].join('_'),\n    frontendType: 'DIALOG',\n    systemName: 'assistant',\n    frontendEndpoint: 'None',\n};\nvar BASIC_SMART_APP_COMMANDS_TYPES = ['smart_app_data', 'smart_app_error', 'start_smart_search', 'navigation'];\nfunction convertFieldValuesToString(object) {\n    return Object.keys(object).reduce(function (acc, key) {\n        if (object[key]) {\n            acc[key] = JSON.stringify(object[key]);\n        }\n        return acc;\n    }, {});\n}\nvar isDefaultApp = function (appInfo) { return appInfo.frontendStateId === DEFAULT_APP.frontendStateId; };\nvar promiseTimeout = function (promise, timeout) {\n    var timeoutId;\n    return Promise.race([\n        promise.then(function (v) {\n            if (timeoutId) {\n                window.clearTimeout(timeoutId);\n            }\n            return v;\n        }),\n        new Promise(function (_, reject) {\n            timeoutId = window.setTimeout(function () {\n                reject(new Error(\"Timed out in \" + timeout + \" ms.\"));\n            }, timeout);\n        }),\n    ]);\n};\nvar createAssistant = function (_a) {\n    var _b;\n    var getMeta = _a.getMeta, getInitialMeta = _a.getInitialMeta, checkCertUrl = _a.checkCertUrl, configuration = __rest(_a, [\"getMeta\", \"getInitialMeta\", \"checkCertUrl\"]);\n    var _c = createNanoEvents(), on = _c.on, emit = _c.emit;\n    // default_character отправляется в мета при отправке InitialSettings\n    var defaultCharacter = 'sber';\n    // хеш [messageId]: requestId, где requestId - пользовательский ид экшена\n    var requestIdMap = {};\n    // mid для последнего отправленного/принятого сообщения (кроме server_action)\n    var lastMid = 0;\n    var subscriptions = [];\n    var backgroundApps = {};\n    var settings = createMutexedObject({\n        disableDubbing: configuration.settings.dubbing === -1,\n        disableListening: false,\n        sendTextAsSsml: false,\n    });\n    var settingsSwitcher = createMutexSwitcher(settings, { isListenerStopped: true, isVoicePlayerEnded: true });\n    // готов/не готов воспроизводить озвучку\n    var voiceReady = false;\n    // текущий апп\n    var app = { info: DEFAULT_APP };\n    var sdkMeta = { theme: 'dark' };\n    var metaProvider = function (additionalMeta) { return __awaiter(void 0, void 0, void 0, function () {\n        var appState, _a, current_app, getBackgroundAppsMeta, background_apps;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!(app !== null && app.info.frontendType === 'WEB_APP' && app.getState)) return [3 /*break*/, 2];\n                    return [4 /*yield*/, promiseTimeout(app.getState(), STATE_UPDATE_TIMEOUT).catch(function () {\n                            // eslint-disable-next-line no-console\n                            console.error('App-state wasn`t resolved, timeout had been expired');\n                            return undefined;\n                        })];\n                case 1:\n                    _a = _b.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    _a = undefined;\n                    _b.label = 3;\n                case 3:\n                    appState = _a;\n                    current_app = {\n                        app_info: app.info,\n                        state: appState || {},\n                    };\n                    getBackgroundAppsMeta = function () { return __awaiter(void 0, void 0, void 0, function () {\n                        var apps, backgroundAppsIds, backgroundAppsMeta;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    apps = __assign({}, backgroundApps);\n                                    backgroundAppsIds = Object.keys(apps);\n                                    backgroundAppsMeta = [];\n                                    return [4 /*yield*/, Promise.all(backgroundAppsIds.map(function (applicationId) { return __awaiter(void 0, void 0, void 0, function () {\n                                            var _a, getState;\n                                            return __generator(this, function (_b) {\n                                                _a = apps[applicationId].getState, getState = _a === void 0 ? function () { return Promise.resolve({}); } : _a;\n                                                return [2 /*return*/, promiseTimeout(getState(), STATE_UPDATE_TIMEOUT).then(function (state) { return state; }, function () { return ({}); })];\n                                            });\n                                        }); })).then(function (results) {\n                                            results.forEach(function (appResult, index) {\n                                                var state = appResult;\n                                                var applicationId = backgroundAppsIds[index];\n                                                backgroundAppsMeta.push({\n                                                    app_info: apps[applicationId].appInfo,\n                                                    state: state,\n                                                });\n                                            });\n                                        })];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/, backgroundAppsMeta];\n                            }\n                        });\n                    }); };\n                    return [4 /*yield*/, getBackgroundAppsMeta()];\n                case 4:\n                    background_apps = _b.sent();\n                    return [2 /*return*/, convertFieldValuesToString(__assign(__assign(__assign(__assign({}, sdkMeta), { time: getTime(), current_app: current_app, background_apps: background_apps }), (additionalMeta || {})), (getMeta ? getMeta() : {})))];\n            }\n        });\n    }); };\n    var transport = createTransport({\n        createWS: (_b = configuration.fakeVps) === null || _b === void 0 ? void 0 : _b.createFakeWS,\n        checkCertUrl: checkCertUrl,\n    });\n    var protocol = createProtocol(transport, __assign(__assign({}, configuration), { getInitialMeta: typeof getInitialMeta !== 'undefined'\n            ? function () {\n                return getInitialMeta().then(function (meta) {\n                    return convertFieldValuesToString(__assign(__assign({}, meta), { default_character: defaultCharacter }));\n                });\n            }\n            : function () {\n                return convertFieldValuesToString({\n                    default_character: defaultCharacter,\n                });\n            }, \n        // пока голос не готов, выключаем озвучку\n        settings: __assign(__assign({}, configuration.settings), { dubbing: -1 }) }));\n    var client = createClient(protocol, metaProvider);\n    var voice = createVoice(client, settings, function (event) {\n        if (typeof event.tts !== 'undefined') {\n            emit('tts', event.tts);\n            settingsSwitcher.change({ isVoicePlayerEnded: event.tts.status === 'stop' });\n            return;\n        }\n        if (typeof event.listener !== 'undefined') {\n            settingsSwitcher.change({ isListenerStopped: event.listener.status === 'stopped' });\n        }\n        emit('assistant', event);\n    }, function () {\n        voiceReady = true;\n        if (!settings.current.disableDubbing) {\n            protocol.changeSettings({ dubbing: 1 });\n        }\n    });\n    /** завершает текущий апп */\n    var closeApp = function (closing) {\n        if (closing === void 0) { closing = app.info; }\n        // переключить на дефолтный апп\n        if (closing.applicationId === app.info.applicationId) {\n            /// выглядит как нарушение логики,\n            /// но с точки зрения апи - ок\n            /// иначе потребителю нужно знать про DEFAULT_APP\n            app = {\n                info: DEFAULT_APP,\n            };\n        }\n        if (!isDefaultApp(closing)) {\n            emit('app', { type: 'close', app: closing });\n        }\n    };\n    /** отправляет текст */\n    var sendText = function (text, shouldSendDisableDubbing, additionalMeta) {\n        if (shouldSendDisableDubbing === void 0) { shouldSendDisableDubbing = false; }\n        voice.stop();\n        return client.sendText(text, settings.current.sendTextAsSsml, shouldSendDisableDubbing, additionalMeta);\n    };\n    /** отправляет server_action */\n    var sendServerAction = function (serverAction, messageName, requestId, actionApp, mode) {\n        if (messageName === void 0) { messageName = 'SERVER_ACTION'; }\n        if (requestId === void 0) { requestId = undefined; }\n        if (actionApp === void 0) { actionApp = app.info; }\n        client.sendServerAction(serverAction, actionApp, messageName, mode).then(function (messageId) {\n            if (requestId && messageId) {\n                requestIdMap[messageId.toString()] = requestId;\n            }\n        });\n    };\n    /** отправляет ответ на запрос доступа к местоположению и пр. меты */\n    var sendMetaForPermissionRequest = function (requestMessageId, appInfo, items) { return __awaiter(void 0, void 0, void 0, function () {\n        var _a, props, data, meta;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, getAnswerForRequestPermissions(requestMessageId, appInfo, items)];\n                case 1:\n                    _a = _b.sent(), props = __rest(_a.meta, []), data = __rest(_a, [\"meta\"]);\n                    return [4 /*yield*/, metaProvider()];\n                case 2:\n                    meta = _b.sent();\n                    client.sendData(__assign({}, data), 'SERVER_ACTION', __assign(__assign({}, meta), convertFieldValuesToString(props)));\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    subscriptions.push(protocol.on('ready', function () { return emit('vps', { type: 'ready' }); }));\n    // пока voicePlayer не доступен, включение озвучки не будет отправлено\n    subscriptions.push(settings.on('changed', function (nextSettings, prevSettings) {\n        if (nextSettings.disableDubbing !== prevSettings.disableDubbing) {\n            voiceReady && protocol.changeSettings({ dubbing: nextSettings.disableDubbing ? -1 : 1 });\n        }\n    }));\n    // при неудачном переподключении к сокету\n    subscriptions.push(transport.on('error', function (error) {\n        voice.stop();\n        protocol.clearQueue();\n        emit('vps', { type: 'error', error: error });\n    }));\n    // обработка исходящих сообщений\n    subscriptions.push(protocol.on('outcoming', function (message) {\n        if (message.text || message.voice) {\n            /// не прерываем множественные ответы для сервер-экшенов\n            /// прервем, если получим карточку или бабл в ответ\n            lastMid = message.messageId;\n        }\n        emit('vps', { type: 'outcoming', message: message });\n    }));\n    // обработка ошибок\n    subscriptions.push(protocol.on('error', function (error) {\n        emit('error', error);\n    }));\n    // оповещение о статусах\n    subscriptions.push(client.on('status', function (status, _a) {\n        var messageId = _a.messageId;\n        emit('status', status, messageId);\n    }));\n    // история на запрос GetHistoryRequest\n    subscriptions.push(client.on('history', function (history) {\n        emit('history', history);\n    }));\n    // обработка входящих команд, и событий аппа\n    subscriptions.push(client.on('systemMessage', function (systemMessage, originalMessage) {\n        if (originalMessage.messageName === 'ANSWER_TO_USER') {\n            var _a = systemMessage.answerId, answerId = _a === void 0 ? 0 : _a, activate_app_info = systemMessage.activate_app_info, _b = systemMessage.items, items = _b === void 0 ? [] : _b, mesAppInfo = systemMessage.app_info;\n            var isChatApp = mesAppInfo && mesAppInfo.frontendType === 'CHAT_APP';\n            var isDialog = mesAppInfo && mesAppInfo.frontendType === 'DIALOG';\n            var isAppChanged = mesAppInfo && mesAppInfo.applicationId !== app.info.applicationId;\n            if (\n            // DIALOG не попадает в current_app\n            !isDialog &&\n                isAppChanged &&\n                /// игнорируем activate_app_info для чатапов\n                /// по-умолчанию activate_app_info: true\n                (isChatApp || activate_app_info !== false)) {\n                emit('app', { type: 'run', app: mesAppInfo });\n            }\n            if (isDialog && isAppChanged && app.info.applicationId !== DEFAULT_APPLICATION_ID) {\n                emit('app', { type: 'run', app: DEFAULT_APP });\n            }\n            // cancel для множественных ответов\n            if (answerId >= 2 && lastMid > originalMessage.messageId) {\n                client.sendCancel(originalMessage.messageId);\n            }\n            // последним сообщением считаем, только если пришли карточки/баблы\n            if (lastMid < originalMessage.messageId && items.findIndex(function (_a) {\n                var bubble = _a.bubble, card = _a.card;\n                return bubble || card;\n            }) >= 0) {\n                lastMid = originalMessage.messageId;\n            }\n            if (items.length) {\n                var _loop_1 = function (i) {\n                    var command = items[i].command;\n                    if (typeof command !== 'undefined') {\n                        window.setTimeout(function () { return emit('command', command); });\n                        if (command.type === 'start_music_recognition') {\n                            voice.shazam();\n                            return { value: void 0 };\n                        }\n                        if (command.type === 'request_permissions' && mesAppInfo) {\n                            sendMetaForPermissionRequest(originalMessage.messageId, mesAppInfo, command.permissions);\n                            return { value: void 0 };\n                        }\n                        if (command.type === 'action') {\n                            emit('actionCommand', {\n                                type: 'command',\n                                command: command,\n                                appInfo: mesAppInfo,\n                            });\n                        }\n                        if (mesAppInfo && BASIC_SMART_APP_COMMANDS_TYPES.includes(command.type)) {\n                            // эмитим все команды, т.к бывают фоновые команды\n                            emit('app', {\n                                type: 'command',\n                                command: __assign(__assign({}, command), { sdk_meta: {\n                                        mid: originalMessage.messageId.toString(),\n                                        requestId: requestIdMap[originalMessage.messageId.toString()],\n                                    } }),\n                                app: mesAppInfo,\n                            });\n                        }\n                        if (command.type === 'close_app' && !isDialog) {\n                            closeApp(mesAppInfo);\n                        }\n                    }\n                };\n                for (var i = 0; i < items.length; i++) {\n                    var state_1 = _loop_1(i);\n                    if (typeof state_1 === \"object\")\n                        return state_1.value;\n                }\n            }\n            emit('vps', { type: 'incoming', systemMessage: systemMessage, originalMessage: originalMessage });\n        }\n    }));\n    // прокидывает команды backgroundApp'ов в их подписчики\n    on('app', function (event) {\n        var _a;\n        if (event.type === 'command') {\n            var backgroundAppOnCommand = (_a = backgroundApps[event.app.applicationId]) === null || _a === void 0 ? void 0 : _a.commandsSubscribers;\n            if (Array.isArray(backgroundAppOnCommand)) {\n                backgroundAppOnCommand.forEach(function (onCommand) {\n                    var _a;\n                    onCommand(event.command, (_a = event.command.sdk_meta) === null || _a === void 0 ? void 0 : _a.mid);\n                });\n            }\n        }\n    });\n    /** уничтожает ассистент, очищает подписки */\n    var destroy = function () {\n        voice.destroy();\n        client.destroy();\n        protocol.destroy();\n        subscriptions.splice(0, subscriptions.length).map(function (unsubscribe) { return unsubscribe(); });\n    };\n    /** запускает ассистент (приветствие) */\n    var start = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.disableGreetings, disableGreetings = _c === void 0 ? false : _c, _d = _b.initPhrase, initPhrase = _d === void 0 ? undefined : _d, _e = _b.isFirstSession, isFirstSession = _e === void 0 ? false : _e;\n        return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        if (!(!disableGreetings && isDefaultApp(app.info))) return [3 /*break*/, 2];\n                        return [4 /*yield*/, client.sendOpenAssistant({ isFirstSession: isFirstSession })];\n                    case 1:\n                        _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        if (initPhrase) {\n                            return [2 /*return*/, client\n                                    .sendText(initPhrase)\n                                    .then(function (messageId) { return (messageId ? client.waitForAnswer(messageId) : undefined); })];\n                        }\n                        return [2 /*return*/, undefined];\n                }\n            });\n        });\n    };\n    return {\n        get activeApp() {\n            return !isDefaultApp(app.info) ? app.info : null;\n        },\n        get settings() {\n            return Object.create(Object.getPrototypeOf(settings.current), Object.getOwnPropertyDescriptors(settings.current));\n        },\n        destroy: destroy,\n        closeApp: closeApp,\n        listen: voice.listen,\n        shazam: voice.shazam,\n        sendServerAction: sendServerAction,\n        getHistoryRequest: protocol.getHistoryRequest,\n        sendText: sendText,\n        sendVoice: voice.sendVoice,\n        streamVoice: voice.streamVoice,\n        start: start,\n        stop: function () {\n            voice.stop();\n            if (lastMid !== 0) {\n                client.sendCancel(lastMid);\n            }\n            setTimeout(function () {\n                protocol.clearQueue();\n                transport.close();\n            });\n        },\n        stopTts: voice.stopPlaying,\n        stopVoice: voice.stop,\n        emit: emit,\n        on: on,\n        changeConfiguration: protocol.changeConfiguration,\n        changeSettings: settings.change,\n        changeSdkMeta: function (nextSdkMeta) {\n            sdkMeta = __assign(__assign({}, sdkMeta), nextSdkMeta);\n        },\n        reconnect: protocol.reconnect,\n        get protocol() {\n            return protocol;\n        },\n        setActiveApp: function (info, getState) {\n            app = { info: info, getState: getState };\n        },\n        addBackgroundApp: function (_a) {\n            var appInfo = _a.appInfo, getState = _a.getState;\n            backgroundApps[appInfo.applicationId] = {\n                appInfo: appInfo,\n                getState: getState,\n                commandsSubscribers: [],\n            };\n            var remove = function () {\n                delete backgroundApps[appInfo.applicationId];\n            };\n            var onCommand = function (subscriber) {\n                var _a;\n                (_a = backgroundApps[appInfo.applicationId]) === null || _a === void 0 ? void 0 : _a.commandsSubscribers.push(subscriber);\n                return {\n                    clearSubscribers: function () {\n                        if (backgroundApps[appInfo.applicationId]) {\n                            backgroundApps[appInfo.applicationId].commandsSubscribers = [];\n                        }\n                    },\n                };\n            };\n            var sendServerActionToBackgroundApp = function (serverAction, messageName, requestId) {\n                var _a;\n                if (messageName === void 0) { messageName = 'SERVER_ACTION'; }\n                if (requestId === void 0) { requestId = undefined; }\n                return sendServerAction(serverAction, messageName, requestId, (_a = backgroundApps[appInfo.applicationId]) === null || _a === void 0 ? void 0 : _a.appInfo);\n            };\n            return {\n                remove: remove,\n                onCommand: onCommand,\n                sendServerAction: sendServerActionToBackgroundApp,\n            };\n        },\n        get status() {\n            return protocol.status;\n        },\n        setDefaultCharacterMeta: function (characterId) {\n            defaultCharacter = characterId;\n        },\n    };\n};\n\nexport { createNavigatorAudioProvider as a, asrExports as b, createAssistant as c };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}